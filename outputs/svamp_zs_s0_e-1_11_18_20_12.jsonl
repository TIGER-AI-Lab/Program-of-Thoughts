{"question": "How much do you have to pay to buy each pack?", "passage": "Each pack of dvds costs 76 dollars. If there is a discount of 25 dollars on each pack.", "executed": 51.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Each pack of dvds costs 76 dollars. If there is a discount of 25 dollars on each pack. How much do you have to pay to buy each pack?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    price = 76\n    discount = 25\n    # Now, we can calculate the final price:\n    final_price = price - discount\n    return final_price\nans = solver()", "answer": 51.0}
{"question": "How much did the candy bar cost?", "passage": "Dan had $ 3 left with him after he bought a candy bar. If he had $ 4 at the start.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dan had $ 3 left with him after he bought a candy bar. If he had $ 4 at the start. How much did the candy bar cost?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    start = 4\n    end = 3\n    candy_bar = start - end\n    return candy_bar\nans = solver()", "answer": 1.0}
{"question": "How many salty cookies did Paco have left?", "passage": "Paco had 26 salty cookies and 17 sweet cookies. He ate 14 sweet cookies and 9 salty cookies.", "executed": 17.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paco had 26 salty cookies and 17 sweet cookies. He ate 14 sweet cookies and 9 salty cookies. How many salty cookies did Paco have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    salty_cookies = 26\n    sweet_cookies = 17\n    eaten_sweet_cookies = 14\n    eaten_salty_cookies = 9\n    # Now, we can calculate the answer:\n    salty_cookies_left = salty_cookies - eaten_salty_cookies\n    return salty_cookies_left\nans = solver()", "answer": 17.0}
{"question": "How many children got off the bus at the bus stop?", "passage": "43 children were riding on the bus. At the bus stop some children got off the bus. Then there were 21 children left on the bus.", "executed": 22.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 43 children were riding on the bus. At the bus stop some children got off the bus. Then there were 21 children left on the bus. How many children got off the bus at the bus stop?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    children_on_bus = 43\n    children_left_on_bus = 21\n    children_got_off_bus = children_on_bus - children_left_on_bus\n    return children_got_off_bus\nans = solver()", "answer": 22.0}
{"question": "How many more children got on the bus than those that got off?", "passage": "28 children were riding on the bus. At the bus stop 82 children got on the bus while some got off the bus. Then there were 30 children altogether on the bus.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: 28 children were riding on the bus. At the bus stop 82 children got on the bus while some got off the bus. Then there were 30 children altogether on the bus. How many more children got on the bus than those that got off?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 28 children were riding on the bus.\n    children_on_bus = 28\n    # At the bus stop 82 children got on the bus\n    children_got_on_bus = 82\n    # while some got off the bus.\n    children_got_off_bus = ?\n    # Then there were 30 children altogether on the bus.\n    children_on_bus_after = 30\n    # How many more children got on the bus than those that got off?\n    children_got_on_bus_more_than_got_off_bus = ?\n    return children_got_on_bus_more_than_got_off_bus\nans = solver()", "answer": 2.0}
{"question": "How much more money did she collect at the atm than she spent at the supermarket?", "passage": "There were 3 dollars in Olivia's wallet. She collected 49 more dollars from an atm. After she visited a supermarket there were 49 dollars left.", "executed": 0.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 3 dollars in Olivia's wallet. She collected 49 more dollars from an atm. After she visited a supermarket there were 49 dollars left. How much more money did she collect at the atm than she spent at the supermarket?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Olivia's wallet: 3 dollars\n    wallet = 3\n    # Collected 49 more dollars from an atm\n    atm = 49\n    # After she visited a supermarket there were 49 dollars left\n    supermarket = 49\n    # How much more money did she collect at the atm than she spent at the supermarket?\n    answer = atm - supermarket\n    return answer\nans = solver()", "answer": 46.0}
{"question": "How many action figures did he have initially on the shelf?", "passage": "Jerry had some action figures on a shelf in his room. Later he added 7 more action figures to the shelf. If there are a total of 10 action figures on his shelf now.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jerry had some action figures on a shelf in his room. Later he added 7 more action figures to the shelf. If there are a total of 10 action figures on his shelf now. How many action figures did he have initially on the shelf?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   x: the number of action figures Jerry had initially on the shelf\n    #   y: the number of action figures Jerry added to the shelf\n    #   z: the number of action figures Jerry has on the shelf now\n    x = 0\n    y = 7\n    z = 10\n    # Now we can write the equation:\n    #   x + y = z\n    #   x + 7 = 10\n    #   x = 10 - 7\n    x = z - y\n    return x\nans = solver()", "answer": 3.0}
{"question": "How many more cookies did he eat than those he gave to his friend?", "passage": "Paco had 41 cookies. He gave 9 cookies to his friend and ate 18 cookies.", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paco had 41 cookies. He gave 9 cookies to his friend and ate 18 cookies. How many more cookies did he eat than those he gave to his friend?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookies_paco_had = 41\n    cookies_paco_gave = 9\n    cookies_paco_ate = 18\n    cookies_paco_ate_more_than_gave = cookies_paco_ate - cookies_paco_gave\n    return cookies_paco_ate_more_than_gave\nans = solver()", "answer": 9.0}
{"question": "How many more cups of flour does she need to add?", "passage": "Mary is baking a cake. The recipe calls for 3 cups of sugar 10 cups of flour and 15 cups of salt. She already put in 6 cups of flour.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 3 cups of sugar 10 cups of flour and 15 cups of salt. She already put in 6 cups of flour. How many more cups of flour does she need to add?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sugar = 3\n    flour = 10\n    salt = 15\n    flour_added = 6\n    flour_needed = flour - flour_added\n    return flour_needed\nans = solver()", "answer": 4.0}
{"question": "How many customers did he have at the start?", "passage": "A waiter had some customers. After 9 customers left he still had 12 customers.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter had some customers. After 9 customers left he still had 12 customers. How many customers did he have at the start?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x: the number of customers at the start\n    # y: the number of customers left\n    # z: the number of customers still there\n    x = 0\n    y = 0\n    z = 0\n    # Now we have to find the values of x, y, z\n    # We know that after 9 customers left, he still had 12 customers\n    # So, z = 12\n    z = 12\n    # We also know that he had some customers at the start\n    # So, x > 0\n    x = 1\n    # We also know that he had some customers left\n    # So, y > 0\n    y = 1\n    # We also know that he had some customers left\n    # So, y < x\n    y = x - 1\n    # We also know that he had some customers left\n    # So, y < z\n    y = z - 1\n    # We also know that he had some customers left\n    # So, y = x - z\n    y = x - z\n    # We also know that he had some customers left\n    # So, y = x - 12\n    y = x - 12\n    # We also know that he had some customers left\n    # So, y = x - 9\n    y = x - 9\n    # We also know that he had some customers left\n    # So, y = x - 9\n    y = x - 9\n    # We also know that he had some customers left\n    # So, y = x - 9\n    y\nans = solver()", "answer": 21.0}
{"question": "How many more storks than birds are sitting on the fence?", "passage": "3 birds were sitting on the fence. 6 more storks and 2 more birds came to join them.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 3 birds were sitting on the fence. 6 more storks and 2 more birds came to join them. How many more storks than birds are sitting on the fence?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    birds = 3\n    storks = 0\n    # Now, 6 more storks and 2 more birds came to join them.\n    storks += 6\n    birds += 2\n    # How many more storks than birds are sitting on the fence?\n    return storks - birds\nans = solver()", "answer": 1.0}
{"question": "How many chairs do they have in the backyard?", "passage": "They decided to hold the party in their backyard. If they have 11 sets of tables and each set has 13 chairs.", "executed": 143.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: They decided to hold the party in their backyard. If they have 11 sets of tables and each set has 13 chairs. How many chairs do they have in the backyard?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sets_of_tables = 11\n    chairs_per_set = 13\n    total_chairs = sets_of_tables * chairs_per_set\n    return total_chairs\nans = solver()", "answer": 143.0}
{"question": "How many pupils are there in that school?", "passage": "In a school there are 458 more girls than boys. If there are 692 girls.", "executed": 926.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In a school there are 458 more girls than boys. If there are 692 girls. How many pupils are there in that school?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    girls = 692\n    boys = girls - 458\n    pupils = girls + boys\n    return pupils\nans = solver()", "answer": 926.0}
{"question": "How deep was the water?", "passage": "After resting they decided to go for a swim. The depth of the water is 15 times Dean's height. Dean is 4 feet taller than Ron. If Ron stands at 13 feet.", "executed": 255.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: After resting they decided to go for a swim. The depth of the water is 15 times Dean's height. Dean is 4 feet taller than Ron. If Ron stands at 13 feet. How deep was the water?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Dean's height = d\n    # Ron's height = r\n    # Water depth = w\n    # We can also define the relationship between the variables:\n    # w = 15 * d\n    # r = d - 4\n    # r = 13\n    # We can then solve for d and w\n    d = 13 + 4\n    w = 15 * d\n    return w\nans = solver()", "answer": 255.0}
{"question": "How many birds are sitting on the fence?", "passage": "6 birds were sitting on the fence. 4 more birds and 8 more storks came to join them.", "executed": 18.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 6 birds were sitting on the fence. 4 more birds and 8 more storks came to join them. How many birds are sitting on the fence?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    birds = 6\n    storks = 0\n    # Now, 4 more birds and 8 more storks came to join them.\n    birds += 4\n    storks += 8\n    # How many birds are sitting on the fence?\n    birds += storks\n    return birds\nans = solver()", "answer": 10.0}
{"question": "How much did his dad's strawberries weigh now?", "passage": "Marco and his dad went strawberry picking. Together they collected strawberries that weighed 36 pounds. On the way back Marco ' dad lost 8 pounds of strawberries. Marco's strawberries now weighed 12 pounds.", "executed": 16.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Marco and his dad went strawberry picking. Together they collected strawberries that weighed 36 pounds. On the way back Marco ' dad lost 8 pounds of strawberries. Marco's strawberries now weighed 12 pounds. How much did his dad's strawberries weigh now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marco_strawberries = 12\n    dad_strawberries = 36 - marco_strawberries\n    dad_strawberries_lost = 8\n    dad_strawberries_now = dad_strawberries - dad_strawberries_lost\n    return dad_strawberries_now\nans = solver()", "answer": 16.0}
{"question": "How many boys are there in that school?", "passage": "In a school there are 697 girls and the rest are boys. If there are 228 more girls than boys.", "executed": -228.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In a school there are 697 girls and the rest are boys. If there are 228 more girls than boys. How many boys are there in that school?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    girls = 697\n    boys = 0\n    total_students = 0\n    difference = 228\n    # Now, we can use the given information to derive the answer\n    total_students = girls + boys\n    boys = total_students - girls\n    boys = boys - difference\n    return boys\nans = solver()", "answer": 469.0}
{"question": "How many girls are there in the school now?", "passage": "In a school there are 732 girls and 761 boys. 682 more girls and 8 more boys joined the school.", "executed": 1414.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In a school there are 732 girls and 761 boys. 682 more girls and 8 more boys joined the school. How many girls are there in the school now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    girls = 732\n    boys = 761\n    girls_joined = 682\n    boys_joined = 8\n    girls_total = girls + girls_joined\n    boys_total = boys + boys_joined\n    return girls_total\nans = solver()", "answer": 1414.0}
{"question": "How many wrappers did danny have at first?", "passage": "Danny collects bottle caps and wrappers. He found 22 bottle caps and 30 wrappers at the park. Now he has 17 bottle caps and 57 wrappers in his collection.", "executed": 48.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Danny collects bottle caps and wrappers. He found 22 bottle caps and 30 wrappers at the park. Now he has 17 bottle caps and 57 wrappers in his collection. How many wrappers did danny have at first?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bottle_caps = 22\n    wrappers = 30\n    bottle_caps_collected = 17\n    wrappers_collected = 57\n    wrappers_at_first = 0\n    # Now we can calculate the answer:\n    wrappers_at_first = wrappers + wrappers_collected - (bottle_caps + bottle_caps_collected)\n    return wrappers_at_first\nans = solver()", "answer": 27.0}
{"question": "How many more crayons than erasers did he have left?", "passage": "Paul got a box of 457 erasers and 617 crayons for his birthday. At the end of the school year he only had 523 crayons left while not having lost a single eraser.", "executed": 94.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul got a box of 457 erasers and 617 crayons for his birthday. At the end of the school year he only had 523 crayons left while not having lost a single eraser. How many more crayons than erasers did he have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    erasers = 457\n    crayons = 617\n    crayons_left = 523\n    erasers_left = 457\n    crayons_lost = crayons - crayons_left\n    erasers_lost = erasers - erasers_left\n    crayons_more = crayons_lost - erasers_lost\n    return crayons_more\nans = solver()", "answer": 66.0}
{"question": "How many cakes does baker still have?", "passage": "Baker made 121 cakes. He sold 105 of them and bought 170 new cakes.", "executed": 186.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 121 cakes. He sold 105 of them and bought 170 new cakes. How many cakes does baker still have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cakes_baker_made = 121\n    cakes_baker_sold = 105\n    cakes_baker_bought = 170\n    cakes_baker_still_have = 0\n    # Now, we can calculate the answer:\n    cakes_baker_still_have = cakes_baker_made - cakes_baker_sold + cakes_baker_bought\n    return cakes_baker_still_have\nans = solver()", "answer": 186.0}
{"question": "How many shirts did machine make?", "passage": "An industrial machine worked for 5 minutes. It can make 4 shirts a minute.", "executed": 20.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: An industrial machine worked for 5 minutes. It can make 4 shirts a minute. How many shirts did machine make?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    time = 5\n    shirts_per_minute = 4\n    shirts = time * shirts_per_minute\n    return shirts\nans = solver()", "answer": 20.0}
{"question": "How many groups are there?", "passage": "The bananas in Philip's collection are organized into groups of size 18. If there are a total of 180 bananas in Philip's banana collection.", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The bananas in Philip's collection are organized into groups of size 18. If there are a total of 180 bananas in Philip's banana collection. How many groups are there?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    total_bananas = 180\n    group_size = 18\n    # Now, we can calculate the number of groups:\n    num_groups = total_bananas / group_size\n    return num_groups\nans = solver()", "answer": 10.0}
{"question": "How many birds had been sitting on the fence at the start?", "passage": "There were some birds sitting on the fence. 4 more birds came to join them. If there are a total of 5 birds on the fence now.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were some birds sitting on the fence. 4 more birds came to join them. If there are a total of 5 birds on the fence now. How many birds had been sitting on the fence at the start?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # birds_on_fence_at_start = ?\n    # birds_on_fence_at_end = 5\n    # birds_joined = 4\n    birds_on_fence_at_start = 5 - 4\n    return birds_on_fence_at_start\nans = solver()", "answer": 1.0}
{"question": "How many action figures did he remove from the shelf?", "passage": "Jerry had 3 action figures on a shelf in his room. Later he added 4 more action figures to the shelf and removed some of the old ones. If there are 6 action figures on his shelf now.", "executed": -2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jerry had 3 action figures on a shelf in his room. Later he added 4 more action figures to the shelf and removed some of the old ones. If there are 6 action figures on his shelf now. How many action figures did he remove from the shelf?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   x: the number of action figures Jerry had on the shelf in his room\n    #   y: the number of action figures Jerry added to the shelf\n    #   z: the number of action figures Jerry removed from the shelf\n    #   w: the number of action figures on the shelf now\n    x = 3\n    y = 4\n    w = 6\n    z = y - w\n    return z\nans = solver()", "answer": 1.0}
{"question": "How many more wrappers than bottle caps did danny find at the park?", "passage": "Danny collects bottle caps and wrappers. He found 65 wrappers and 5 bottle caps at the park. Now he has 31 bottle caps and 9 wrappers in his collection.", "executed": 38.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Danny collects bottle caps and wrappers. He found 65 wrappers and 5 bottle caps at the park. Now he has 31 bottle caps and 9 wrappers in his collection. How many more wrappers than bottle caps did danny find at the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    wrappers_found = 65\n    caps_found = 5\n    wrappers_collected = 9\n    caps_collected = 31\n    # Now we can calculate the number of wrappers and caps that Danny has in his collection\n    wrappers_in_collection = wrappers_found + wrappers_collected\n    caps_in_collection = caps_found + caps_collected\n    # Now we can calculate the difference between the number of wrappers and caps in his collection\n    difference = wrappers_in_collection - caps_in_collection\n    return difference\nans = solver()", "answer": 60.0}
{"question": "How many students participated in the suggestion of new food items?", "passage": "Because of the decision Sofia asked the students to suggest specific types of food from a total of 66 choices. If 450 students suggested adding mashed potatoes 38 suggested adding bacon to the menu and the rest did not participate.", "executed": 225.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Because of the decision Sofia asked the students to suggest specific types of food from a total of 66 choices. If 450 students suggested adding mashed potatoes 38 suggested adding bacon to the menu and the rest did not participate. How many students participated in the suggestion of new food items?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of students who participated in the suggestion of new food items\n    # y = number of students who suggested adding mashed potatoes\n    # z = number of students who suggested adding bacon to the menu\n    # x + y + z = 450\n    # y = 450 - x - z\n    # z = 450 - x - y\n    # x + 450 - x - z + 450 - x - y = 450\n    # 2x = 450\n    # x = 225\n    return 225\nans = solver()", "answer": 488.0}
{"question": "How many crackers and cakes did each person eat?", "passage": "Matthew gave equal numbers of crackers and cakes to his 28 friends. If he had 13 crackers and 15 cakes initially.", "executed": 0.4642857142857143, "generated": "\nimport math\nimport numpy as np\n\n# Question: Matthew gave equal numbers of crackers and cakes to his 28 friends. If he had 13 crackers and 15 cakes initially. How many crackers and cakes did each person eat?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    crackers = 13\n    cakes = 15\n    friends = 28\n    # Now, we can calculate the number of crackers and cakes each person ate:\n    crackers_per_person = crackers / friends\n    cakes_per_person = cakes / friends\n    return crackers_per_person, cakes_per_person\nans = solver()", "answer": 1.0}
{"question": "How many bottles of regular soda and diet soda did they have altogether?", "passage": "A grocery store had 49 bottles of regular soda, 40 bottles of diet soda and 6 bottles of lite soda.", "executed": 89.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A grocery store had 49 bottles of regular soda, 40 bottles of diet soda and 6 bottles of lite soda. How many bottles of regular soda and diet soda did they have altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    regular_soda = 49\n    diet_soda = 40\n    lite_soda = 6\n    # Now, we can calculate the answer:\n    answer = regular_soda + diet_soda\n    return answer\nans = solver()", "answer": 89.0}
{"question": "How much did each candy bar cost?", "passage": "Dan has $ 3. He bought 2 candy bar for $ 4, each one costing the same amount of money.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dan has $ 3. He bought 2 candy bar for $ 4, each one costing the same amount of money. How much did each candy bar cost?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Dan's money = 3\n    # Candy bar = 2\n    # Total cost = 4\n    # Each candy bar cost = ?\n    # We can use the formula:\n    # Total cost = Each candy bar cost * Candy bar\n    # 4 = ? * 2\n    # ? = 4 / 2\n    # ? = 2\n    return 2\nans = solver()", "answer": 2.0}
{"question": "How many more bags did she find on the next day than she had on monday?", "passage": "Tiffany was collecting cans for recycling. On monday she had 7 bags of cans. The next day she found 12 more bags worth of cans.", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Tiffany was collecting cans for recycling. On monday she had 7 bags of cans. The next day she found 12 more bags worth of cans. How many more bags did she find on the next day than she had on monday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 7\n    tuesday = 12\n    # Now we can calculate the difference between tuesday and monday\n    difference = tuesday - monday\n    return difference\nans = solver()", "answer": 5.0}
{"question": "How many roses did she cut?", "passage": "There were 15 roses and 62 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now 17 roses and 96 orchids in the vase.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 15 roses and 62 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now 17 roses and 96 orchids in the vase. How many roses did she cut?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    roses_before = 15\n    orchids_before = 62\n    roses_after = 17\n    orchids_after = 96\n    roses_cut = 0\n    orchids_cut = 0\n    # Now, we can calculate the number of roses and orchids cut by Jessica\n    roses_cut = roses_after - roses_before\n    orchids_cut = orchids_after - orchids_before\n    return roses_cut\nans = solver()", "answer": 2.0}
{"question": "How many baskets of peaches are there?", "passage": "There are some baskets of peaches. Each basket has 4 red peaches and 3 green peaches. If there are a total of 7 peaches in all baskets.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are some baskets of peaches. Each basket has 4 red peaches and 3 green peaches. If there are a total of 7 peaches in all baskets. How many baskets of peaches are there?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    red_peaches = 4\n    green_peaches = 3\n    total_peaches = 7\n    total_baskets = 0\n    # Now, we can use the variables to derive the answer.\n    total_baskets = total_peaches / (red_peaches + green_peaches)\n    return total_baskets\nans = solver()", "answer": 1.0}
{"question": "How much money does she have left?", "passage": "There were 78 dollars in Olivia's wallet. She spent 15 dollars at a supermarket.", "executed": 63.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 78 dollars in Olivia's wallet. She spent 15 dollars at a supermarket. How much money does she have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    money_in_wallet = 78\n    money_spent = 15\n    money_left = money_in_wallet - money_spent\n    return money_left\nans = solver()", "answer": 63.0}
{"question": "How many emails did Jack receive in the afternoon?", "passage": "Jack received 6 emails in the morning, 3 emails in the afternoon and some more in the evening. If he received a total of 10 emails in the day.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jack received 6 emails in the morning, 3 emails in the afternoon and some more in the evening. If he received a total of 10 emails in the day. How many emails did Jack receive in the afternoon?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning_emails = 6\n    afternoon_emails = 3\n    evening_emails = 10 - morning_emails - afternoon_emails\n    return afternoon_emails\nans = solver()", "answer": 1.0}
{"question": "How much money is left?", "passage": "Dan has $ 4. He bought a candy bar for $ 8. Then his friend have him $ 5.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dan has $ 4. He bought a candy bar for $ 8. Then his friend have him $ 5. How much money is left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    money_dan_has = 4\n    candy_bar_price = 8\n    money_dan_received = 5\n    money_dan_left = money_dan_has + money_dan_received - candy_bar_price\n    return money_dan_left\nans = solver()", "answer": 1.0}
{"question": "How many visited the Buckingham palace within 25 days?", "passage": "After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that 703 visitors came to the Buckingham palace on the previous day. If there were 246 visitors on that day.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that 703 visitors came to the Buckingham palace on the previous day. If there were 246 visitors on that day. How many visited the Buckingham palace within 25 days?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    visitors_per_day = 703\n    visitors_per_25_days = 246\n    visitors_per_25_days_in_25_days = visitors_per_25_days * 25\n    visitors_per_day_in_25_days = visitors_per_day * 25\n    visitors_per_day_in_25_days_in_25_days = visitors_per_day_in_25_days * 25\n    visitors_per_25_days_in_25_days_in_25_days = visitors_per_25_days_in_25_days * 25\n    visitors_per_25_days_in_25_days_in_25_days_in_25_days = visitors_per_25_days_in_25_days_in_25_days * 25\n    visitors_per_day_in_25_days_in_25_days_in_25_days_in_25_days = visitors_per_day_in_25_days_in_25_days_in_25_days * 25\n    visitors_per_day_in_25_days_in_25_days_in_25_days_in_25_days_in_25_days = visitors_per_day_in_25_days_in_25_days_in_25_days_in_25_days * 25\n    visitors_per_25_days_in_25_days_in_25_days_in_25_days_\nans = solver()", "answer": 949.0}
{"question": "How much more money did she receive from her mom than she did from her dad?", "passage": "For Gwen's birthday she received 5 dollars from her dad. Her mom gave her 7 more dollars. If she spent 4 dollars.", "executed": -2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For Gwen's birthday she received 5 dollars from her dad. Her mom gave her 7 more dollars. If she spent 4 dollars. How much more money did she receive from her mom than she did from her dad?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    dad = 5\n    mom = 7\n    spent = 4\n    # Now, we can calculate the answer:\n    answer = mom - dad - spent\n    return answer\nans = solver()", "answer": 2.0}
{"question": "How big is each group of oranges?", "passage": "There are 142 bananas and 356 oranges in Philip's collection. If the bananas are organized into 47 groups and oranges are organized into 178 groups.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 142 bananas and 356 oranges in Philip's collection. If the bananas are organized into 47 groups and oranges are organized into 178 groups. How big is each group of oranges?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bananas = 142\n    oranges = 356\n    banana_groups = 47\n    orange_groups = 178\n    # Now, we can calculate the size of each group of oranges:\n    orange_group_size = oranges / orange_groups\n    return orange_group_size\nans = solver()", "answer": 2.0}
{"question": "How many more movies than books have you read?", "passage": "There are 8 different books and 5 different movies in the ' crazy silly school ' series. If you read 19 of the movies and watched 16 of the books.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 8 different books and 5 different movies in the ' crazy silly school ' series. If you read 19 of the movies and watched 16 of the books. How many more movies than books have you read?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    books = 8\n    movies = 5\n    read_books = 19\n    watched_movies = 16\n    # Now, we can calculate the number of books and movies that we have not read or watched:\n    unread_books = books - read_books\n    unwatched_movies = movies - watched_movies\n    # Now, we can calculate the difference between the number of books and movies that we have read:\n    difference = read_books - watched_movies\n    return difference\nans = solver()", "answer": 3.0}
{"question": "How many cups of flour did she put in?", "passage": "Mary is baking a cake. The recipe calls for 12 cups of flour and 5 cups of sugar. She already put in some cups of flour. If she still needs 2 more cups of flour.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 12 cups of flour and 5 cups of sugar. She already put in some cups of flour. If she still needs 2 more cups of flour. How many cups of flour did she put in?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    flour_needed = 12\n    sugar_needed = 5\n    flour_put_in = ?\n    flour_still_needed = 2\n    # Now, we can write the equation:\n    flour_needed = flour_put_in + flour_still_needed\n    # We can solve the equation:\n    flour_put_in = flour_needed - flour_still_needed\n    return flour_put_in\nans = solver()", "answer": 10.0}
{"question": "How many more bottle caps than wrappers did danny find at the park?", "passage": "Danny collects bottle caps and wrappers. He found 46 wrappers and 50 bottle caps at the park. Now he has 21 bottle caps and 52 wrappers in his collection.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Danny collects bottle caps and wrappers. He found 46 wrappers and 50 bottle caps at the park. Now he has 21 bottle caps and 52 wrappers in his collection. How many more bottle caps than wrappers did danny find at the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # wrappers_found = 46\n    # caps_found = 50\n    # wrappers_now = 52\n    # caps_now = 21\n    wrappers_found = 46\n    caps_found = 50\n    wrappers_now = 52\n    caps_now = 21\n    # Now we can calculate the number of wrappers and caps that Danny has in his collection\n    wrappers_collected = wrappers_now - wrappers_found\n    caps_collected = caps_now - caps_found\n    # Now we can calculate the number of wrappers and caps that Danny has in his collection\n    wrappers_collected = wrappers_now - wrappers_found\n    caps_collected = caps_now - caps_found\n    # Now we can calculate the number of wrappers and caps that Danny has in his collection\n    wrappers_collected = wrappers_now - wrappers_found\n    caps_collected = caps_now - caps_found\n    # Now we can calculate the number of wrappers and caps that Danny has in his collection\n    wrappers_collected = wrappers_now - wrappers_found\n    caps_collected = caps_now - caps_found\n    # Now we can calculate the number of wrappers and caps that Danny has in his collection\n    wrappers_collected = wrappers_now - wrappers_found\n    caps_collected = caps_now - caps_found\n    # Now we can calculate the number of wrappers and caps that Danny has in his collection\nans = solver()", "answer": 4.0}
{"question": "How many points did he score in the game?", "passage": "Luke played 177 rounds of a trivia game. If he gained 46 points in each round.", "executed": 8142.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Luke played 177 rounds of a trivia game. If he gained 46 points in each round. How many points did he score in the game?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    rounds = 177\n    points = 46\n    score = rounds * points\n    return score\nans = solver()", "answer": 8142.0}
{"question": "How many more birds than storks are sitting on the fence?", "passage": "3 birds and 4 storks were sitting on the fence. 2 more birds came to join them.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 3 birds and 4 storks were sitting on the fence. 2 more birds came to join them. How many more birds than storks are sitting on the fence?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    birds = 3\n    storks = 4\n    more_birds = 2\n    more_storks = 0\n    # Now, we can calculate the total number of birds and storks:\n    total_birds = birds + more_birds\n    total_storks = storks + more_storks\n    # Finally, we can calculate the difference between the total number of birds and storks:\n    difference = total_birds - total_storks\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How far did the mouse jump?", "passage": "The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped 9 inches. The mouse jumped 3 inches lesser than the frog who jumped 33 inches farther than the grasshopper.", "executed": 39.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped 9 inches. The mouse jumped 3 inches lesser than the frog who jumped 33 inches farther than the grasshopper. How far did the mouse jump?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    grasshopper = 9\n    frog = grasshopper + 33\n    mouse = frog - 3\n    return mouse\nans = solver()", "answer": 39.0}
{"question": "How many more push-ups than crunches did Zachary do?", "passage": "Zachary did 35 push-ups and 3 crunches in gym class today. David did 58 more push-ups but 87 less crunches than zachary.", "executed": 32.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Zachary did 35 push-ups and 3 crunches in gym class today. David did 58 more push-ups but 87 less crunches than zachary. How many more push-ups than crunches did Zachary do?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    zachary_push_ups = 35\n    zachary_crunches = 3\n    david_push_ups = zachary_push_ups + 58\n    david_crunches = zachary_crunches - 87\n    zachary_push_ups_more_than_crunches = zachary_push_ups - zachary_crunches\n    return zachary_push_ups_more_than_crunches\nans = solver()", "answer": 32.0}
{"question": "How many emails did Jack receive in the afternoon and evening?", "passage": "Jack received 4 emails in the morning, 5 emails in the afternoon and 8 emails in the evening.", "executed": 13.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jack received 4 emails in the morning, 5 emails in the afternoon and 8 emails in the evening. How many emails did Jack receive in the afternoon and evening?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning = 4\n    afternoon = 5\n    evening = 8\n    # Now, we can calculate the answer:\n    answer = afternoon + evening\n    return answer\nans = solver()", "answer": 13.0}
{"question": "How many action figures did he add to the shelf?", "passage": "Jerry had 7 action figures on a shelf in his room. Later he added some more action figures to the shelf and removed 10 of the old ones. If there are 8 action figures on his shelf now.", "executed": 11.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jerry had 7 action figures on a shelf in his room. Later he added some more action figures to the shelf and removed 10 of the old ones. If there are 8 action figures on his shelf now. How many action figures did he add to the shelf?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    old_action_figures = 7\n    new_action_figures = 8\n    removed_action_figures = 10\n    added_action_figures = 0\n    # Now we can calculate the answer:\n    added_action_figures = new_action_figures - (old_action_figures - removed_action_figures)\n    return added_action_figures\nans = solver()", "answer": 11.0}
{"question": "How many kids did she play with altogether?", "passage": "Julia played tag with 12 kids on monday. She played tag with 14 kids on tuesday. She spent a total of 34 hours to play tag on both days.", "executed": 26.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Julia played tag with 12 kids on monday. She played tag with 14 kids on tuesday. She spent a total of 34 hours to play tag on both days. How many kids did she play with altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday_kids = 12\n    tuesday_kids = 14\n    total_hours = 34\n    total_kids = monday_kids + tuesday_kids\n    return total_kids\nans = solver()", "answer": 26.0}
{"question": "How many more baseball cards than Ace cards does Nell have?", "passage": "Nell collects cards. She had 309 baseball cards and 356 Ace cards. She gave some of her cards to Jeff and now has 415 baseball cards and Ace cards left.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Nell collects cards. She had 309 baseball cards and 356 Ace cards. She gave some of her cards to Jeff and now has 415 baseball cards and Ace cards left. How many more baseball cards than Ace cards does Nell have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Nell's baseball cards: x\n    # Nell's Ace cards: y\n    # Jeff's baseball cards: a\n    # Jeff's Ace cards: b\n    # Nell's baseball cards after giving some to Jeff: x - a\n    # Nell's Ace cards after giving some to Jeff: y - b\n    # Nell's baseball cards after giving some to Jeff: x - a\n    # Nell's Ace cards after giving some to Jeff: y - b\n    # Nell's baseball cards after giving some to Jeff: x - a\n    # Nell's Ace cards after giving some to Jeff: y - b\n    # Nell's baseball cards after giving some to Jeff: x - a\n    # Nell's Ace cards after giving some to Jeff: y - b\n    # Nell's baseball cards after giving some to Jeff: x - a\n    # Nell's Ace cards after giving some to Jeff: y - b\n    # Nell's baseball cards after giving some to Jeff: x - a\n    # Nell's Ace cards after giving some to Jeff: y - b\n    # Nell's baseball cards after giving some to Jeff: x - a\n    # Nell's Ace cards after giving some to Jeff: y - b\n    # Nell's baseball cards after giving some to Jeff: x - a\n    # Nell's Ace cards after giving some to Jeff: y - b\n    # Nell's baseball cards after giving some to Jeff: x - a\n    # Nell's Ace cards after giving some to Jeff\nans = solver()", "answer": 266.0}
{"question": "How many alligators were not hiding?", "passage": "At the zoo, a cage had 93 snakes and 97 alligators. If 40 alligators were hiding.", "executed": 57.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the zoo, a cage had 93 snakes and 97 alligators. If 40 alligators were hiding. How many alligators were not hiding?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    snakes = 93\n    alligators = 97\n    hiding_alligators = 40\n    not_hiding_alligators = alligators - hiding_alligators\n    return not_hiding_alligators\nans = solver()", "answer": 57.0}
{"question": "How many more do you still have to read?", "passage": "You have read 8 books from the ' crazy silly school ' series. If there are a total of 14 different books in the ' crazy silly school ' series.", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: You have read 8 books from the ' crazy silly school ' series. If there are a total of 14 different books in the ' crazy silly school ' series. How many more do you still have to read?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    read_books = 8\n    total_books = 14\n    # Now, we can calculate the answer:\n    books_to_read = total_books - read_books\n    return books_to_read\nans = solver()", "answer": 6.0}
{"question": "How many beads did each necklace need?", "passage": "Emily is making bead necklaces for her 43 friends. She had 20 beads and she was able to make 5 necklaces.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Emily is making bead necklaces for her 43 friends. She had 20 beads and she was able to make 5 necklaces. How many beads did each necklace need?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    beads = 20\n    necklaces = 5\n    beads_per_necklace = beads / necklaces\n    return beads_per_necklace\nans = solver()", "answer": 4.0}
{"question": "How many bags would he have?", "passage": "Frank put 11 pieces of candy in each bag. If he had 22 pieces of candy.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank put 11 pieces of candy in each bag. If he had 22 pieces of candy. How many bags would he have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    candy_per_bag = 11\n    total_candy = 22\n    # Now, we can calculate the number of bags:\n    num_bags = total_candy / candy_per_bag\n    return num_bags\nans = solver()", "answer": 2.0}
{"question": "How many customers does he have now?", "passage": "A waiter had 12 customers. After some left he still had 14 customers. Then he got 10 new customers.", "executed": 36.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter had 12 customers. After some left he still had 14 customers. Then he got 10 new customers. How many customers does he have now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 12 customers left, 14 customers left, 10 new customers\n    customers_left = 12\n    customers_left_2 = 14\n    new_customers = 10\n    # Now we can calculate the total customers:\n    total_customers = customers_left + customers_left_2 + new_customers\n    return total_customers\nans = solver()", "answer": 24.0}
{"question": "How many tomatoes did he pick in all?", "passage": "A farmer had 90 tomatoes in his garden. If he picked 154 of them yesterday and 50 today.", "executed": 204.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A farmer had 90 tomatoes in his garden. If he picked 154 of them yesterday and 50 today. How many tomatoes did he pick in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    tomatoes_in_garden = 90\n    tomatoes_picked_yesterday = 154\n    tomatoes_picked_today = 50\n    tomatoes_picked_in_all = 0\n    # Now, we can calculate the answer:\n    tomatoes_picked_in_all = tomatoes_picked_yesterday + tomatoes_picked_today\n    return tomatoes_picked_in_all\nans = solver()", "answer": 204.0}
{"question": "How many green and yellow peaches are in the basket?", "passage": "5 red peaches, 14 yellow peaches and 6 green peaches are in the basket.", "executed": 20.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 5 red peaches, 14 yellow peaches and 6 green peaches are in the basket. How many green and yellow peaches are in the basket?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    red = 5\n    yellow = 14\n    green = 6\n    total = red + yellow + green\n    print(\"Total peaches: \", total)\n    print(\"Red peaches: \", red)\n    print(\"Yellow peaches: \", yellow)\n    print(\"Green peaches: \", green)\n    print(\"Yellow and green peaches: \", yellow + green)\n    return yellow + green\nans = solver()", "answer": 20.0}
{"question": "How many more bird families flew away for the winter than those that stayed behind?", "passage": "Winter is almost here and most animals are migrating to warmer countries. There were 89 bird families living near the mountain. If 60 bird families flew away for winter.", "executed": 31.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Winter is almost here and most animals are migrating to warmer countries. There were 89 bird families living near the mountain. If 60 bird families flew away for winter. How many more bird families flew away for the winter than those that stayed behind?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bird_families_living_near_the_mountain = 89\n    bird_families_flew_away_for_winter = 60\n    bird_families_stayed_behind = bird_families_living_near_the_mountain - bird_families_flew_away_for_winter\n    bird_families_flew_away_for_winter_than_those_that_stayed_behind = bird_families_flew_away_for_winter - bird_families_stayed_behind\n    return bird_families_flew_away_for_winter_than_those_that_stayed_behind\nans = solver()", "answer": 31.0}
{"question": "How many more orchids than roses are there in the vase now?", "passage": "There were 9 roses and 6 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now 13 orchids and 3 roses in the vase.", "executed": 13.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 9 roses and 6 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now 13 orchids and 3 roses in the vase. How many more orchids than roses are there in the vase now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    roses_before = 9\n    orchids_before = 6\n    roses_after = 3\n    orchids_after = 13\n    # Now, we can calculate the difference between the number of orchids before and after:\n    orchids_difference = orchids_after - orchids_before\n    # We can also calculate the difference between the number of roses before and after:\n    roses_difference = roses_after - roses_before\n    # Now, we can calculate the difference between the number of orchids and roses after:\n    orchids_and_roses_difference = orchids_difference - roses_difference\n    # Finally, we can return the answer:\n    return orchids_and_roses_difference\nans = solver()", "answer": 10.0}
{"question": "How many more visitors visited the Buckingham palace on that day than on the previous day?", "passage": "After eating a hearty meal they went to see the Buckingham palace. There were 39 paintings in the Buckingham palace. There, Rachel learned that 661 visitors came to the Buckingham palace that day. If there were 600 visitors the previous day.", "executed": 61.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: After eating a hearty meal they went to see the Buckingham palace. There were 39 paintings in the Buckingham palace. There, Rachel learned that 661 visitors came to the Buckingham palace that day. If there were 600 visitors the previous day. How many more visitors visited the Buckingham palace on that day than on the previous day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    paintings = 39\n    visitors_today = 661\n    visitors_yesterday = 600\n    visitors_difference = visitors_today - visitors_yesterday\n    return visitors_difference\nans = solver()", "answer": 61.0}
{"question": "How many customers does he still have?", "passage": "A waiter had 12 customers. While 15 customers left he got 14 new customers.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter had 12 customers. While 15 customers left he got 14 new customers. How many customers does he still have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x: the number of customers the waiter had at the beginning\n    # y: the number of customers the waiter had at the end\n    x = 12\n    y = 14\n    return y - x\nans = solver()", "answer": 11.0}
{"question": "How many necklaces can Emily make?", "passage": "Emily is making bead necklaces for her 72 friends. She has 6 beads and each necklace takes 3 beads.", "executed": 0.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Emily is making bead necklaces for her 72 friends. She has 6 beads and each necklace takes 3 beads. How many necklaces can Emily make?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    beads = 6\n    friends = 72\n    beads_per_necklace = 3\n    necklaces = 0\n    # Now, we can start to solve the problem:\n    necklaces = beads // beads_per_necklace\n    necklaces = necklaces // friends\n    return necklaces\nans = solver()", "answer": 2.0}
{"question": "How many saltwater animals does each aquarium have?", "passage": "He also had 26 aquariums for saltwater animals. The aquarium had 52 saltwater animals in total and every aquarium had the same number of animals.", "executed": 1352.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He also had 26 aquariums for saltwater animals. The aquarium had 52 saltwater animals in total and every aquarium had the same number of animals. How many saltwater animals does each aquarium have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. The number of aquariums for saltwater animals: n\n    # 2. The number of saltwater animals in each aquarium: x\n    # 3. The total number of saltwater animals: y\n    n = 26\n    x = 52\n    y = n * x\n    return y\nans = solver()", "answer": 2.0}
{"question": "How many cups of flour did she put in?", "passage": "Mary is baking a cake. The recipe calls for 11 cups of flour and 7 cups of sugar. She already put in some cups of flour. If she still needs 2 more cups of flour than sugar.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 11 cups of flour and 7 cups of sugar. She already put in some cups of flour. If she still needs 2 more cups of flour than sugar. How many cups of flour did she put in?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    flour = 0\n    sugar = 0\n    # We know that the total amount of flour is 11 cups, and the total amount of sugar is 7 cups.\n    total_flour = 11\n    total_sugar = 7\n    # We know that the amount of flour that Mary put in is more than the amount of sugar that Mary put in.\n    flour = sugar + 2\n    # We know that the amount of flour that Mary put in is less than the total amount of flour.\n    flour < total_flour\n    # We know that the amount of sugar that Mary put in is less than the total amount of sugar.\n    sugar < total_sugar\n    # We know that the amount of flour that Mary put in is more than 0.\n    flour > 0\n    # We know that the amount of sugar that Mary put in is more than 0.\n    sugar > 0\n    # We know that the amount of flour that Mary put in is less than the total amount of flour.\n    flour < total_flour\n    # We know that the amount of sugar that Mary put in is less than the total amount of sugar.\n    sugar < total_sugar\n    # We know that the amount of flour that Mary put in is more than the amount of sugar that Mary put in.\n    flour > sugar\n    # We know that the amount of flour that Mary put in is 2 more than the amount of sugar that Mary put in.\n    flour = sugar + 2\n    # We know that the amount of flour that Mary put in is less than the total\nans = solver()", "answer": 2.0}
{"question": "How many cakes would baker still have?", "passage": "Baker made 149 cakes and 91 pastries. If he sold 10 cakes and 90 pastries.", "executed": 139.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 149 cakes and 91 pastries. If he sold 10 cakes and 90 pastries. How many cakes would baker still have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cakes = 149\n    pastries = 91\n    sold_cakes = 10\n    sold_pastries = 90\n    # Now, we can calculate the remaining cakes and pastries:\n    remaining_cakes = cakes - sold_cakes\n    remaining_pastries = pastries - sold_pastries\n    # Finally, we can return the answer:\n    return remaining_cakes\nans = solver()", "answer": 139.0}
{"question": "How many files did he delete?", "passage": "Dave had 24 files and 13 apps on his phone. After deleting some apps and files he had 17 apps and 21 files left.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dave had 24 files and 13 apps on his phone. After deleting some apps and files he had 17 apps and 21 files left. How many files did he delete?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   x: the number of files Dave deleted\n    #   y: the number of apps Dave deleted\n    #   z: the number of files Dave had\n    #   w: the number of apps Dave had\n    #   a: the number of files Dave had after deleting some apps and files\n    #   b: the number of apps Dave had after deleting some apps and files\n    #   c: the number of files Dave had before deleting some apps and files\n    #   d: the number of apps Dave had before deleting some apps and files\n    #   e: the number of files Dave had after deleting some apps and files\n    #   f: the number of apps Dave had after deleting some apps and files\n    #   g: the number of files Dave had before deleting some apps and files\n    #   h: the number of apps Dave had before deleting some apps and files\n    #   i: the number of files Dave had after deleting some apps and files\n    #   j: the number of apps Dave had after deleting some apps and files\n    #   k: the number of files Dave had before deleting some apps and files\n    #   l: the number of apps Dave had before deleting some apps and files\n    #   m: the number of files Dave had after deleting some apps and files\n    #   n: the number of apps Dave had after deleting some apps and files\n    #   o: the number of files Dave had before deleting some apps and files\n    #   p: the number of apps Dave had before deleting some apps and files\n    #  \nans = solver()", "answer": 3.0}
{"question": "How many minutes did the machine work today?", "passage": "An industrial machine made 9 shirts yesterday and 8 shirts today. It can make 2 shirts a minute.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: An industrial machine made 9 shirts yesterday and 8 shirts today. It can make 2 shirts a minute. How many minutes did the machine work today?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   x: the number of minutes the machine worked today\n    #   y: the number of shirts the machine made yesterday\n    #   z: the number of shirts the machine made today\n    #   a: the number of shirts the machine can make in a minute\n    #   b: the number of shirts the machine made in total\n    #   c: the number of shirts the machine made yesterday and today\n    #   d: the number of shirts the machine made yesterday and today in a minute\n    #   e: the number of shirts the machine made yesterday and today in total\n    #   f: the number of shirts the machine made yesterday and today in total in a minute\n    #   g: the number of shirts the machine made yesterday and today in total in a minute in a minute\n    #   h: the number of shirts the machine made yesterday and today in total in a minute in a minute in a minute\n    #   i: the number of shirts the machine made yesterday and today in total in a minute in a minute in a minute in a minute\n    #   j: the number of shirts the machine made yesterday and today in total in a minute in a minute in a minute in a minute in a minute\n    #   k: the number of shirts the machine made yesterday and today in total in a minute in a minute in a minute in a minute in a minute in a minute\n    #   l: the number of shirts the machine made yesterday and today in total in a minute in a minute in a minute in a minute in a minute in a minute in a minute\n    #\nans = solver()", "answer": 4.0}
{"question": "How many eggs will each group have?", "passage": "Rebecca wants to split a collection of eggs into 3 groups. Rebecca has 4 marbles and 15 eggs.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rebecca wants to split a collection of eggs into 3 groups. Rebecca has 4 marbles and 15 eggs. How many eggs will each group have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    eggs = 15\n    groups = 3\n    marbles = 4\n    # Now, we can use the marbles to divide the eggs into groups.\n    # We can use the marbles to divide the eggs into groups.\n    eggs_per_group = eggs / groups\n    # Now, we can use the marbles to divide the eggs into groups.\n    eggs_per_group = eggs / groups\n    # Now, we can use the marbles to divide the eggs into groups.\n    eggs_per_group = eggs / groups\n    # Now, we can use the marbles to divide the eggs into groups.\n    eggs_per_group = eggs / groups\n    # Now, we can use the marbles to divide the eggs into groups.\n    eggs_per_group = eggs / groups\n    # Now, we can use the marbles to divide the eggs into groups.\n    eggs_per_group = eggs / groups\n    # Now, we can use the marbles to divide the eggs into groups.\n    eggs_per_group = eggs / groups\n    # Now, we can use the marbles to divide the eggs into groups.\n    eggs_per_group = eggs / groups\n    # Now, we can use the marbles to divide the eggs into groups.\n    eggs_per_group = eggs / groups\n    # Now, we can use the marbles to divide the eggs into groups.\n    eggs_per_group = eggs / groups\n    # Now, we can use the marbles to divide the eggs into groups.\nans = solver()", "answer": 5.0}
{"question": "How many crackers did Matthew have?", "passage": "Matthew had some crackers. If Matthew gave 2 crackers to each of his 11 friends.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Matthew had some crackers. If Matthew gave 2 crackers to each of his 11 friends. How many crackers did Matthew have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Matthew's crackers = x\n    # Matthew's friends = y\n    # Matthew's crackers after giving to his friends = z\n    x = 0\n    y = 11\n    z = 0\n    # Now, we can write the equation:\n    # z = x - 2y\n    z = x - 2 * y\n    # We can also write the equation:\n    # x = z + 2y\n    x = z + 2 * y\n    # Now, we can substitute the value of x in the equation z = x - 2y\n    z = (z + 2 * y) - 2 * y\n    # We can simplify the equation:\n    z = z - 2 * y\n    # We can simplify the equation:\n    z = z - 2 * y\n    # We can simplify the equation:\n    z = z - 2 * y\n    # We can simplify the equation:\n    z = z - 2 * y\n    # We can simplify the equation:\n    z = z - 2 * y\n    # We can simplify the equation:\n    z = z - 2 * y\n    # We can simplify the equation:\n    z = z - 2 * y\n    # We can simplify the equation:\n    z = z - 2 * y\n    # We can simplify the equation:\n    z = z - 2 * y\n    # We can simplify the equation:\n    z = z - 2 * y\n    # We can simplify the equation:\n    z = z - 2 * y\n    #\nans = solver()", "answer": 22.0}
{"question": "How much money did she have initially?", "passage": "Olivia spent 78 dollars at a supermarket. If she has 33 dollars left with her.", "executed": 111.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Olivia spent 78 dollars at a supermarket. If she has 33 dollars left with her. How much money did she have initially?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # money_init = ?\n    # money_left = 33\n    # money_spent = 78\n    # money_init = money_left + money_spent\n    money_init = 33 + 78\n    return money_init\nans = solver()", "answer": 111.0}
{"question": "How much money will he earn if he works for 73 harvest seasons?", "passage": "If Lewis earns $ 1357 every week during the 223 weeks of a harvest season.", "executed": 22090603.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: If Lewis earns $ 1357 every week during the 223 weeks of a harvest season. How much money will he earn if he works for 73 harvest seasons?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    weekly_salary = 1357\n    weeks_per_season = 223\n    number_of_seasons = 73\n    total_salary = weekly_salary * weeks_per_season * number_of_seasons\n    return total_salary\nans = solver()", "answer": 22090603.0}
{"question": "How many students suggested bacon?", "passage": "Because of the decision Sofia asked 310 students to suggest specific types of food. 185 students suggested adding mashed potatoes while others suggested adding bacon to the menu.", "executed": 125.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Because of the decision Sofia asked 310 students to suggest specific types of food. 185 students suggested adding mashed potatoes while others suggested adding bacon to the menu. How many students suggested bacon?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of students who suggested adding bacon\n    # y = number of students who suggested adding mashed potatoes\n    # x + y = 310\n    # y = 185\n    # x = ?\n    x = 310 - 185\n    return x\nans = solver()", "answer": 125.0}
{"question": "How many emails did jack receive in the day?", "passage": "Jack received 3 emails and 64 letters in the morning. He then received 5 emails and 54 letters in the afternoon.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jack received 3 emails and 64 letters in the morning. He then received 5 emails and 54 letters in the afternoon. How many emails did jack receive in the day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning_emails = 3\n    morning_letters = 64\n    afternoon_emails = 5\n    afternoon_letters = 54\n    total_emails = morning_emails + afternoon_emails\n    total_letters = morning_letters + afternoon_letters\n    return total_emails\nans = solver()", "answer": 8.0}
{"question": "How many cookies did Paco have left?", "passage": "Paco had 40 cookies. He ate 2 of them. Then he bought 37 more cookies.", "executed": 75.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paco had 40 cookies. He ate 2 of them. Then he bought 37 more cookies. How many cookies did Paco have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookies_ate = 2\n    cookies_bought = 37\n    cookies_total = 40\n    cookies_left = cookies_total - cookies_ate + cookies_bought\n    return cookies_left\nans = solver()", "answer": 75.0}
{"question": "How many students suggested adding bacon?", "passage": "Because of the decision Sofia asked the students to suggest specific types of food. If 218 students suggested adding mashed potatoes as well as bacon while 351 suggested adding only bacon to the menu.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Because of the decision Sofia asked the students to suggest specific types of food. If 218 students suggested adding mashed potatoes as well as bacon while 351 suggested adding only bacon to the menu. How many students suggested adding bacon?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x: the number of students suggested adding bacon\n    # y: the number of students suggested adding mashed potatoes\n    x = Symbol('x')\n    y = Symbol('y')\n    # Then we can define the equation:\n    equation = Eq(x + y, 569)\n    # Then we can solve the equation:\n    answer = solve(equation, x)\n    return answer[0]\nans = solver()", "answer": 569.0}
{"question": "How many cookies would you have?", "passage": "If each bag has 41 cookies and you had 53 bags of cookies.", "executed": 2173.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: If each bag has 41 cookies and you had 53 bags of cookies. How many cookies would you have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bag_of_cookies = 41\n    number_of_bags = 53\n    total_cookies = bag_of_cookies * number_of_bags\n    return total_cookies\nans = solver()", "answer": 2173.0}
{"question": "How many more pages of math homework than reading homework did she have?", "passage": "Rachel had to complete 2 pages of reading homework and 4 pages of math homework.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel had to complete 2 pages of reading homework and 4 pages of math homework. How many more pages of math homework than reading homework did she have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    reading_homework = 2\n    math_homework = 4\n    # Now, we can calculate the difference between the two variables:\n    difference = math_homework - reading_homework\n    # Finally, we can return the difference:\n    return difference\nans = solver()", "answer": 2.0}
{"question": "How many balloons did Allan bring to the park?", "passage": "Allan brought 5 balloons and Jake brought 4 balloons to the park. Allan then bought 3 more balloons at the park.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Allan brought 5 balloons and Jake brought 4 balloons to the park. Allan then bought 3 more balloons at the park. How many balloons did Allan bring to the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    balloons_brought_by_allan = 5\n    balloons_brought_by_jake = 4\n    balloons_bought_at_the_park = 3\n    balloons_brought_by_allan_to_the_park = balloons_brought_by_allan + balloons_bought_at_the_park\n    return balloons_brought_by_allan_to_the_park\nans = solver()", "answer": 8.0}
{"question": "How many more kids did she play with on tuesday than on wednesday?", "passage": "Julia played tag with 8 kids on monday, 11 kids on tuesday and 9 kids on wednesday.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Julia played tag with 8 kids on monday, 11 kids on tuesday and 9 kids on wednesday. How many more kids did she play with on tuesday than on wednesday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 8\n    tuesday = 11\n    wednesday = 9\n    # Now, we can calculate the difference between tuesday and wednesday\n    difference = tuesday - wednesday\n    return difference\nans = solver()", "answer": 2.0}
{"question": "How much money did they make from selling the t-shirts?", "passage": "The Razorback shop makes $ 5 dollars off each jersey and $ 215 off each t-shirt. During the Arkansas and Texas tech game they sold 20 t-shirts and 64 jerseys.", "executed": 4300.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The Razorback shop makes $ 5 dollars off each jersey and $ 215 off each t-shirt. During the Arkansas and Texas tech game they sold 20 t-shirts and 64 jerseys. How much money did they make from selling the t-shirts?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    t_shirt_price = 215\n    jersey_price = 5\n    t_shirt_sold = 20\n    jersey_sold = 64\n    # Now we can calculate the total money made from selling t-shirts:\n    total_money_made_from_t_shirts = t_shirt_price * t_shirt_sold\n    return total_money_made_from_t_shirts\nans = solver()", "answer": 4300.0}
{"question": "How many more children got off the bus than those that got on?", "passage": "36 children were riding on the bus. At the bus stop 68 children got off the bus while some more got on the bus. Then there were 12 children altogether on the bus.", "executed": -12.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 36 children were riding on the bus. At the bus stop 68 children got off the bus while some more got on the bus. Then there were 12 children altogether on the bus. How many more children got off the bus than those that got on?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of children that got on the bus\n    # y = number of children that got off the bus\n    # z = number of children that were on the bus\n    # Then we can write the equations:\n    # x + y = 68\n    # x - y = 12\n    # z = 36\n    # We can solve the equations to get the answer:\n    x = (68 + 12) / 2\n    y = (68 - 12) / 2\n    return y - x\nans = solver()", "answer": 24.0}
{"question": "How many did each of them have?", "passage": "Brenda's mother made 14 cookies for 2 guests. If each of them had the same number of cookies.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Brenda's mother made 14 cookies for 2 guests. If each of them had the same number of cookies. How many did each of them have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookies = 14\n    guests = 2\n    # Now, we can calculate the number of cookies each guest had:\n    cookies_per_guest = cookies / guests\n    return cookies_per_guest\nans = solver()", "answer": 7.0}
{"question": "How many bags did she find on the next day?", "passage": "Tiffany was collecting cans for recycling. On monday she had 4 bags of cans. The next day she found some more bags worth of cans. If she had a total of 6 bags altogether.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Tiffany was collecting cans for recycling. On monday she had 4 bags of cans. The next day she found some more bags worth of cans. If she had a total of 6 bags altogether. How many bags did she find on the next day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday_bags = 4\n    total_bags = 6\n    # We can then calculate the number of bags found on the next day:\n    next_day_bags = total_bags - monday_bags\n    return next_day_bags\nans = solver()", "answer": 2.0}
{"question": "How many more girls than boys does the school have?", "passage": "In a school there are 632 girls and 410 boys. 465 more girls joined the school.", "executed": 687.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In a school there are 632 girls and 410 boys. 465 more girls joined the school. How many more girls than boys does the school have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    girls = 632\n    boys = 410\n    girls_joined = 465\n    # Now, we can calculate the total number of girls and boys in the school\n    total_girls = girls + girls_joined\n    total_boys = boys\n    # Now, we can calculate the difference between the total number of girls and boys\n    difference = total_girls - total_boys\n    return difference\nans = solver()", "answer": 687.0}
{"question": "How many beads did Emily have?", "passage": "Emily is making bead necklaces for her friends where each necklace takes 5 beads. She made 4 necklaces.", "executed": 20.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Emily is making bead necklaces for her friends where each necklace takes 5 beads. She made 4 necklaces. How many beads did Emily have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    num_necklaces = 4\n    num_beads_per_necklace = 5\n    num_beads = num_necklaces * num_beads_per_necklace\n    return num_beads\nans = solver()", "answer": 20.0}
{"question": "How many more blocks did he use to build the tower than he did to build the house?", "passage": "Randy has 95 blocks. He uses 20 blocks to build a house and 50 blocks to build a tower.", "executed": 30.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Randy has 95 blocks. He uses 20 blocks to build a house and 50 blocks to build a tower. How many more blocks did he use to build the tower than he did to build the house?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    house = 20\n    tower = 50\n    total = 95\n    # Now, we can calculate the answer:\n    answer = tower - house\n    return answer\nans = solver()", "answer": 30.0}
{"question": "How many more storks than birds are sitting on the fence?", "passage": "2 birds and 6 storks were sitting on the fence. 3 more birds came to join them.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 2 birds and 6 storks were sitting on the fence. 3 more birds came to join them. How many more storks than birds are sitting on the fence?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    birds = 2\n    storks = 6\n    more_birds = 3\n    more_storks = 0\n    # Now, we can calculate the total number of birds and storks:\n    total_birds = birds + more_birds\n    total_storks = storks + more_storks\n    # Now, we can calculate the difference between the total number of storks and birds:\n    difference = total_storks - total_birds\n    return difference\nans = solver()", "answer": 1.0}
{"question": "What is the cost of each t-shirt?", "passage": "The Razorback t-shirt shop made $ 51 dollars from selling 3 t-shirt during the Arkansas and Texas tech game they.", "executed": 17.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The Razorback t-shirt shop made $ 51 dollars from selling 3 t-shirt during the Arkansas and Texas tech game they. What is the cost of each t-shirt?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = the cost of each t-shirt\n    # y = the number of t-shirts sold\n    # z = the total revenue\n    x = 0\n    y = 3\n    z = 51\n    # We can also define the equation:\n    # z = x * y\n    # z = 51\n    # x * y = 51\n    # x = 51 / y\n    x = z / y\n    return x\nans = solver()", "answer": 17.0}
{"question": "How many more cookies did he give to his friend than those he ate?", "passage": "Paco had 12 cookies. He ate 16 cookies and gave 21 of them to his friend.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paco had 12 cookies. He ate 16 cookies and gave 21 of them to his friend. How many more cookies did he give to his friend than those he ate?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookies_paco_had = 12\n    cookies_paco_ate = 16\n    cookies_paco_gave = 21\n    cookies_paco_gave_to_friend = cookies_paco_gave\n    cookies_paco_ate_and_gave = cookies_paco_ate + cookies_paco_gave_to_friend\n    cookies_paco_had_and_ate_and_gave = cookies_paco_had + cookies_paco_ate_and_gave\n    cookies_paco_had_and_ate_and_gave_to_friend = cookies_paco_had_and_ate_and_gave\n    cookies_paco_had_and_ate_and_gave_to_friend_and_ate = cookies_paco_had_and_ate_and_gave_to_friend + cookies_paco_ate\n    cookies_paco_had_and_ate_and_gave_to_friend_and_ate_and_gave = cookies_paco_had_and_ate_and_gave_to_friend_and_ate + cookies_paco_gave\n    cookies_paco_had_and_ate_and_gave_to_friend_and_ate_and_gave_to_friend = cookies_paco_had_and_ate_and_gave_to_friend_and_ate_and_gave\n    cookies_paco\nans = solver()", "answer": 5.0}
{"question": "How many more visitors visited the Buckingham palace on that day than on the previous day?", "passage": "After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that 317 visitors came to the Buckingham palace that day. If there were 295 visitors the previous day.", "executed": 22.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that 317 visitors came to the Buckingham palace that day. If there were 295 visitors the previous day. How many more visitors visited the Buckingham palace on that day than on the previous day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    visitors_today = 317\n    visitors_yesterday = 295\n    visitors_difference = visitors_today - visitors_yesterday\n    return visitors_difference\nans = solver()", "answer": 22.0}
{"question": "How many more marbles did he find than those he lost?", "passage": "Josh had 3 marbles in his collection. He found 6 marbles while he lost 5 marbles.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Josh had 3 marbles in his collection. He found 6 marbles while he lost 5 marbles. How many more marbles did he find than those he lost?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marbles_in_collection = 3\n    marbles_found = 6\n    marbles_lost = 5\n    marbles_found_more_than_lost = marbles_found - marbles_lost\n    return marbles_found_more_than_lost\nans = solver()", "answer": 1.0}
{"question": "How many more students suggested mashed potatoes than those that suggested bacon?", "passage": "Because of the decision Sofia asked the students to suggest specific types of food. If 408 students suggested adding mashed potatoes while 42 suggested adding bacon to the menu.", "executed": 366.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Because of the decision Sofia asked the students to suggest specific types of food. If 408 students suggested adding mashed potatoes while 42 suggested adding bacon to the menu. How many more students suggested mashed potatoes than those that suggested bacon?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. Mashed potatoes: m\n    # 2. Bacon: b\n    # 3. Difference: d\n    m = 408\n    b = 42\n    d = m - b\n    return d\nans = solver()", "answer": 366.0}
{"question": "How many cookies did paco have left?", "passage": "Paco had 40 cookies. He ate 5 cookies and gave 13 of them to his friend.", "executed": 22.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paco had 40 cookies. He ate 5 cookies and gave 13 of them to his friend. How many cookies did paco have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookies_paco_had = 40\n    cookies_paco_ate = 5\n    cookies_paco_gave = 13\n    cookies_paco_left = cookies_paco_had - cookies_paco_ate - cookies_paco_gave\n    return cookies_paco_left\nans = solver()", "answer": 22.0}
{"question": "How many more cookies did he eat than those he gave to his friend?", "passage": "Paco had 17 cookies. He ate 14 cookies and gave 13 of them to his friend.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paco had 17 cookies. He ate 14 cookies and gave 13 of them to his friend. How many more cookies did he eat than those he gave to his friend?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookies_ate = 14\n    cookies_gave = 13\n    cookies_total = 17\n    cookies_left = cookies_total - cookies_ate\n    cookies_ate_more = cookies_ate - cookies_gave\n    return cookies_ate_more\nans = solver()", "answer": 1.0}
{"question": "How many more kids did she play with on monday than on tuesday?", "passage": "Julia played tag with 19 kids on monday. She played tag with 18 kids on tuesday. She spent a total of 38 hours to play tag on both days.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Julia played tag with 19 kids on monday. She played tag with 18 kids on tuesday. She spent a total of 38 hours to play tag on both days. How many more kids did she play with on monday than on tuesday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday_kids = 19\n    tuesday_kids = 18\n    total_hours = 38\n    # We can also define the equation:\n    monday_hours = total_hours / (monday_kids + tuesday_kids) * monday_kids\n    tuesday_hours = total_hours / (monday_kids + tuesday_kids) * tuesday_kids\n    # We can also define the answer:\n    answer = monday_kids - tuesday_kids\n    return answer\nans = solver()", "answer": 1.0}
{"question": "How much money did he spend to buy chocolate than he did to buy candy bar?", "passage": "Dan has $ 5. He bought a candy bar for $ 2 and a chocolate for $ 3.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dan has $ 5. He bought a candy bar for $ 2 and a chocolate for $ 3. How much money did he spend to buy chocolate than he did to buy candy bar?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    money = 5\n    candy_bar = 2\n    chocolate = 3\n    # Now, we can calculate the difference between the money spent on chocolate and the money spent on candy bar\n    difference = chocolate - candy_bar\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many more marbles did Ed have than Doug then?", "passage": "Ed had 29 more marbles than Doug. Ed lost 17 of his marbles at the playground.", "executed": 12.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Ed had 29 more marbles than Doug. Ed lost 17 of his marbles at the playground. How many more marbles did Ed have than Doug then?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    ed_marbles = 0\n    doug_marbles = 0\n    ed_lost = 0\n    ed_marbles_after_lost = 0\n    ed_marbles_more_than_doug = 0\n    ed_marbles_more_than_doug_after_lost = 0\n    # Now, we can define the equations:\n    ed_marbles_more_than_doug = ed_marbles - doug_marbles\n    ed_marbles_after_lost = ed_marbles - ed_lost\n    ed_marbles_more_than_doug_after_lost = ed_marbles_after_lost - doug_marbles\n    # Now, we can define the conditions:\n    ed_marbles_more_than_doug = 29\n    ed_lost = 17\n    # Now, we can solve the equations:\n    ed_marbles = ed_marbles_more_than_doug + doug_marbles\n    ed_marbles_after_lost = ed_marbles - ed_lost\n    ed_marbles_more_than_doug_after_lost = ed_marbles_after_lost - doug_marbles\n    # Now, we can return the answer:\n    return ed_marbles_more_than_doug_after_lost\nans = solver()", "answer": 12.0}
{"question": "How much farther did the mouse jump than the grasshopper?", "passage": "The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped 19 inches. The frog jumped 10 inches farther than the grasshopper and the mouse jumped 20 inches farther than the frog.", "executed": 30.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped 19 inches. The frog jumped 10 inches farther than the grasshopper and the mouse jumped 20 inches farther than the frog. How much farther did the mouse jump than the grasshopper?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    grasshopper = 19\n    frog = grasshopper + 10\n    mouse = frog + 20\n    return mouse - grasshopper\nans = solver()", "answer": 30.0}
{"question": "How many pages did he read per day?", "passage": "Frank was reading through his favorite book. It took him 16 days to finish the book. If the book had 112 pages.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank was reading through his favorite book. It took him 16 days to finish the book. If the book had 112 pages. How many pages did he read per day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    days = 16\n    pages = 112\n    pages_per_day = pages / days\n    return pages_per_day\nans = solver()", "answer": 7.0}
{"question": "How many books have you already read?", "passage": "There are 20 different books in the ' crazy silly school ' series. If you are yet to read 5 of the books.", "executed": 15.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 20 different books in the ' crazy silly school ' series. If you are yet to read 5 of the books. How many books have you already read?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    total_books = 20\n    books_read = 5\n    books_not_read = total_books - books_read\n    return books_not_read\nans = solver()", "answer": 15.0}
{"question": "How many balloons did Allan and Jake have in the park?", "passage": "Allan brought 3 balloons and Jake brought 5 balloons to the park. Allan then bought 2 more balloons at the park.", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Allan brought 3 balloons and Jake brought 5 balloons to the park. Allan then bought 2 more balloons at the park. How many balloons did Allan and Jake have in the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    allan_balloons = 3\n    jake_balloons = 5\n    allan_bought_balloons = 2\n    # Now, we can calculate the total number of balloons in the park:\n    total_balloons = allan_balloons + jake_balloons + allan_bought_balloons\n    return total_balloons\nans = solver()", "answer": 10.0}
{"question": "How many marbles does he have now?", "passage": "Josh lost 11 marbles. If he had 19 marbles in his collection earlier.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Josh lost 11 marbles. If he had 19 marbles in his collection earlier. How many marbles does he have now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marbles_lost = 11\n    marbles_had = 19\n    marbles_now = marbles_had - marbles_lost\n    return marbles_now\nans = solver()", "answer": 8.0}
{"question": "How many more balloons did Jake have than Allan in the park?", "passage": "Allan brought 6 balloons and Jake brought 3 balloons to the park. Jake then bought 4 more balloons at the park.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Allan brought 6 balloons and Jake brought 3 balloons to the park. Jake then bought 4 more balloons at the park. How many more balloons did Jake have than Allan in the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    allan_balloons = 6\n    jake_balloons = 3\n    jake_bought_balloons = 4\n    # Now, we can calculate the answer:\n    jake_total_balloons = jake_balloons + jake_bought_balloons\n    difference = jake_total_balloons - allan_balloons\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many pencils does she have?", "passage": "Faye was placing her pencils into 14 rows with 11 pencils in each row.", "executed": 154.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Faye was placing her pencils into 14 rows with 11 pencils in each row. How many pencils does she have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    rows = 14\n    pencils_per_row = 11\n    total_pencils = rows * pencils_per_row\n    return total_pencils\nans = solver()", "answer": 154.0}
{"question": "How many more bottles of diet soda than regular soda did they have?", "passage": "A grocery store had 22 bottles of regular soda and 61 bottles of diet soda.", "executed": 39.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A grocery store had 22 bottles of regular soda and 61 bottles of diet soda. How many more bottles of diet soda than regular soda did they have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    regular_soda = 22\n    diet_soda = 61\n    # Now, we can calculate the difference between the two variables:\n    difference = diet_soda - regular_soda\n    return difference\nans = solver()", "answer": 39.0}
{"question": "How many red peaches are in the baskets altogether?", "passage": "There are 6 baskets of peaches. Each basket has 16 red peaches and 18 green peaches.", "executed": 96.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 6 baskets of peaches. Each basket has 16 red peaches and 18 green peaches. How many red peaches are in the baskets altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    basket_num = 6\n    red_peach_num = 16\n    green_peach_num = 18\n    red_peach_total_num = basket_num * red_peach_num\n    return red_peach_total_num\nans = solver()", "answer": 96.0}
{"question": "About how many kids stayed home?", "passage": "During summer break 800059 kids from Lawrence county go to camp and the rest stay home. Lawrence county has 828521 kids in all.", "executed": 28462.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: During summer break 800059 kids from Lawrence county go to camp and the rest stay home. Lawrence county has 828521 kids in all. About how many kids stayed home?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    kids_at_camp = 800059\n    kids_in_county = 828521\n    kids_at_home = kids_in_county - kids_at_camp\n    return kids_at_home\nans = solver()", "answer": 28462.0}
{"question": "How many flowers are there in all?", "passage": "There are 141 pots. Each pot has 71 flowers and 91 sticks in it.", "executed": 10011.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 141 pots. Each pot has 71 flowers and 91 sticks in it. How many flowers are there in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    pots = 141\n    flowers_per_pot = 71\n    sticks_per_pot = 91\n    flowers_in_all = pots * flowers_per_pot\n    return flowers_in_all\nans = solver()", "answer": 10011.0}
{"question": "How many more balloons did Allan have than Jake in the park?", "passage": "Allan brought 2 balloons and Jake brought 4 balloons to the park. Allan then bought 3 more balloons at the park.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Allan brought 2 balloons and Jake brought 4 balloons to the park. Allan then bought 3 more balloons at the park. How many more balloons did Allan have than Jake in the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    allan_balloons = 2\n    jake_balloons = 4\n    allan_bought_balloons = 3\n    # Now, we can calculate the number of balloons that Allan had in the park:\n    allan_balloons_in_park = allan_balloons + allan_bought_balloons\n    # Now, we can calculate the number of balloons that Jake had in the park:\n    jake_balloons_in_park = jake_balloons\n    # Now, we can calculate the number of balloons that Allan had more than Jake in the park:\n    allan_balloons_more_than_jake = allan_balloons_in_park - jake_balloons_in_park\n    # Now, we can return the answer:\n    return allan_balloons_more_than_jake\nans = solver()", "answer": 1.0}
{"question": "How many apples remained?", "passage": "A chef had 58 apples. After making some pies, he had used 35.", "executed": 23.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A chef had 58 apples. After making some pies, he had used 35. How many apples remained?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # apples_before = 58\n    # apples_after = 35\n    apples_before = 58\n    apples_after = 35\n    # Now, we can calculate the apples_remained by using the formula:\n    apples_remained = apples_before - apples_after\n    return apples_remained\nans = solver()", "answer": 23.0}
{"question": "How many cookies does each bag have?", "passage": "You had 26 bags with equal number of cookies. If you had 15 candies and 52 cookies in total.", "executed": 1.4230769230769231, "generated": "\nimport math\nimport numpy as np\n\n# Question: You had 26 bags with equal number of cookies. If you had 15 candies and 52 cookies in total. How many cookies does each bag have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    num_bags = 26\n    num_cookies = 52\n    num_candies = 15\n    # Now, we can calculate the number of cookies in each bag:\n    num_cookies_in_each_bag = (num_cookies - num_candies) / num_bags\n    return num_cookies_in_each_bag\nans = solver()", "answer": 2.0}
{"question": "How many sacks of oranges will they have after 49 days of harvest?", "passage": "He then went to see the oranges being harvested. He found out that they harvest 38 sacks per day and that each sack containes 42 oranges.", "executed": 78204.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He then went to see the oranges being harvested. He found out that they harvest 38 sacks per day and that each sack containes 42 oranges. How many sacks of oranges will they have after 49 days of harvest?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sacks_per_day = 38\n    oranges_per_sack = 42\n    days_of_harvest = 49\n    # Now, we can calculate the total number of sacks of oranges after 49 days of harvest:\n    total_sacks = sacks_per_day * days_of_harvest\n    # Finally, we can calculate the total number of oranges after 49 days of harvest:\n    total_oranges = total_sacks * oranges_per_sack\n    return total_oranges\nans = solver()", "answer": 1862.0}
{"question": "How many orchids did she cut?", "passage": "There were 16 roses and 3 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now 7 orchids and 13 roses in the vase.", "executed": 3.5, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 16 roses and 3 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now 7 orchids and 13 roses in the vase. How many orchids did she cut?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of orchids cut\n    # y = number of roses cut\n    # z = number of orchids in the vase\n    # w = number of roses in the vase\n    # We can then write the equations:\n    # x + z = 7\n    # y + w = 13\n    # z + y = 3\n    # w + x = 16\n    # We can then solve the equations using numpy.linalg.solve()\n    A = np.array([[1, 1, 1, 1], [0, 0, 1, 1], [0, 1, 0, 1], [1, 0, 0, 1]])\n    B = np.array([7, 13, 3, 16])\n    X = np.linalg.solve(A, B)\n    return X[0]\nans = solver()", "answer": 4.0}
{"question": "How many more emails did Jack receive in the afternoon than in the evening?", "passage": "Jack received 10 emails in the morning, 5 emails in the afternoon and 4 emails in the evening.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jack received 10 emails in the morning, 5 emails in the afternoon and 4 emails in the evening. How many more emails did Jack receive in the afternoon than in the evening?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning = 10\n    afternoon = 5\n    evening = 4\n    # Now, we can calculate the difference between afternoon and evening\n    difference = afternoon - evening\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many pencils does she have?", "passage": "Faye was placing her pencils into rows with 22 pencils in each row. She had 6 packs of pencils each one having 14 pencils.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Faye was placing her pencils into rows with 22 pencils in each row. She had 6 packs of pencils each one having 14 pencils. How many pencils does she have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    pencils_in_each_pack = 14\n    pencils_in_each_row = 22\n    number_of_packs = 6\n    # Now, we can calculate the total number of pencils:\n    total_number_of_pencils = pencils_in_each_pack * number_of_packs\n    # Now, we can calculate the total number of rows:\n    total_number_of_rows = math.ceil(total_number_of_pencils / pencils_in_each_row)\n    # Now, we can calculate the total number of pencils in the last row:\n    total_number_of_pencils_in_the_last_row = total_number_of_pencils % pencils_in_each_row\n    # Now, we can calculate the total number of pencils in the last row:\n    total_number_of_pencils_in_the_last_row = total_number_of_pencils % pencils_in_each_row\n    # Now, we can calculate the total number of pencils in the last row:\n    total_number_of_pencils_in_the_last_row = total_number_of_pencils % pencils_in_each_row\n    # Now, we can calculate the total number of pencils in the last row:\n    total_number_of_pencils_in_the_last_row = total_number_of_pencil\nans = solver()", "answer": 84.0}
{"question": "How many did he have left after yesterday's picking?", "passage": "A farmer had 160 tomatoes in his garden. If he picked 56 of them yesterday and 41 today.", "executed": 104.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A farmer had 160 tomatoes in his garden. If he picked 56 of them yesterday and 41 today. How many did he have left after yesterday's picking?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    tomatoes_in_garden = 160\n    tomatoes_picked_yesterday = 56\n    tomatoes_picked_today = 41\n    tomatoes_left_after_yesterday = tomatoes_in_garden - tomatoes_picked_yesterday\n    return tomatoes_left_after_yesterday\nans = solver()", "answer": 104.0}
{"question": "How many pots are there in all?", "passage": "Each pot has 40 flowers in it. There are 400 flowers in total.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Each pot has 40 flowers in it. There are 400 flowers in total. How many pots are there in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    pots = 0\n    flowers = 0\n    total_flowers = 400\n    flowers_per_pot = 40\n    # Now, we can start to solve the problem.\n    # First, we know that the total number of flowers is 400.\n    total_flowers = 400\n    # Second, we know that each pot has 40 flowers.\n    flowers_per_pot = 40\n    # Third, we know that the total number of flowers is equal to the number of pots times the number of flowers per pot.\n    total_flowers = pots * flowers_per_pot\n    # Fourth, we know that the total number of flowers is 400.\n    total_flowers = 400\n    # Fifth, we can substitute the total number of flowers in the third step with 400.\n    400 = pots * flowers_per_pot\n    # Sixth, we can divide both sides by 40.\n    10 = pots\n    # Seventh, we can get the answer.\n    pots = 10\n    return pots\nans = solver()", "answer": 10.0}
{"question": "How many campers went rowing in the afternoon?", "passage": "15 campers went rowing in the morning. Some more campers went rowing in the afternoon. If a total of 32 campers went rowing that day.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: 15 campers went rowing in the morning. Some more campers went rowing in the afternoon. If a total of 32 campers went rowing that day. How many campers went rowing in the afternoon?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x: the number of campers went rowing in the morning\n    # y: the number of campers went rowing in the afternoon\n    x = 0\n    y = 0\n    # We know that x + y = 32\n    x + y = 32\n    # We know that x = 15\n    x = 15\n    # We can now solve for y\n    y = 32 - 15\n    y = 17\n    return y\nans = solver()", "answer": 17.0}
{"question": "How many more students suggested bacon than those that suggested mashed potatoes?", "passage": "Because of the decision Sofia asked the students to suggest specific types of food. If 479 students suggested adding mashed potatoes while 489 suggested adding bacon to the menu.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Because of the decision Sofia asked the students to suggest specific types of food. If 479 students suggested adding mashed potatoes while 489 suggested adding bacon to the menu. How many more students suggested bacon than those that suggested mashed potatoes?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of students who suggested adding mashed potatoes\n    # y = number of students who suggested adding bacon\n    # We can also define the equation:\n    # y - x = 10\n    # We can also define the equation:\n    # x + y = 968\n    # We can also define the equation:\n    # x = 479\n    # We can also define the equation:\n    # y = 489\n    # We can also define the equation:\n    # y - x = 10\n    # We can also define the equation:\n    # x + y = 968\n    # We can also define the equation:\n    # x = 479\n    # We can also define the equation:\n    # y = 489\n    # We can also define the equation:\n    # y - x = 10\n    # We can also define the equation:\n    # x + y = 968\n    # We can also define the equation:\n    # x = 479\n    # We can also define the equation:\n    # y = 489\n    # We can also define the equation:\n    # y - x = 10\n    # We can also define the equation:\n    # x + y = 968\n    # We can also define the equation:\n    # x = 479\n    # We can also define the equation:\n    # y = 489\n    # We can also define the equation:\n    # y - x = 10\n    # We can also define the equation:\n    #\nans = solver()", "answer": 10.0}
{"question": "How many marbles did Doug have initially?", "passage": "Ed had 5 more marbles than Doug. Doug lost 3 of his marbles at the playground. If Ed had 27 marbles.", "executed": 19.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Ed had 5 more marbles than Doug. Doug lost 3 of his marbles at the playground. If Ed had 27 marbles. How many marbles did Doug have initially?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    ed_marbles = 27\n    doug_marbles = 0\n    marbles_diff = 5\n    marbles_lost = 3\n    # Now, we can use the information to derive the answer:\n    doug_marbles = ed_marbles - marbles_diff - marbles_lost\n    return doug_marbles\nans = solver()", "answer": 22.0}
{"question": "How many pages of reading homework did she have to complete?", "passage": "Rachel had to complete 7 pages of math homework. If she had to complete 4 more pages of math homework than reading homework.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel had to complete 7 pages of math homework. If she had to complete 4 more pages of math homework than reading homework. How many pages of reading homework did she have to complete?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    math_homework = 7\n    reading_homework = math_homework - 4\n    return reading_homework\nans = solver()", "answer": 3.0}
{"question": "How many more chocolate chip cookies than raisin cakes did Helen bake?", "passage": "Helen the hippo and her friends are preparing for thanksgiving at Helen's house. Helen baked 19 chocolate chip cookies yesterday and 231 raisin cookies and 237 chocolate chip cookies this morning.", "executed": 25.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Helen the hippo and her friends are preparing for thanksgiving at Helen's house. Helen baked 19 chocolate chip cookies yesterday and 231 raisin cookies and 237 chocolate chip cookies this morning. How many more chocolate chip cookies than raisin cakes did Helen bake?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    chocolate_chip_cookies_yesterday = 19\n    raisin_cookies_yesterday = 0\n    chocolate_chip_cookies_today = 237\n    raisin_cookies_today = 231\n    # Now, we can calculate the total number of chocolate chip cookies and raisin cookies\n    total_chocolate_chip_cookies = chocolate_chip_cookies_yesterday + chocolate_chip_cookies_today\n    total_raisin_cookies = raisin_cookies_yesterday + raisin_cookies_today\n    # Now, we can calculate the difference between the total number of chocolate chip cookies and raisin cookies\n    difference = total_chocolate_chip_cookies - total_raisin_cookies\n    return difference\nans = solver()", "answer": 25.0}
{"question": "How many bags did she have on monday?", "passage": "Tiffany was collecting cans for recycling. On monday she had some bags of cans. The next day she found 4 more bags worth of cans. If she had a total of 8 bags altogether.", "executed": 0.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Tiffany was collecting cans for recycling. On monday she had some bags of cans. The next day she found 4 more bags worth of cans. If she had a total of 8 bags altogether. How many bags did she have on monday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 0\n    tuesday = 0\n    total = 8\n    # We know that the total number of bags on tuesday is 4 more than the number of bags on monday.\n    tuesday = total - monday\n    monday = total - tuesday\n    return monday\nans = solver()", "answer": 4.0}
{"question": "How many more bottle caps did danny throw away than those he found at the park?", "passage": "Danny collects bottle caps. He found 30 bottle caps at the park while he threw away 63 old ones. Now he has 42 bottle caps in his collection.", "executed": 75.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Danny collects bottle caps. He found 30 bottle caps at the park while he threw away 63 old ones. Now he has 42 bottle caps in his collection. How many more bottle caps did danny throw away than those he found at the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    found = 30\n    old = 63\n    collection = 42\n    # Now we can calculate the answer:\n    answer = old - found + collection\n    return answer\nans = solver()", "answer": 33.0}
{"question": "How many more cups of flour than cups of sugar does she need to add now?", "passage": "Mary is baking a cake. The recipe calls for 12 cups of sugar and 14 cups of flour. She already put in 10 cups of sugar.", "executed": 12.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 12 cups of sugar and 14 cups of flour. She already put in 10 cups of sugar. How many more cups of flour than cups of sugar does she need to add now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sugar_needed = 12\n    flour_needed = 14\n    sugar_added = 10\n    # Now, we can calculate the answer:\n    flour_added = flour_needed - (sugar_needed - sugar_added)\n    return flour_added\nans = solver()", "answer": 12.0}
{"question": "How many does she need to buy so that she will have 140 games left?", "passage": "Kelly has 22 nintendo games.", "executed": 118.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Kelly has 22 nintendo games. How many does she need to buy so that she will have 140 games left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of games Kelly needs to buy\n    # y = number of games Kelly will have left\n    # We can also define the equation:\n    # y = 140\n    # x + 22 = y\n    # x = y - 22\n    # x = 140 - 22\n    # x = 118\n    return 118\nans = solver()", "answer": 118.0}
{"question": "How many white t - shirts does each package have?", "passage": "Mom buys 70 white t - shirts in total. If white t - shirts can be purchased in packages and mom buys 14 packages.", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mom buys 70 white t - shirts in total. If white t - shirts can be purchased in packages and mom buys 14 packages. How many white t - shirts does each package have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    total_white_t_shirts = 70\n    total_packages = 14\n    # Now, we can define the unknown variable:\n    white_t_shirts_per_package = 0\n    # Now, we can use the formula to calculate the unknown variable:\n    white_t_shirts_per_package = total_white_t_shirts / total_packages\n    return white_t_shirts_per_package\nans = solver()", "answer": 5.0}
{"question": "How many will he have left after today?", "passage": "A farmer had 171 tomatoes in his garden. If he picked 134 of them yesterday and 30 today.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A farmer had 171 tomatoes in his garden. If he picked 134 of them yesterday and 30 today. How many will he have left after today?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    tomatoes_in_garden = 171\n    tomatoes_picked_yesterday = 134\n    tomatoes_picked_today = 30\n    tomatoes_left_after_today = tomatoes_in_garden - tomatoes_picked_yesterday - tomatoes_picked_today\n    return tomatoes_left_after_today\nans = solver()", "answer": 7.0}
{"question": "How much money does Fred have now?", "passage": "Last week Fred had 47 dollars and Jason had 99 dollars. Over the weekend Fred delivered newspapers earning 111 dollars and washed cars earning 34 dollars.", "executed": 192.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Last week Fred had 47 dollars and Jason had 99 dollars. Over the weekend Fred delivered newspapers earning 111 dollars and washed cars earning 34 dollars. How much money does Fred have now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    Fred_last_week = 47\n    Jason_last_week = 99\n    Fred_earning_newspapers = 111\n    Fred_earning_cars = 34\n    Fred_now = Fred_last_week + Fred_earning_newspapers + Fred_earning_cars\n    return Fred_now\nans = solver()", "answer": 192.0}
{"question": "How many more cups of flour does she need to add?", "passage": "Mary is baking a cake. The recipe calls for 6 cups of sugar and 14 cups of flour. She already put in 7 cups of flour and 60 cups of sugar.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 6 cups of sugar and 14 cups of flour. She already put in 7 cups of flour and 60 cups of sugar. How many more cups of flour does she need to add?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sugar_needed = 6\n    flour_needed = 14\n    sugar_added = 60\n    flour_added = 7\n    # Now, we can calculate the answer:\n    sugar_remaining = sugar_needed - sugar_added\n    flour_remaining = flour_needed - flour_added\n    return flour_remaining\nans = solver()", "answer": 7.0}
{"question": "How many more orchids than roses are there in the vase now?", "passage": "There were 7 roses and 12 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now 11 roses and 20 orchids in the vase.", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 7 roses and 12 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now 11 roses and 20 orchids in the vase. How many more orchids than roses are there in the vase now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    roses_before = 7\n    orchids_before = 12\n    roses_after = 11\n    orchids_after = 20\n    # Now, we can calculate the difference between the number of roses and orchids before and after:\n    roses_diff = roses_after - roses_before\n    orchids_diff = orchids_after - orchids_before\n    # Finally, we can calculate the difference between the number of orchids and roses after:\n    orchids_more_than_roses = orchids_after - roses_after\n    return orchids_more_than_roses\nans = solver()", "answer": 9.0}
{"question": "How much does she weigh now?", "passage": "After Jessie started to go jogging everyday she lost 35 kilograms. She weighed 69 kilograms before beginning jogging.", "executed": 34.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: After Jessie started to go jogging everyday she lost 35 kilograms. She weighed 69 kilograms before beginning jogging. How much does she weigh now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    weight_before = 69\n    weight_lost = 35\n    weight_now = weight_before - weight_lost\n    return weight_now\nans = solver()", "answer": 34.0}
{"question": "How many children got off the bus at the bus stop?", "passage": "22 children were riding on the bus. At the bus stop 40 children got on the bus while some got off the bus. Then there were 2 children altogether on the bus.", "executed": 60.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 22 children were riding on the bus. At the bus stop 40 children got on the bus while some got off the bus. Then there were 2 children altogether on the bus. How many children got off the bus at the bus stop?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 22 children were riding on the bus.\n    children_on_bus = 22\n    # At the bus stop 40 children got on the bus\n    children_got_on_bus = 40\n    # Then there were 2 children altogether on the bus.\n    children_on_bus_after = 2\n    # How many children got off the bus at the bus stop?\n    children_got_off_bus = children_on_bus + children_got_on_bus - children_on_bus_after\n    return children_got_off_bus\nans = solver()", "answer": 60.0}
{"question": "How many more books than movies have you read?", "passage": "There are 10 different books and 11 different movies in the ' crazy silly school ' series. If you read 13 of the books and watched 12 of the movies.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 10 different books and 11 different movies in the ' crazy silly school ' series. If you read 13 of the books and watched 12 of the movies. How many more books than movies have you read?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    books = 10\n    movies = 11\n    read_books = 13\n    watched_movies = 12\n    # Now, we can calculate the answer:\n    answer = read_books - watched_movies\n    return answer\nans = solver()", "answer": 1.0}
{"question": "How many beads did Emily have?", "passage": "Emily is making bead necklaces for her friends. She made 11 necklaces and each necklace takes 28 beads.", "executed": 308.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Emily is making bead necklaces for her friends. She made 11 necklaces and each necklace takes 28 beads. How many beads did Emily have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    num_necklaces = 11\n    num_beads_per_necklace = 28\n    num_beads = num_necklaces * num_beads_per_necklace\n    return num_beads\nans = solver()", "answer": 308.0}
{"question": "How many tomatoes and potatoes does he have left?", "passage": "A farmer had 175 tomatoes and 77 potatoes in his garden. If he picked 172 potatoes.", "executed": -95.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A farmer had 175 tomatoes and 77 potatoes in his garden. If he picked 172 potatoes. How many tomatoes and potatoes does he have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    tomatoes = 175\n    potatoes = 77\n    picked_potatoes = 172\n    # Now, we can calculate the answer:\n    left_potatoes = potatoes - picked_potatoes\n    left_tomatoes = tomatoes\n    return left_potatoes, left_tomatoes\nans = solver()", "answer": 80.0}
{"question": "How much money did they earn by washing cars?", "passage": "Last week Fred had 111 dollars and Jason had 40 dollars. Fred washed cars over the weekend and now has 115 dollars. Jason delivered newspapers and now has 44 dollars.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Last week Fred had 111 dollars and Jason had 40 dollars. Fred washed cars over the weekend and now has 115 dollars. Jason delivered newspapers and now has 44 dollars. How much money did they earn by washing cars?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    fred_last_week = 111\n    jason_last_week = 40\n    fred_this_week = 115\n    jason_this_week = 44\n    # We can also define the variables that we want to solve:\n    fred_earn = 0\n    jason_earn = 0\n    # Now we can write the equation:\n    fred_earn = fred_this_week - fred_last_week\n    jason_earn = jason_this_week - jason_last_week\n    return fred_earn, jason_earn\nans = solver()", "answer": 4.0}
{"question": "How many pieces of junk mail should he give in each block?", "passage": "A mailman has to give 9 pieces of junk mail to each house in each block. If there are 20 houses on a block.", "executed": 180.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A mailman has to give 9 pieces of junk mail to each house in each block. If there are 20 houses on a block. How many pieces of junk mail should he give in each block?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # number of houses in a block = 20\n    # number of pieces of junk mail to each house = 9\n    # number of pieces of junk mail to each block = ?\n    # number of pieces of junk mail to each block = number of houses in a block * number of pieces of junk mail to each house\n    return 20 * 9\nans = solver()", "answer": 180.0}
{"question": "How many cakes did each person eat?", "passage": "Matthew gave equal numbers of crackers and cakes to his 4 friends. If he had 10 crackers and 8 cakes initially.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Matthew gave equal numbers of crackers and cakes to his 4 friends. If he had 10 crackers and 8 cakes initially. How many cakes did each person eat?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    crackers = 10\n    cakes = 8\n    friends = 4\n    # Now, we can calculate the number of crackers and cakes each person ate:\n    crackers_each = crackers / friends\n    cakes_each = cakes / friends\n    # Finally, we can return the answer:\n    return cakes_each\nans = solver()", "answer": 2.0}
{"question": "How many roses did she cut?", "passage": "Jessica cut some roses from her flower garden to put in her vase. There are now 19 roses in the vase. If there were 3 roses in the vase initially.", "executed": 16.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jessica cut some roses from her flower garden to put in her vase. There are now 19 roses in the vase. If there were 3 roses in the vase initially. How many roses did she cut?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x: the number of roses in the vase initially\n    # y: the number of roses in the vase after Jessica cut some roses\n    # z: the number of roses Jessica cut\n    x = 3\n    y = 19\n    z = y - x\n    return z\nans = solver()", "answer": 16.0}
{"question": "How many more children got off the bus than those that got on?", "passage": "23 children were riding on the bus. At the bus stop 24 children got on the bus while some got off the bus. Then there were 8 children altogether on the bus.", "executed": 15.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 23 children were riding on the bus. At the bus stop 24 children got on the bus while some got off the bus. Then there were 8 children altogether on the bus. How many more children got off the bus than those that got on?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of children that got off the bus\n    # y = number of children that got on the bus\n    # z = number of children that were on the bus\n    # z = 23 + y - x\n    # z = 8\n    # 23 + y - x = 8\n    # y - x = -15\n    # y = x - 15\n    # y = 24\n    # x - 15 = 24\n    # x = 39\n    return 39 - 24\nans = solver()", "answer": 15.0}
{"question": "How many pages does the book have altogether?", "passage": "A book has 3 chapters. The first chapter is 66 pages long the second chapter is 35 pages long and the third chapter is 24 pages long.", "executed": 125.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A book has 3 chapters. The first chapter is 66 pages long the second chapter is 35 pages long and the third chapter is 24 pages long. How many pages does the book have altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    chapter_1 = 66\n    chapter_2 = 35\n    chapter_3 = 24\n    # Now, we can add the variables to get the answer:\n    answer = chapter_1 + chapter_2 + chapter_3\n    return answer\nans = solver()", "answer": 125.0}
{"question": "How many peaches are in the basket?", "passage": "7 red peaches, 15 yellow peaches and 8 green peaches are in the basket.", "executed": 30.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 7 red peaches, 15 yellow peaches and 8 green peaches are in the basket. How many peaches are in the basket?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    red_peaches = 7\n    yellow_peaches = 15\n    green_peaches = 8\n    total_peaches = red_peaches + yellow_peaches + green_peaches\n    return total_peaches\nans = solver()", "answer": 30.0}
{"question": "How many flower beds did they have?", "passage": "Paige was helping her mom plant flowers and they put 10 seeds in each flower bed. If they planted 60 seeds altogther.", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paige was helping her mom plant flowers and they put 10 seeds in each flower bed. If they planted 60 seeds altogther. How many flower beds did they have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x: the number of flower beds\n    # y: the number of seeds\n    x = 0\n    y = 0\n    # Now, we can write the equation:\n    y = 10 * x\n    y = 60\n    x = 6\n    return x\nans = solver()", "answer": 6.0}
{"question": "How many more students suggested mashed potatoes than those that suggested bacon?", "passage": "Because of the decision Sofia asked the students to suggest specific types of food. If 257 students suggested adding mashed potatoes 120 suggested adding bacon to the menu and 97 suggested adding tomatoes.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Because of the decision Sofia asked the students to suggest specific types of food. If 257 students suggested adding mashed potatoes 120 suggested adding bacon to the menu and 97 suggested adding tomatoes. How many more students suggested mashed potatoes than those that suggested bacon?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # M = number of students suggested adding mashed potatoes\n    # B = number of students suggested adding bacon\n    # T = number of students suggested adding tomatoes\n    # We can also define the constraints:\n    # M + B + T = 257\n    # M - B = 137\n    # M + T = 354\n    # We can use the above constraints to solve for M, B, and T.\n    # M = 354 - T\n    # B = M - 137\n    # T + B + M = 257\n    # T + (M - 137) + M = 257\n    # T + M - 137 + M = 257\n    # 2M - 137 + T = 257\n    # 2M - 137 = 257 - T\n    # 2M = 257 - T + 137\n    # 2M = 257 - T + 137\n    # 2M = 394 - T\n    # 2M = 394 - T\n    # 2M/2 = 394/2 - T/2\n    # M = 197 - T/2\n    # M = 197 - T/2\n    # M = 197 - T/2\n    # M = 197 - T/2\n    # M = 197 - T/2\n    # M = 197 - T/2\n    # M = 197 - T/2\n    # M = 197 - T/2\n    # M = 197 - T/2\n    # M = 197 - T/2\n    # M = 197 - T/2\n    # M = 197 - T/\nans = solver()", "answer": 137.0}
{"question": "How many boys are there in the school now?", "passage": "In a school there are 135 girls and 214 boys. 496 more girls and 910 more boys joined the school.", "executed": 1124.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In a school there are 135 girls and 214 boys. 496 more girls and 910 more boys joined the school. How many boys are there in the school now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    girls_before = 135\n    boys_before = 214\n    girls_after = girls_before + 496\n    boys_after = boys_before + 910\n    boys_now = boys_after\n    return boys_now\nans = solver()", "answer": 1124.0}
{"question": "How much deeper is the water than Dean's height?", "passage": "After resting they decided to go for a swim. If the depth of the water is 10 times Dean's height and he stands at 9 feet.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: After resting they decided to go for a swim. If the depth of the water is 10 times Dean's height and he stands at 9 feet. How much deeper is the water than Dean's height?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    depth = 10\n    height = 9\n    # Now we can calculate the difference between the depth and the height\n    difference = depth - height\n    return difference\nans = solver()", "answer": 81.0}
{"question": "How many grams of wax does he already have?", "passage": "Next on his checklist is wax to stick the feathers together. He needs 159 g of wax more. If the feathers require a total of 628 g of wax.", "executed": 469.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Next on his checklist is wax to stick the feathers together. He needs 159 g of wax more. If the feathers require a total of 628 g of wax. How many grams of wax does he already have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    wax_needed = 628\n    wax_already_have = wax_needed - 159\n    return wax_already_have\nans = solver()", "answer": 469.0}
{"question": "How many days did he take to finish the book?", "passage": "Frank was reading through his favorite book. He read 8 pages per day. If the book had 576 pages.", "executed": 72.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank was reading through his favorite book. He read 8 pages per day. If the book had 576 pages. How many days did he take to finish the book?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    pages_per_day = 8\n    total_pages = 576\n    days = 0\n    # Now, we can use the variables to calculate the answer:\n    days = total_pages / pages_per_day\n    return days\nans = solver()", "answer": 72.0}
{"question": "How many green peaches are in the basket?", "passage": "There are a total of 16 peaches in a basket. If there are 13 red peaches and some more green peaches in the basket.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are a total of 16 peaches in a basket. If there are 13 red peaches and some more green peaches in the basket. How many green peaches are in the basket?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    red_peaches = 13\n    total_peaches = 16\n    green_peaches = total_peaches - red_peaches\n    return green_peaches\nans = solver()", "answer": 3.0}
{"question": "How deep was the water?", "passage": "After resting they decided to go for a swim. The depth of the water is 2 times Dean's height. Dean is 8 feet shorter than Ron. If Ron stands at 14 feet.", "executed": 44.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: After resting they decided to go for a swim. The depth of the water is 2 times Dean's height. Dean is 8 feet shorter than Ron. If Ron stands at 14 feet. How deep was the water?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Ron's height = r\n    # Dean's height = d\n    # Water depth = w\n    # We know that r = 14, and w = 2d\n    # We also know that r = d + 8\n    # We can substitute r = d + 8 into w = 2d\n    # w = 2(d + 8)\n    # w = 2d + 16\n    # We can substitute r = 14 into w = 2d + 16\n    # w = 2(14) + 16\n    # w = 28 + 16\n    # w = 44\n    return 44\nans = solver()", "answer": 12.0}
{"question": "How many flowers are there in all?", "passage": "There are 544 pots in each of the 10 gardens. Each pot has 32 flowers in it.", "executed": 174080.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 544 pots in each of the 10 gardens. Each pot has 32 flowers in it. How many flowers are there in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    pots_per_garden = 544\n    flowers_per_pot = 32\n    number_of_gardens = 10\n    total_flowers = pots_per_garden * flowers_per_pot * number_of_gardens\n    return total_flowers\nans = solver()", "answer": 174080.0}
{"question": "How many seeds did they plant?", "passage": "Paige was helping her mom plant flowers and together they planted some seeds. They put 10 seeds in each flower bed. If there are 45 flowerbeds.", "executed": 450.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paige was helping her mom plant flowers and together they planted some seeds. They put 10 seeds in each flower bed. If there are 45 flowerbeds. How many seeds did they plant?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    num_seeds = 10\n    num_flowerbeds = 45\n    # Now we can calculate the answer:\n    answer = num_seeds * num_flowerbeds\n    return answer\nans = solver()", "answer": 450.0}
{"question": "How much more did his strawberries weigh than his dad's?", "passage": "Marco and his dad went strawberry picking. Together their strawberries weighed 4 pounds. Marco's strawberries weighed 19 pounds.", "executed": 345.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Marco and his dad went strawberry picking. Together their strawberries weighed 4 pounds. Marco's strawberries weighed 19 pounds. How much more did his strawberries weigh than his dad's?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marco_strawberries = 19\n    dad_strawberries = 4\n    total_strawberries = marco_strawberries + dad_strawberries\n    marco_strawberries_weight = marco_strawberries * 19\n    dad_strawberries_weight = dad_strawberries * 4\n    total_strawberries_weight = marco_strawberries_weight + dad_strawberries_weight\n    marco_strawberries_weight_more_than_dad = marco_strawberries_weight - dad_strawberries_weight\n    return marco_strawberries_weight_more_than_dad\nans = solver()", "answer": 34.0}
{"question": "How many more kids did she play with on monday than on wednesday?", "passage": "Julia played tag with 4 kids on wednesday. She had played with 6 kids on monday and 17 kids on tuesday.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Julia played tag with 4 kids on wednesday. She had played with 6 kids on monday and 17 kids on tuesday. How many more kids did she play with on monday than on wednesday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 6\n    tuesday = 17\n    wednesday = 4\n    # Now, we can calculate the difference between monday and wednesday\n    difference = monday - wednesday\n    return difference\nans = solver()", "answer": 2.0}
{"question": "How many packs does she need so that no friend gets left out?", "passage": "Carol was sending out birthday invitations to 10 friends. If each package of invitations she bought had 2 invitations in it.", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Carol was sending out birthday invitations to 10 friends. If each package of invitations she bought had 2 invitations in it. How many packs does she need so that no friend gets left out?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # friends = 10\n    friends = 10\n    # invitations_per_pack = 2\n    invitations_per_pack = 2\n    # packs = ?\n    packs = math.ceil(friends / invitations_per_pack)\n    return packs\nans = solver()", "answer": 5.0}
{"question": "How many more bottles than apple did they have?", "passage": "A grocery store had 36 apples, 80 bottles of regular soda and 54 bottles of diet soda.", "executed": 98.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A grocery store had 36 apples, 80 bottles of regular soda and 54 bottles of diet soda. How many more bottles than apple did they have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    apples = 36\n    regular_soda = 80\n    diet_soda = 54\n    # Now, we can calculate the total number of bottles:\n    total_bottles = regular_soda + diet_soda\n    # Now, we can calculate the difference between the total number of bottles and the number of apples:\n    difference = total_bottles - apples\n    return difference\nans = solver()", "answer": 98.0}
{"question": "How much farther did the mouse jump than the grasshopper?", "passage": "The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped 14 inches. The mouse jumped 16 inches lesser than the frog who jumped 37 inches farther than the grasshopper.", "executed": 21.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped 14 inches. The mouse jumped 16 inches lesser than the frog who jumped 37 inches farther than the grasshopper. How much farther did the mouse jump than the grasshopper?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    grasshopper = 14\n    frog = grasshopper + 37\n    mouse = frog - 16\n    return mouse - grasshopper\nans = solver()", "answer": 21.0}
{"question": "How many pencils and crayons does she have altogether?", "passage": "Faye was placing her pencils and crayons into 11 rows with 31 pencils and 27 crayons in each row.", "executed": 638.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Faye was placing her pencils and crayons into 11 rows with 31 pencils and 27 crayons in each row. How many pencils and crayons does she have altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    pencils_per_row = 31\n    crayons_per_row = 27\n    rows = 11\n    total_pencils = pencils_per_row * rows\n    total_crayons = crayons_per_row * rows\n    total_items = total_pencils + total_crayons\n    return total_items\nans = solver()", "answer": 638.0}
{"question": "How many buses are needed to take the trip?", "passage": "The school is planning a field trip. The school has 87 classrooms. There are 58 students in the school with each classroom having the same number of students. If there are 2 seats on each school bus.", "executed": 0.16666666666666666, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school is planning a field trip. The school has 87 classrooms. There are 58 students in the school with each classroom having the same number of students. If there are 2 seats on each school bus. How many buses are needed to take the trip?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    classrooms = 87\n    students = 58\n    seats = 2\n    buses = 0\n    # Now, we can calculate the number of students in each classroom:\n    students_per_classroom = students / classrooms\n    # Now, we can calculate the number of students per bus:\n    students_per_bus = seats * 2\n    # Now, we can calculate the number of buses needed:\n    buses = students_per_classroom / students_per_bus\n    return buses\nans = solver()", "answer": 29.0}
{"question": "How many beads did each necklace need?", "passage": "Emily is making bead necklaces for her friends. She had 2 beads and she was able to make 32 necklaces.", "executed": 0.0625, "generated": "\nimport math\nimport numpy as np\n\n# Question: Emily is making bead necklaces for her friends. She had 2 beads and she was able to make 32 necklaces. How many beads did each necklace need?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    beads = 2\n    necklaces = 32\n    beads_per_necklace = beads / necklaces\n    return beads_per_necklace\nans = solver()", "answer": 16.0}
{"question": "How many fishes disappeared?", "passage": "Paige raised 7 goldfish and 12 catfish in the pond but stray cats loved eating them. Now she has 15 left.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paige raised 7 goldfish and 12 catfish in the pond but stray cats loved eating them. Now she has 15 left. How many fishes disappeared?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    goldfish = 7\n    catfish = 12\n    left = 15\n    # Now we can write the equation:\n    disappeared = goldfish + catfish - left\n    return disappeared\nans = solver()", "answer": 4.0}
{"question": "How many more salty cookies than sweet cookies did he eat?", "passage": "Paco had 40 sweet cookies and 25 salty cookies. He ate 28 salty cookies and 15 sweet cookies.", "executed": 13.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paco had 40 sweet cookies and 25 salty cookies. He ate 28 salty cookies and 15 sweet cookies. How many more salty cookies than sweet cookies did he eat?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sweet_cookies = 40\n    salty_cookies = 25\n    eaten_sweet_cookies = 15\n    eaten_salty_cookies = 28\n    # Now, we can calculate the number of sweet cookies left:\n    sweet_cookies_left = sweet_cookies - eaten_sweet_cookies\n    salty_cookies_left = salty_cookies - eaten_salty_cookies\n    # Now, we can calculate the number of salty cookies eaten:\n    salty_cookies_eaten = salty_cookies - salty_cookies_left\n    sweet_cookies_eaten = sweet_cookies - sweet_cookies_left\n    # Now, we can calculate the difference between the number of salty cookies eaten and the number of sweet cookies eaten:\n    difference = salty_cookies_eaten - sweet_cookies_eaten\n    return difference\nans = solver()", "answer": 13.0}
{"question": "How many peaches does Jill have?", "passage": "Steven has 14 peaches. Jake has 6 fewer peaches than Steven and 3 more peaches than Jill.", "executed": 11.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Steven has 14 peaches. Jake has 6 fewer peaches than Steven and 3 more peaches than Jill. How many peaches does Jill have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    steven = 14\n    jake = steven - 6\n    jill = jake + 3\n    return jill\nans = solver()", "answer": 5.0}
{"question": "How many books does he have left with him?", "passage": "Paul had 115 books. He sold 78 books in a garage sale.", "executed": 37.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul had 115 books. He sold 78 books in a garage sale. How many books does he have left with him?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    books_paul_had = 115\n    books_paul_sold = 78\n    books_paul_left = books_paul_had - books_paul_sold\n    return books_paul_left\nans = solver()", "answer": 37.0}
{"question": "How many minutes did the machine work in all?", "passage": "An industrial machine made 13 shirts yesterday and 3 shirts today. It can make 8 shirts a minute.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: An industrial machine made 13 shirts yesterday and 3 shirts today. It can make 8 shirts a minute. How many minutes did the machine work in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   x: the number of minutes the machine worked yesterday\n    #   y: the number of minutes the machine worked today\n    #   z: the number of minutes the machine worked in all\n    x = 0\n    y = 0\n    z = 0\n    # According to the question, we can define the equations:\n    #   13 = 8 * x\n    #   3 = 8 * y\n    #   z = x + y\n    x = 13 / 8\n    y = 3 / 8\n    z = x + y\n    return z\nans = solver()", "answer": 2.0}
{"question": "How many friends can she invite?", "passage": "Carol was sending out birthday invitations to her friends. Each package of invitations she bought had 14 invitations in it and she bought 6 packs. Then she bought 11 extra invitations.", "executed": 95.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Carol was sending out birthday invitations to her friends. Each package of invitations she bought had 14 invitations in it and she bought 6 packs. Then she bought 11 extra invitations. How many friends can she invite?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    packs = 6\n    invitations_per_pack = 14\n    extra_invitations = 11\n    total_invitations = packs * invitations_per_pack + extra_invitations\n    return total_invitations\nans = solver()", "answer": 95.0}
{"question": "How many minutes was the machine working?", "passage": "An industrial machine can make 3 shirts per minute. It made 6 shirts in all.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: An industrial machine can make 3 shirts per minute. It made 6 shirts in all. How many minutes was the machine working?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   shirts_per_minute = 3\n    #   total_shirts = 6\n    shirts_per_minute = 3\n    total_shirts = 6\n    # Now, we can calculate the answer:\n    #   total_minutes = total_shirts / shirts_per_minute\n    total_minutes = total_shirts / shirts_per_minute\n    return total_minutes\nans = solver()", "answer": 2.0}
{"question": "How many bottle caps did danny have at first?", "passage": "Danny collects bottle caps. He found 63 bottle caps at the park while he threw away 51 old ones. Now he has 33 bottle caps in his collection.", "executed": 147.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Danny collects bottle caps. He found 63 bottle caps at the park while he threw away 51 old ones. Now he has 33 bottle caps in his collection. How many bottle caps did danny have at first?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   x: the number of bottle caps Danny had at first\n    #   y: the number of bottle caps Danny found at the park\n    #   z: the number of bottle caps Danny threw away\n    #   w: the number of bottle caps Danny has in his collection\n    #   x = y + z + w\n    #   y = 63\n    #   z = 51\n    #   w = 33\n    #   x = 63 + 51 + 33\n    x = 63 + 51 + 33\n    return x\nans = solver()", "answer": 21.0}
{"question": "How many more bottles of regular soda than diet soda did they have?", "passage": "A grocery store had 67 bottles of regular soda and 9 bottles of diet soda.", "executed": 58.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A grocery store had 67 bottles of regular soda and 9 bottles of diet soda. How many more bottles of regular soda than diet soda did they have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    regular_soda = 67\n    diet_soda = 9\n    # Now, we can calculate the difference between the two variables:\n    difference = regular_soda - diet_soda\n    return difference\nans = solver()", "answer": 58.0}
{"question": "How many kids are in Lawrence county?", "passage": "During summer break 644997 kids from Lawrence county stayed home and the other 893835 kids went to camp. An additional 78 kids from outside the county attended the camp.", "executed": 1538754.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: During summer break 644997 kids from Lawrence county stayed home and the other 893835 kids went to camp. An additional 78 kids from outside the county attended the camp. How many kids are in Lawrence county?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    kids_in_county = 0\n    kids_in_camp = 0\n    kids_out_of_county = 0\n    kids_at_home = 0\n    # We can also define the constants:\n    kids_in_camp_total = 893835\n    kids_at_home_total = 644997\n    kids_out_of_county_total = 78\n    # Now we can start to derive the answer:\n    kids_in_camp = kids_in_camp_total - kids_out_of_county_total\n    kids_at_home = kids_at_home_total\n    kids_in_county = kids_in_camp + kids_at_home\n    return kids_in_county\nans = solver()", "answer": 1538832.0}
{"question": "How many rows could she make?", "passage": "Faye was placing 30 pencils into rows with 5 pencils in each row.", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Faye was placing 30 pencils into rows with 5 pencils in each row. How many rows could she make?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    pencils = 30\n    pencils_in_each_row = 5\n    rows = 0\n    # Now, we can use the variables to calculate the answer:\n    rows = pencils / pencils_in_each_row\n    return rows\nans = solver()", "answer": 6.0}
{"question": "How many pieces of candy did he have?", "passage": "Frank had some pieces of candy. If he put them into 26 bags with 33 pieces in each bag.", "executed": 858.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank had some pieces of candy. If he put them into 26 bags with 33 pieces in each bag. How many pieces of candy did he have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # bag_num = 26\n    # candy_num = 33\n    bag_num = 26\n    candy_num = 33\n    # Now, we can calculate the total number of candies:\n    total_candy_num = bag_num * candy_num\n    return total_candy_num\nans = solver()", "answer": 858.0}
{"question": "How many bottles of diet soda did they have?", "passage": "A grocery store had a total of 17 bottles of which 9 were bottles of regular soda and the rest were bottles of diet soda. They also had 29 apple.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A grocery store had a total of 17 bottles of which 9 were bottles of regular soda and the rest were bottles of diet soda. They also had 29 apple. How many bottles of diet soda did they have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # total_bottles = 17\n    total_bottles = 17\n    # regular_bottles = 9\n    regular_bottles = 9\n    # diet_bottles = ?\n    diet_bottles = None\n    # total_apples = 29\n    total_apples = 29\n    # Now, we can use the variables to derive the answer:\n    diet_bottles = total_bottles - regular_bottles\n    return diet_bottles\nans = solver()", "answer": 8.0}
{"question": "How many more peaches does Jake have than Jill?", "passage": "Jake has 3 fewer peaches than Steven who has 8 more peaches than Jill. Steven has 5 peaches.", "executed": -3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jake has 3 fewer peaches than Steven who has 8 more peaches than Jill. Steven has 5 peaches. How many more peaches does Jake have than Jill?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    jake = 0\n    steven = 0\n    jill = 0\n    # Now, we can define the equations:\n    jake = steven - 3\n    steven = jill + 8\n    steven = 5\n    # Now, we can solve the equations:\n    jill = steven - 8\n    jake = jill - 3\n    # Now, we can calculate the answer:\n    answer = jake - jill\n    return answer\nans = solver()", "answer": 5.0}
{"question": "How many marbles does Josh have now?", "passage": "Josh had 20 marbles in his collection. He gave 2 marbles to Jack.", "executed": 18.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Josh had 20 marbles in his collection. He gave 2 marbles to Jack. How many marbles does Josh have now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    josh_marbles = 20\n    jack_marbles = 0\n    given_marbles = 2\n    # Now, we can calculate the answer:\n    josh_marbles = josh_marbles - given_marbles\n    jack_marbles = jack_marbles + given_marbles\n    return josh_marbles\nans = solver()", "answer": 18.0}
{"question": "How many peaches does Jake have?", "passage": "Steven has 12 peaches. Jake has 4 fewer peaches than Steven who has 67 more peaches than Jill.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Steven has 12 peaches. Jake has 4 fewer peaches than Steven who has 67 more peaches than Jill. How many peaches does Jake have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    steven = 12\n    jake = steven - 4\n    jill = jake - 67\n    return jake\nans = solver()", "answer": 8.0}
{"question": "How much money did they make from selling the t-shirts during the arkansas game?", "passage": "The Razorback t-shirt shop makes $ 98 dollars off each t-shirt sold. During the Arkansas game and the Texas tech game they sold a total of 163 t-shirts. If they sold 89 t-shirts during the Arkansas game.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: The Razorback t-shirt shop makes $ 98 dollars off each t-shirt sold. During the Arkansas game and the Texas tech game they sold a total of 163 t-shirts. If they sold 89 t-shirts during the Arkansas game. How much money did they make from selling the t-shirts during the arkansas game?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # t_shirt_sold_arkansas = 89\n    # t_shirt_sold_texas_tech = 163 - 89 = 74\n    # t_shirt_sold_total = 163\n    # t_shirt_sold_arkansas = 89\n    # t_shirt_sold_texas_tech = 74\n    # t_shirt_sold_total = 163\n    # t_shirt_sold_arkansas = 89\n    # t_shirt_sold_texas_tech = 74\n    # t_shirt_sold_total = 163\n    # t_shirt_sold_arkansas = 89\n    # t_shirt_sold_texas_tech = 74\n    # t_shirt_sold_total = 163\n    # t_shirt_sold_arkansas = 89\n    # t_shirt_sold_texas_tech = 74\n    # t_shirt_sold_total = 163\n    # t_shirt_sold_arkansas = 89\n    # t_shirt_sold_texas_tech = 74\n    # t_shirt_sold_total = 163\n    # t_shirt_sold_arkansas = 89\n    # t_shirt_sold_texas_tech = 74\n    # t_shirt_sold_total = 163\n    # t_shirt_sold_arkansas = 89\n    # t_shirt_sold_texas_tech = 74\n    # t_shirt_sold_total = 163\n    # t_shirt_sold_arkansas = 89\n    #\nans = solver()", "answer": 8722.0}
{"question": "How many emails did Jack receive in the day?", "passage": "Jack received 6 emails in the morning, 3 emails in the afternoon and 5 emails in the evening.", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jack received 6 emails in the morning, 3 emails in the afternoon and 5 emails in the evening. How many emails did Jack receive in the day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning_emails = 6\n    afternoon_emails = 3\n    evening_emails = 5\n    total_emails = morning_emails + afternoon_emails + evening_emails\n    return total_emails\nans = solver()", "answer": 14.0}
{"question": "How many more peaches does Jake have than Jill?", "passage": "Jake has 5 fewer peaches than Steven. Steven has 18 more peaches than Jill. If Jill has 87 peaches.", "executed": 13.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jake has 5 fewer peaches than Steven. Steven has 18 more peaches than Jill. If Jill has 87 peaches. How many more peaches does Jake have than Jill?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    jake = 0\n    steven = 0\n    jill = 87\n    # Then we can define the equations:\n    jake = steven - 5\n    steven = jill + 18\n    # Now we can solve the equations:\n    jake = jill + 13\n    return jake - jill\nans = solver()", "answer": 13.0}
{"question": "How many nails does John need for the house wall?", "passage": "For the walls of the house he would use 13 large planks of wood. If each plank of wood needs 17 pieces of nails to be secured and in addition 8 nails are needed for some smaller planks.", "executed": 285.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For the walls of the house he would use 13 large planks of wood. If each plank of wood needs 17 pieces of nails to be secured and in addition 8 nails are needed for some smaller planks. How many nails does John need for the house wall?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    large_planks = 13\n    small_planks = 8\n    nails_per_large_plank = 17\n    nails_per_small_plank = 8\n    total_nails = large_planks * nails_per_large_plank + small_planks * nails_per_small_plank\n    return total_nails\nans = solver()", "answer": 229.0}
{"question": "How many more bottles of regular soda than diet soda did they have?", "passage": "A grocery store had 54 bottles of diet soda, 83 bottles of regular soda and 12 apples.", "executed": 29.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A grocery store had 54 bottles of diet soda, 83 bottles of regular soda and 12 apples. How many more bottles of regular soda than diet soda did they have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    diet_soda = 54\n    regular_soda = 83\n    apples = 12\n    # Now, we can calculate the difference between regular soda and diet soda:\n    difference = regular_soda - diet_soda\n    return difference\nans = solver()", "answer": 29.0}
{"question": "How many more students suggested mashed potatoes than those that suggested bacon?", "passage": "Because of the decision Sofia asked the students to suggest specific types of food. If 269 students suggested adding bacon 330 suggested adding mashed potatoes to the menu and 76 suggested adding tomatoes.", "executed": 61.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Because of the decision Sofia asked the students to suggest specific types of food. If 269 students suggested adding bacon 330 suggested adding mashed potatoes to the menu and 76 suggested adding tomatoes. How many more students suggested mashed potatoes than those that suggested bacon?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bacon = 269\n    mashed_potatoes = 330\n    tomatoes = 76\n    # Now, we can calculate the difference between the number of students who suggested adding mashed potatoes and those that suggested bacon\n    difference = mashed_potatoes - bacon\n    return difference\nans = solver()", "answer": 61.0}
{"question": "How many cookies did she prepare?", "passage": "Brenda's mother made cookies for 14. If each of them had 30 cookies.", "executed": 420.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Brenda's mother made cookies for 14. If each of them had 30 cookies. How many cookies did she prepare?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookies_per_person = 30\n    number_of_people = 14\n    total_cookies = cookies_per_person * number_of_people\n    return total_cookies\nans = solver()", "answer": 420.0}
{"question": "How many more apps did he delete than he added?", "passage": "Dave had 15 apps on his phone. He added 71 new apps. After deleting some he had 14 left.", "executed": 72.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dave had 15 apps on his phone. He added 71 new apps. After deleting some he had 14 left. How many more apps did he delete than he added?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of apps Dave added\n    # y = number of apps Dave deleted\n    # z = number of apps Dave had left\n    # We can then write the following equations:\n    # x + 15 = z + y\n    # x = 71\n    # z = 14\n    # We can then solve for y:\n    x = 71\n    z = 14\n    y = x + 15 - z\n    return y\nans = solver()", "answer": 1.0}
{"question": "How many will she have left if she gives away 64 games?", "passage": "Kelly has 106 nintendo games.", "executed": 42.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Kelly has 106 nintendo games. How many will she have left if she gives away 64 games?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    nintendo_games = 106\n    games_given_away = 64\n    games_left = nintendo_games - games_given_away\n    return games_left\nans = solver()", "answer": 42.0}
{"question": "How many crackers did each friend eat?", "passage": "Matthew had 15 crackers. If Matthew gave equal numbers of crackers to his 5 friends and still had 10 crackers left.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Matthew had 15 crackers. If Matthew gave equal numbers of crackers to his 5 friends and still had 10 crackers left. How many crackers did each friend eat?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of crackers each friend ate\n    # y = number of crackers Matthew had left\n    # z = number of crackers Matthew had in the beginning\n    # We can also define the equation:\n    # z = 5x + y\n    # z = 15\n    # y = 10\n    # We can solve for x by substituting the values of z and y into the equation:\n    # 15 = 5x + 10\n    # 5x = 5\n    # x = 1\n    return 1\nans = solver()", "answer": 1.0}
{"question": "How much money did Jason make over the weekend?", "passage": "Last week Fred had 114 dollars and Jason had 22 dollars. They washed cars over the weekend and now Fred has 21 dollars and Jason has 78 dollars.", "executed": 56.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Last week Fred had 114 dollars and Jason had 22 dollars. They washed cars over the weekend and now Fred has 21 dollars and Jason has 78 dollars. How much money did Jason make over the weekend?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    fred_before = 114\n    jason_before = 22\n    fred_after = 21\n    jason_after = 78\n    # Now we can calculate the difference between the before and after:\n    fred_diff = fred_before - fred_after\n    jason_diff = jason_after - jason_before\n    # Now we can calculate the answer:\n    answer = jason_diff\n    return answer\nans = solver()", "answer": 56.0}
{"question": "How many pieces of candy are in each bag?", "passage": "Frank had 42 pieces of candy. If he put them equally into 2 bags.", "executed": 21.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank had 42 pieces of candy. If he put them equally into 2 bags. How many pieces of candy are in each bag?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # candy_total = 42\n    # bag_total = 2\n    # candy_per_bag = ?\n    candy_total = 42\n    bag_total = 2\n    candy_per_bag = candy_total / bag_total\n    return candy_per_bag\nans = solver()", "answer": 21.0}
{"question": "How many more emails did Jack receive in the morning than in the afternoon?", "passage": "Jack received 6 emails in the morning and 2 emails in the afternoon.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jack received 6 emails in the morning and 2 emails in the afternoon. How many more emails did Jack receive in the morning than in the afternoon?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning_emails = 6\n    afternoon_emails = 2\n    # Now, we can calculate the difference between the morning emails and the afternoon emails:\n    difference = morning_emails - afternoon_emails\n    # Finally, we can return the difference:\n    return difference\nans = solver()", "answer": 4.0}
{"question": "How many more pastries than cakes did baker sell?", "passage": "Baker made 43 cakes and 114 pastries. If he sold 154 pastries and 78 cakes.", "executed": 76.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 43 cakes and 114 pastries. If he sold 154 pastries and 78 cakes. How many more pastries than cakes did baker sell?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cakes = 43\n    pastries = 114\n    sold_pastries = 154\n    sold_cakes = 78\n    # Now, we can calculate the difference between the sold pastries and cakes\n    difference = sold_pastries - sold_cakes\n    # Now, we can calculate the difference between the sold pastries and cakes\n    difference = sold_pastries - sold_cakes\n    return difference\nans = solver()", "answer": 76.0}
{"question": "How many will each of the boys receive?", "passage": "Haley has 20 marbles. In her class 2 boys love to play marbles. If she distributes her marbles equally.", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Haley has 20 marbles. In her class 2 boys love to play marbles. If she distributes her marbles equally. How many will each of the boys receive?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Haley's marbles: haley_marbles\n    haley_marbles = 20\n    # Number of boys: num_boys\n    num_boys = 2\n    # Number of marbles each boy will receive: marbles_each_boy\n    marbles_each_boy = haley_marbles / num_boys\n    return marbles_each_boy\nans = solver()", "answer": 10.0}
{"question": "How many more chairs will they have to buy?", "passage": "They decided to hold the party in their backyard. They have 4 sets of tables and each set has 3 chairs. If a total of 14 people will attend the party.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: They decided to hold the party in their backyard. They have 4 sets of tables and each set has 3 chairs. If a total of 14 people will attend the party. How many more chairs will they have to buy?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # number of tables = 4\n    # number of chairs per table = 3\n    # number of people = 14\n    # number of chairs = number of tables * number of chairs per table\n    # number of chairs = 4 * 3\n    # number of chairs = 12\n    # number of chairs needed = number of people\n    # number of chairs needed = 14\n    # number of chairs needed - number of chairs = number of chairs to buy\n    # 14 - 12 = 2\n    return 2\nans = solver()", "answer": 2.0}
{"question": "How much money did Fred earn over the weekend?", "passage": "Last week Fred had 19 dollars and Jason had 16 dollars. They washed cars over the weekend and now Fred has 40 dollars and Jason has 69 dollars.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Last week Fred had 19 dollars and Jason had 16 dollars. They washed cars over the weekend and now Fred has 40 dollars and Jason has 69 dollars. How much money did Fred earn over the weekend?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    fred_before = 19\n    jason_before = 16\n    fred_after = 40\n    jason_after = 69\n    # Now we can calculate the difference between the before and after:\n    fred_diff = fred_after - fred_before\n    jason_diff = jason_after - jason_before\n    # Now we can calculate the total difference:\n    total_diff = fred_diff + jason_diff\n    # Now we can calculate the difference between the total difference and the difference of Fred:\n    fred_diff_diff = total_diff - fred_diff\n    # Now we can calculate the difference between the total difference and the difference of Jason:\n    jason_diff_diff = total_diff - jason_diff\n    # Now we can calculate the difference between the difference of Fred and the difference of Jason:\n    fred_jason_diff_diff = fred_diff - jason_diff\n    # Now we can calculate the difference between the difference of Fred and the difference of Jason:\n    fred_jason_diff_diff_diff = fred_diff_diff - jason_diff_diff\n    # Now we can calculate the difference between the difference of Fred and the difference of Jason:\n    fred_jason_diff_diff_diff_diff = fred_jason_diff_diff - fred_jason_diff_diff_diff\n    # Now we can calculate the difference between the difference of Fred and the difference of\nans = solver()", "answer": 21.0}
{"question": "How many more cookies did he eat than those he bought?", "passage": "Paco had 25 cookies. He ate 5 of them. Then he bought 3 more cookies.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paco had 25 cookies. He ate 5 of them. Then he bought 3 more cookies. How many more cookies did he eat than those he bought?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookies_ate = 5\n    cookies_bought = 3\n    cookies_ate_more = cookies_ate - cookies_bought\n    return cookies_ate_more\nans = solver()", "answer": 2.0}
{"question": "How many apples did Rachel pick in all?", "passage": "Rachel has 4 apple trees. She picked 7 apples from each of her trees. Now the trees have a total 29 apples still on them.", "executed": 56.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel has 4 apple trees. She picked 7 apples from each of her trees. Now the trees have a total 29 apples still on them. How many apples did Rachel pick in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of apples picked from each tree\n    # y = number of apples left on each tree\n    # z = number of apples picked in all\n    # We can also define the equations:\n    # x + y = 7\n    # x + y = 8\n    # x + y = 9\n    # x + y = 10\n    # x + y + x + y + x + y + x + y = z\n    # z = 29\n    # Now we can solve the equations to get the answer\n    x = 7\n    y = 7\n    z = x + y + x + y + x + y + x + y\n    return z\nans = solver()", "answer": 28.0}
{"question": "How many more peaches than apples does Steven have?", "passage": "Jake has 8 fewer peaches and 10 more apples than Steven. Steven has 11 apples and 18 peaches.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jake has 8 fewer peaches and 10 more apples than Steven. Steven has 11 apples and 18 peaches. How many more peaches than apples does Steven have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    apples_jake = 0\n    peaches_jake = 0\n    apples_steven = 0\n    peaches_steven = 0\n    # Now, we can write the equations:\n    apples_jake = apples_steven + 10\n    peaches_jake = peaches_steven - 8\n    apples_steven = 11\n    peaches_steven = 18\n    # Now, we can solve the equations:\n    apples_jake = apples_steven + 10\n    apples_jake = 11 + 10\n    apples_jake = 21\n    peaches_jake = peaches_steven - 8\n    peaches_jake = 18 - 8\n    peaches_jake = 10\n    apples_steven = 11\n    peaches_steven = 18\n    # Now, we can calculate the answer:\n    answer = peaches_steven - apples_steven\n    answer = 18 - 11\n    answer = 7\n    return answer\nans = solver()", "answer": 7.0}
{"question": "How many bottles of diet soda did they have?", "passage": "A grocery store had a total of 30 bottles of which 28 were bottles of regular soda and the rest were bottles of diet soda.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A grocery store had a total of 30 bottles of which 28 were bottles of regular soda and the rest were bottles of diet soda. How many bottles of diet soda did they have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    total_bottles = 30\n    regular_bottles = 28\n    diet_bottles = total_bottles - regular_bottles\n    return diet_bottles\nans = solver()", "answer": 2.0}
{"question": "How many people can ride the Ferris wheel on small seats?", "passage": "The Ferris wheel in paradise park has 2 small seats and 23 large seats. Each small seat can hold 14 people and large seat can hold 54 people.", "executed": 1270.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The Ferris wheel in paradise park has 2 small seats and 23 large seats. Each small seat can hold 14 people and large seat can hold 54 people. How many people can ride the Ferris wheel on small seats?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    small_seats = 2\n    large_seats = 23\n    small_seat_capacity = 14\n    large_seat_capacity = 54\n    total_capacity = small_seats * small_seat_capacity + large_seats * large_seat_capacity\n    return total_capacity\nans = solver()", "answer": 28.0}
{"question": "How many days would the soda bottles last?", "passage": "Debby bought 360 soda bottles and 162 water bottles when they were on sale. If she drank 122 water bottles and 9 soda bottles a day.", "executed": 40.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Debby bought 360 soda bottles and 162 water bottles when they were on sale. If she drank 122 water bottles and 9 soda bottles a day. How many days would the soda bottles last?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    soda_bottles = 360\n    water_bottles = 162\n    soda_drank = 9\n    water_drank = 122\n    soda_days = 0\n    water_days = 0\n    soda_days = soda_bottles / soda_drank\n    water_days = water_bottles / water_drank\n    return soda_days\nans = solver()", "answer": 40.0}
{"question": "How many bottles of regular soda did they have?", "passage": "A grocery store had 4 bottles of diet soda. If they had 79 more bottles of regular soda than diet soda.", "executed": 83.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A grocery store had 4 bottles of diet soda. If they had 79 more bottles of regular soda than diet soda. How many bottles of regular soda did they have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    diet_soda = 4\n    regular_soda = diet_soda + 79\n    return regular_soda\nans = solver()", "answer": 83.0}
{"question": "How many t-shirts did they sell?", "passage": "During the Arkansas and Texas tech game the Razorback t-shirt shop made $ 60 by selling t-shirts. If they make $ 10 dollars off each t-shirt sold.", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: During the Arkansas and Texas tech game the Razorback t-shirt shop made $ 60 by selling t-shirts. If they make $ 10 dollars off each t-shirt sold. How many t-shirts did they sell?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # t = number of t-shirts sold\n    # p = price of each t-shirt\n    # r = revenue\n    # c = cost\n    # p = 10\n    # r = 60\n    # c = p * t\n    # r = c\n    # 60 = 10 * t\n    # t = 6\n    return 6\nans = solver()", "answer": 6.0}
{"question": "How many pages are there in the book?", "passage": "Frank was reading through his favorite book. He read 22 pages per day and it took him 569 days to finish the book.", "executed": 12518.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank was reading through his favorite book. He read 22 pages per day and it took him 569 days to finish the book. How many pages are there in the book?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    pages_per_day = 22\n    days_to_finish = 569\n    # Now, we can calculate the number of pages in the book:\n    pages_in_book = pages_per_day * days_to_finish\n    return pages_in_book\nans = solver()", "answer": 12518.0}
{"question": "How many more bird families flew away for the winter than those that stayed behind?", "passage": "Winter is almost here and most animals are migrating to warmer countries. 86 bird families flew away for the winter from near a mountain. If there were 45 bird families living near the mountain initially.", "executed": 41.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Winter is almost here and most animals are migrating to warmer countries. 86 bird families flew away for the winter from near a mountain. If there were 45 bird families living near the mountain initially. How many more bird families flew away for the winter than those that stayed behind?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # bird_families_left = 45\n    # bird_families_migrated = 86\n    # bird_families_migrated_more = ?\n    bird_families_left = 45\n    bird_families_migrated = 86\n    bird_families_migrated_more = bird_families_migrated - bird_families_left\n    return bird_families_migrated_more\nans = solver()", "answer": 127.0}
{"question": "How many more balloons did Jake have than Allan in the park?", "passage": "Allan brought 2 balloons to the park and then bought 3 more balloons there. If Jake brought 6 balloons to the park.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Allan brought 2 balloons to the park and then bought 3 more balloons there. If Jake brought 6 balloons to the park. How many more balloons did Jake have than Allan in the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    allan_balloons = 2\n    allan_balloons_in_park = allan_balloons + 3\n    jake_balloons = 6\n    jake_balloons_in_park = jake_balloons\n    # Now we can calculate the difference between Jake and Allan's balloons in the park:\n    difference = jake_balloons_in_park - allan_balloons_in_park\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many magazines does he have in total?", "passage": "Bryan took a look at his books and magazines. If he has 9 books and 46 magazines in each of his 10 bookshelves.", "executed": 4140.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bryan took a look at his books and magazines. If he has 9 books and 46 magazines in each of his 10 bookshelves. How many magazines does he have in total?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    books = 9\n    magazines = 46\n    bookshelves = 10\n    total_magazines = books * magazines * bookshelves\n    return total_magazines\nans = solver()", "answer": 460.0}
{"question": "How many pages of math and biology homework did she have to complete?", "passage": "Rachel had to complete 8 pages of math homework, 7 pages of reading homework and 3 more pages of biology homework.", "executed": 18.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel had to complete 8 pages of math homework, 7 pages of reading homework and 3 more pages of biology homework. How many pages of math and biology homework did she have to complete?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    math_pages = 8\n    reading_pages = 7\n    biology_pages = 3\n    total_pages = math_pages + reading_pages + biology_pages\n    print(\"Total pages:\", total_pages)\n    return total_pages\nans = solver()", "answer": 11.0}
{"question": "How many more hours does he spend on learning chinese than he does on learning spanish?", "passage": "Every day Ryan spends 2 hours on learning english, 5 hours on learning chinese and 4 hours on learning spanish.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Every day Ryan spends 2 hours on learning english, 5 hours on learning chinese and 4 hours on learning spanish. How many more hours does he spend on learning chinese than he does on learning spanish?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    english = 2\n    chinese = 5\n    spanish = 4\n    # Now, we can calculate the difference between chinese and spanish\n    difference = chinese - spanish\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many more birds than storks are sitting on the fence?", "passage": "2 birds were sitting on the fence. 5 more birds and 4 more storks came to join them.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 2 birds were sitting on the fence. 5 more birds and 4 more storks came to join them. How many more birds than storks are sitting on the fence?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    birds = 2\n    storks = 0\n    birds_added = 5\n    storks_added = 4\n    birds_total = birds + birds_added\n    storks_total = storks + storks_added\n    birds_more_than_storks = birds_total - storks_total\n    return birds_more_than_storks\nans = solver()", "answer": 3.0}
{"question": "How many more cookies did he give to his friend than those he ate?", "passage": "Paco had 6 cookies. He gave 30 cookies to his friend and ate 23 cookies.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paco had 6 cookies. He gave 30 cookies to his friend and ate 23 cookies. How many more cookies did he give to his friend than those he ate?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookies_paco_had = 6\n    cookies_paco_gave = 30\n    cookies_paco_ate = 23\n    cookies_paco_gave_more = cookies_paco_gave - cookies_paco_ate\n    return cookies_paco_gave_more\nans = solver()", "answer": 7.0}
{"question": "How many more cakes did baker sell than those he bought?", "passage": "Baker made 170 cakes. He sold 78 of them and bought 31 new cakes.", "executed": 47.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 170 cakes. He sold 78 of them and bought 31 new cakes. How many more cakes did baker sell than those he bought?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cakes_baker_made = 170\n    cakes_baker_sold = 78\n    cakes_baker_bought = 31\n    cakes_baker_sold_more_than_bought = cakes_baker_sold - cakes_baker_bought\n    return cakes_baker_sold_more_than_bought\nans = solver()", "answer": 47.0}
{"question": "How many boxes of trefoils does she need to deliver if each case has 14 boxes?", "passage": "Shirley sold 25 cases of boxes of trefoils.", "executed": 350.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Shirley sold 25 cases of boxes of trefoils. How many boxes of trefoils does she need to deliver if each case has 14 boxes?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    num_of_cases = 25\n    num_of_boxes_per_case = 14\n    num_of_boxes = num_of_cases * num_of_boxes_per_case\n    return num_of_boxes\nans = solver()", "answer": 350.0}
{"question": "How many slices of pizza are there altogether?", "passage": "We ordered 17 pizzas. Each pizza has 4 slices. If there are 25 of us.", "executed": 18.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: We ordered 17 pizzas. Each pizza has 4 slices. If there are 25 of us. How many slices of pizza are there altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    num_pizza = 17\n    num_slice_per_pizza = 4\n    num_people = 25\n    num_slice_per_person = 2\n    num_slice_left = num_pizza * num_slice_per_pizza - num_people * num_slice_per_person\n    return num_slice_left\nans = solver()", "answer": 68.0}
{"question": "How many orchids did she cut?", "passage": "There were 12 roses and 2 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now 10 roses and 21 orchids in the vase.", "executed": 19.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 12 roses and 2 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now 10 roses and 21 orchids in the vase. How many orchids did she cut?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of roses cut\n    # y = number of orchids cut\n    # Then we can write the equations:\n    # x + 12 = 10\n    # y + 2 = 21\n    # Solve the equations:\n    x = 10 - 12\n    y = 21 - 2\n    return y\nans = solver()", "answer": 19.0}
{"question": "How many packages will she have?", "passage": "White t - shirts can be purchased in packages. If mom buys 66 white t - shirts where each package has 3 white t - shirts.", "executed": 22.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: White t - shirts can be purchased in packages. If mom buys 66 white t - shirts where each package has 3 white t - shirts. How many packages will she have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # number of packages = x\n    # number of white t-shirts = 66\n    # number of white t-shirts in each package = 3\n    x = 66 / 3\n    return x\nans = solver()", "answer": 22.0}
{"question": "How many more cups of sugar does she need to add?", "passage": "Mary is baking a cake. The recipe calls for 5 cups of flour and 14 cups of sugar. She already put in 10 cups of flour and 2 cups of sugar.", "executed": 12.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 5 cups of flour and 14 cups of sugar. She already put in 10 cups of flour and 2 cups of sugar. How many more cups of sugar does she need to add?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    flour_needed = 5\n    sugar_needed = 14\n    flour_added = 10\n    sugar_added = 2\n    # Now, we can calculate the answer:\n    sugar_remaining = sugar_needed - sugar_added\n    return sugar_remaining\nans = solver()", "answer": 12.0}
{"question": "How many packages will she have?", "passage": "Mom buys 51 white t - shirts. If white t - shirts can be purchased in packages of 3.", "executed": 17.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mom buys 51 white t - shirts. If white t - shirts can be purchased in packages of 3. How many packages will she have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    white_t_shirts = 51\n    package_size = 3\n    # Now, we can calculate the number of packages:\n    number_of_packages = math.ceil(white_t_shirts / package_size)\n    return number_of_packages\nans = solver()", "answer": 17.0}
{"question": "How many total items could his shelves hold?", "passage": "Adam could fit 8 action figures and 10 cabinets on each shelf in his room. His room has 4 shelves.", "executed": 320.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Adam could fit 8 action figures and 10 cabinets on each shelf in his room. His room has 4 shelves. How many total items could his shelves hold?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    action_figures = 8\n    cabinets = 10\n    shelves = 4\n    total_items = action_figures * cabinets * shelves\n    return total_items\nans = solver()", "answer": 72.0}
{"question": "How many slices are there in each pizza?", "passage": "We ordered 7 pizzas. Each pizza has the same number of slices. If there were a total of 14 slices.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: We ordered 7 pizzas. Each pizza has the same number of slices. If there were a total of 14 slices. How many slices are there in each pizza?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    num_pizzas = 7\n    num_slices = 14\n    num_slices_per_pizza = num_slices / num_pizzas\n    return num_slices_per_pizza\nans = solver()", "answer": 2.0}
{"question": "How many more cakes did baker make than those he sold?", "passage": "Baker made 144 cakes. He sold 71 of them. Then he made 111 more cakes.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 144 cakes. He sold 71 of them. Then he made 111 more cakes. How many more cakes did baker make than those he sold?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cakes_made = 144\n    cakes_sold = 71\n    cakes_made_more = 111\n    cakes_sold_more = 0\n    cakes_made_total = 0\n    cakes_sold_total = 0\n    cakes_made_more_total = 0\n    cakes_sold_more_total = 0\n    cakes_made_more_than_sold = 0\n    cakes_made_more_than_sold_total = 0\n    cakes_made_more_than_sold_more = 0\n    cakes_made_more_than_sold_more_total = 0\n    cakes_made_more_than_sold_more_total_total = 0\n    cakes_made_more_than_sold_more_total_total_total = 0\n    cakes_made_more_than_sold_more_total_total_total_total = 0\n    cakes_made_more_than_sold_more_total_total_total_total_total = 0\n    cakes_made_more_than_sold_more_total_total_total_total_total_total = 0\n    cakes_made_more_than_sold_more_total_total_total_total_total_total_total = 0\n    cakes_made_more_than_sold_more_total_total_total_total_total_total_total_total = 0\n    cakes_made_more_than_sold_more_total_total_total_total_total_total_total_total_total = 0\nans = solver()", "answer": 184.0}
{"question": "How many more cups of flour does she need to add?", "passage": "Mary is baking a cake. The recipe calls for 12 cups of flour 5 cups of sugar and 49 cups of salt. She already put in 11 cups of flour.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 12 cups of flour 5 cups of sugar and 49 cups of salt. She already put in 11 cups of flour. How many more cups of flour does she need to add?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    flour_needed = 12\n    flour_added = 11\n    sugar_needed = 5\n    salt_needed = 49\n    # Now, we can calculate the answer:\n    flour_remaining = flour_needed - flour_added\n    return flour_remaining\nans = solver()", "answer": 1.0}
{"question": "How much money did they make from selling the t-shirts during the Texas tech game?", "passage": "The Razorback t-shirt shop makes $ 78 dollars off each t-shirt sold. During the Arkansas game and the Texas tech game they sold a total of 186 t-shirts. If they sold 172 t-shirts during the Arkansas game.", "executed": 1092.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The Razorback t-shirt shop makes $ 78 dollars off each t-shirt sold. During the Arkansas game and the Texas tech game they sold a total of 186 t-shirts. If they sold 172 t-shirts during the Arkansas game. How much money did they make from selling the t-shirts during the Texas tech game?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of t-shirts sold during the Texas tech game\n    # y = number of t-shirts sold during the Arkansas game\n    # z = total number of t-shirts sold\n    # We can also define the constants:\n    # a = money made from selling the t-shirts during the Texas tech game\n    # b = money made from selling the t-shirts during the Arkansas game\n    # c = total money made from selling the t-shirts\n    # We can also define the equations:\n    # a = 78x\n    # b = 78y\n    # c = 78z\n    # x + y = z\n    # y = 172\n    # z = 186\n    # Now we can solve for x:\n    x = 186 - 172\n    a = 78 * x\n    return a\nans = solver()", "answer": 1092.0}
{"question": "How many more books do you still have to read?", "passage": "There are 62 different movies and 19 different books in the ' crazy silly school ' series. If you read 4 of the books and watched 34 of the movies.", "executed": 15.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 62 different movies and 19 different books in the ' crazy silly school ' series. If you read 4 of the books and watched 34 of the movies. How many more books do you still have to read?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    books_read = 4\n    movies_watched = 34\n    total_books = 19\n    total_movies = 62\n    # Now, we can calculate the number of books left to read:\n    books_left = total_books - books_read\n    # Finally, we can return the answer:\n    return books_left\nans = solver()", "answer": 15.0}
{"question": "How many pizzas did we order?", "passage": "We ordered some pizzas. Each pizza has 2 slices. If there were a total of 28 slices.", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: We ordered some pizzas. Each pizza has 2 slices. If there were a total of 28 slices. How many pizzas did we order?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   - Number of pizzas ordered: x\n    #   - Number of slices per pizza: y\n    #   - Total number of slices: z\n    x = 0\n    y = 2\n    z = 28\n    # Now, we can write the equation:\n    #   x * y = z\n    #   x = z / y\n    x = z / y\n    return x\nans = solver()", "answer": 14.0}
{"question": "How many groups will be created?", "passage": "Rebecca wants to split a collection of eggs into groups of 3. Rebecca has 99 bananas 9 eggs and 27 marbles.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rebecca wants to split a collection of eggs into groups of 3. Rebecca has 99 bananas 9 eggs and 27 marbles. How many groups will be created?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bananas = 99\n    eggs = 9\n    marbles = 27\n    # We can also define the number of eggs in each group:\n    eggs_in_group = 3\n    # Now, we can calculate the number of groups of eggs:\n    groups_of_eggs = eggs // eggs_in_group\n    # We can also calculate the number of bananas in each group:\n    bananas_in_group = bananas // groups_of_eggs\n    # We can also calculate the number of marbles in each group:\n    marbles_in_group = marbles // groups_of_group\n    # Now, we can calculate the number of groups of bananas:\n    groups_of_bananas = bananas // bananas_in_group\n    # We can also calculate the number of groups of marbles:\n    groups_of_marbles = marbles // marbles_in_group\n    # Now, we can calculate the number of groups:\n    groups = groups_of_eggs + groups_of_bananas + groups_of_marbles\n    return groups\nans = solver()", "answer": 3.0}
{"question": "How many more children were on the bus before the bus stop than there are now?", "passage": "41 children were riding on the bus. At the bus stop some children got off the bus. Then there were 18 children left on the bus.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: 41 children were riding on the bus. At the bus stop some children got off the bus. Then there were 18 children left on the bus. How many more children were on the bus before the bus stop than there are now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # children_before_bus_stop = ?\n    # children_after_bus_stop = ?\n    # children_left_on_bus = 18\n    # children_got_off_bus = ?\n    children_left_on_bus = 18\n    children_got_off_bus = children_before_bus_stop - children_left_on_bus\n    children_before_bus_stop = children_got_off_bus + children_left_on_bus\n    return children_before_bus_stop\nans = solver()", "answer": 23.0}
{"question": "How many boys did she give the marbles to?", "passage": "In Haley's class some boys love to play marbles. Haley gives 2 marbles to each boy. If she had 28 marbles.", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In Haley's class some boys love to play marbles. Haley gives 2 marbles to each boy. If she had 28 marbles. How many boys did she give the marbles to?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # marbles_per_boy = 2\n    # total_marbles = 28\n    marbles_per_boy = 2\n    total_marbles = 28\n    # Now, we can calculate the number of boys by dividing the total_marbles by marbles_per_boy\n    number_of_boys = total_marbles / marbles_per_boy\n    return number_of_boys\nans = solver()", "answer": 14.0}
{"question": "How many crackers and cakes did each person eat?", "passage": "Matthew had 14 crackers and 21 cakes. If Matthew gave equal numbers of crackers and cakes to his 7 friends.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Matthew had 14 crackers and 21 cakes. If Matthew gave equal numbers of crackers and cakes to his 7 friends. How many crackers and cakes did each person eat?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    crackers = 14\n    cakes = 21\n    friends = 7\n    # We can also define the variables that we don't know yet:\n    crackers_per_person = 0\n    cakes_per_person = 0\n    # Now, we can use the information we have to derive the answer:\n    crackers_per_person = crackers / friends\n    cakes_per_person = cakes / friends\n    return crackers_per_person, cakes_per_person\nans = solver()", "answer": 5.0}
{"question": "How many cookies did Helen bake till last night?", "passage": "Helen the hippo and her friends are preparing for thanksgiving at Helen's house. Helen baked 31 cookies yesterday 270 cookies this morning and 419 cookies the day before yesterday.", "executed": 720.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Helen the hippo and her friends are preparing for thanksgiving at Helen's house. Helen baked 31 cookies yesterday 270 cookies this morning and 419 cookies the day before yesterday. How many cookies did Helen bake till last night?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookies_yesterday = 31\n    cookies_today = 270\n    cookies_day_before_yesterday = 419\n    cookies_till_last_night = cookies_yesterday + cookies_today + cookies_day_before_yesterday\n    return cookies_till_last_night\nans = solver()", "answer": 450.0}
{"question": "How many planks does John need for the house wall?", "passage": "For the walls of the house he would use 4 nails in all to secure large planks of wood. If each plank of wood needs 2 pieces of nails to be secured.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For the walls of the house he would use 4 nails in all to secure large planks of wood. If each plank of wood needs 2 pieces of nails to be secured. How many planks does John need for the house wall?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    nails = 4\n    nails_per_plank = 2\n    planks = 0\n    # Now we can use the variables to calculate the answer\n    planks = nails / nails_per_plank\n    return planks\nans = solver()", "answer": 2.0}
{"question": "How many more bottle caps than wrappers did danny find at the park?", "passage": "Danny collects bottle caps and wrappers. He found 30 bottle caps and 14 wrappers at the park. Now he has 7 bottle caps and 86 wrappers in his collection.", "executed": -95.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Danny collects bottle caps and wrappers. He found 30 bottle caps and 14 wrappers at the park. Now he has 7 bottle caps and 86 wrappers in his collection. How many more bottle caps than wrappers did danny find at the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bottle_caps_found = 30\n    wrappers_found = 14\n    bottle_caps_collected = 7\n    wrappers_collected = 86\n    bottle_caps_difference = bottle_caps_collected - bottle_caps_found\n    wrappers_difference = wrappers_collected - wrappers_found\n    bottle_caps_wrappers_difference = bottle_caps_difference - wrappers_difference\n    return bottle_caps_wrappers_difference\nans = solver()", "answer": 16.0}
{"question": "How many oranges do they harvest per day?", "passage": "He then went to see the oranges being harvested. He found out that they harvest 8 sacks per day and that each sack containes 35 oranges.", "executed": 280.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He then went to see the oranges being harvested. He found out that they harvest 8 sacks per day and that each sack containes 35 oranges. How many oranges do they harvest per day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sacks_per_day = 8\n    oranges_per_sack = 35\n    # Now we can calculate the total number of oranges per day:\n    oranges_per_day = sacks_per_day * oranges_per_sack\n    return oranges_per_day\nans = solver()", "answer": 280.0}
{"question": "How much more did Edward spend on books than pens?", "passage": "Edward spent $ 16 to buy books and $ 8 to buy pens. Now he has $ 19.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Edward spent $ 16 to buy books and $ 8 to buy pens. Now he has $ 19. How much more did Edward spend on books than pens?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    books = 16\n    pens = 8\n    money = 19\n    # Now we can calculate the difference between the books and pens:\n    difference = books - pens\n    return difference\nans = solver()", "answer": 8.0}
{"question": "How many necklaces can Emily make?", "passage": "Emily is making bead necklaces for her friends. Each necklace takes 8 beads and she has 16 beads.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Emily is making bead necklaces for her friends. Each necklace takes 8 beads and she has 16 beads. How many necklaces can Emily make?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    beads_per_necklace = 8\n    total_beads = 16\n    # Now, we can calculate the number of necklaces:\n    num_necklaces = total_beads / beads_per_necklace\n    return num_necklaces\nans = solver()", "answer": 2.0}
{"question": "How much did the candy bar cost?", "passage": "Dan has $ 4. He had $ 3 left with him after he bought a candy bar.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dan has $ 4. He had $ 3 left with him after he bought a candy bar. How much did the candy bar cost?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Dan's money before buying the candy bar: x\n    # Dan's money after buying the candy bar: y\n    # The cost of the candy bar: z\n    # Then we can write the equations:\n    # x - z = y\n    # x = 4\n    # y = 3\n    # Solve the equations, we can get the answer: z = 1\n    return 1\nans = solver()", "answer": 1.0}
{"question": "How many crayons did he have left by the end of the school year?", "passage": "Paul got a box of 253 crayons for his birthday. By the end of the school year he had either lost or given away 70 of them.", "executed": 183.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul got a box of 253 crayons for his birthday. By the end of the school year he had either lost or given away 70 of them. How many crayons did he have left by the end of the school year?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    crayons_at_birthday = 253\n    crayons_lost_or_given_away = 70\n    crayons_left = crayons_at_birthday - crayons_lost_or_given_away\n    return crayons_left\nans = solver()", "answer": 183.0}
{"question": "How many raisin cookies did Helen bake?", "passage": "Helen the hippo and her friends are preparing for thanksgiving at Helen's house. Helen baked 144 chocolate chip cookies and 397 raisin cookies yesterday. And she baked 85 raisin cookies and 403 chocolate chip cookies this morning.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Helen the hippo and her friends are preparing for thanksgiving at Helen's house. Helen baked 144 chocolate chip cookies and 397 raisin cookies yesterday. And she baked 85 raisin cookies and 403 chocolate chip cookies this morning. How many raisin cookies did Helen bake?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of raisin cookies baked yesterday\n    # y = number of chocolate chip cookies baked yesterday\n    # z = number of raisin cookies baked this morning\n    # w = number of chocolate chip cookies baked this morning\n    # We can also define the equations:\n    # x + z = 85\n    # y + w = 403\n    # x + y = 144\n    # z + w = 397\n    # We can also define the matrix:\n    # A = [1 1 0 0]\n    #     [0 0 1 1]\n    #     [1 0 1 0]\n    #     [0 1 0 1]\n    # We can also define the vector:\n    # b = [85]\n    #     [403]\n    #     [144]\n    #     [397]\n    # We can also define the vector:\n    # x = [x]\n    #     [y]\n    #     [z]\n    #     [w]\n    # We can also define the vector:\n    # x = [x]\n    #     [y]\n    #     [z]\n    #     [w]\n    # We can also define the vector:\n    # x = [x]\n    #     [y]\n    #     [z]\n    #     [w]\n    # We can also define the vector:\n    # x = [x]\n    #     [y]\n    #     [z]\n    #     [w]\nans = solver()", "answer": 482.0}
{"question": "How many ripe apples did the tree have to begin with?", "passage": "Rachel picked 2 ripe apples from her tree. Now the tree has 7 apples still on it. If 6 of those are ripe and the rest are unripe.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel picked 2 ripe apples from her tree. Now the tree has 7 apples still on it. If 6 of those are ripe and the rest are unripe. How many ripe apples did the tree have to begin with?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # a = number of ripe apples on the tree to begin with\n    # b = number of unripe apples on the tree to begin with\n    # c = number of ripe apples picked\n    # d = number of unripe apples picked\n    # e = number of ripe apples on the tree after picking\n    # f = number of unripe apples on the tree after picking\n    # We can also define the following equations:\n    # a + b = total number of apples on the tree to begin with\n    # c + d = total number of apples picked\n    # e + f = total number of apples on the tree after picking\n    # a = e + c\n    # b = f + d\n    # a + b = e + f + c + d\n    # a + b = a + b\n    # e + f + c + d = a + b\n    # e + f = a + b - c - d\n    # e + f = a + b - 2\n    # e = a + b - 2 - f\n    # e = a + b - 2 - (total number of apples on the tree after picking - e)\n    # e = a + b - 2 - (total number of apples on the tree after picking - (a + b - 2 - f))\n    # e = a + b - 2 - (total number of apples on the tree after picking - (a + b - 2 - (total number of apples on the tree after picking - e)))\n    # e = a + b - 2 -\nans = solver()", "answer": 8.0}
{"question": "How many minutes did the machine work yesterday?", "passage": "An industrial machine made 9 shirts yesterday and 44 shirts today. It can make 3 shirts a minute.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: An industrial machine made 9 shirts yesterday and 44 shirts today. It can make 3 shirts a minute. How many minutes did the machine work yesterday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   x: the number of minutes the machine worked yesterday\n    #   y: the number of minutes the machine worked today\n    #   z: the number of shirts the machine can make in a minute\n    x = 0\n    y = 0\n    z = 3\n    # According to the question, we can define the equations:\n    #   9 = x * z\n    #   44 = y * z\n    x = 9 / z\n    y = 44 / z\n    # According to the question, we can define the constraints:\n    #   x > 0\n    #   y > 0\n    if x > 0 and y > 0:\n        return x\n    else:\n        return None\nans = solver()", "answer": 3.0}
{"question": "How many push-ups did John do?", "passage": "Zachary did 51 push-ups in gym class today. David did 22 more push-ups than Zachary. John did 4 push-ups less than David.", "executed": 69.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Zachary did 51 push-ups in gym class today. David did 22 more push-ups than Zachary. John did 4 push-ups less than David. How many push-ups did John do?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    zachary = 51\n    david = zachary + 22\n    john = david - 4\n    return john\nans = solver()", "answer": 69.0}
{"question": "How many more raisin cookies did Helen bake yesterday compared to today?", "passage": "Helen the hippo and her friends are preparing for thanksgiving at Helen's house. Helen baked 519 chocolate chip cookies and 300 raisin cookies yesterday. And she baked 280 raisin cookies and 359 chocolate chip cookies this morning.", "executed": 20.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Helen the hippo and her friends are preparing for thanksgiving at Helen's house. Helen baked 519 chocolate chip cookies and 300 raisin cookies yesterday. And she baked 280 raisin cookies and 359 chocolate chip cookies this morning. How many more raisin cookies did Helen bake yesterday compared to today?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Helen_baked_yesterday = 519 chocolate chip cookies + 300 raisin cookies\n    # Helen_baked_today = 280 raisin cookies + 359 chocolate chip cookies\n    # Helen_baked_more_raisin_yesterday = ?\n    Helen_baked_yesterday = 519 + 300\n    Helen_baked_today = 280 + 359\n    Helen_baked_more_raisin_yesterday = 300 - 280\n    return Helen_baked_more_raisin_yesterday\nans = solver()", "answer": 20.0}
{"question": "How many more bottles of regular soda did they have than diet soda?", "passage": "A grocery store had 81 bottles of regular soda, 60 bottles of diet soda and 60 bottles of lite soda.", "executed": 21.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A grocery store had 81 bottles of regular soda, 60 bottles of diet soda and 60 bottles of lite soda. How many more bottles of regular soda did they have than diet soda?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    regular_soda = 81\n    diet_soda = 60\n    lite_soda = 60\n    # Now, we can calculate the difference between regular soda and diet soda:\n    difference = regular_soda - diet_soda\n    return difference\nans = solver()", "answer": 21.0}
{"question": "How many blocks did he have at the start?", "passage": "Randy has some blocks. He uses 52 blocks to build a tower. If there are 38 blocks left.", "executed": 90.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Randy has some blocks. He uses 52 blocks to build a tower. If there are 38 blocks left. How many blocks did he have at the start?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # blocks_left = 38\n    # blocks_used = 52\n    # blocks_total = ?\n    blocks_left = 38\n    blocks_used = 52\n    blocks_total = blocks_left + blocks_used\n    return blocks_total\nans = solver()", "answer": 90.0}
{"question": "How much money did Edward spend?", "passage": "Edward had $ 13. He spent some money. Now he has $ 3.", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Edward had $ 13. He spent some money. Now he has $ 3. How much money did Edward spend?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Edward's initial money: x\n    # Edward's final money: y\n    # Edward's spent money: z\n    x = 13\n    y = 3\n    z = x - y\n    return z\nans = solver()", "answer": 10.0}
{"question": "How many marbles did Ed lose?", "passage": "Ed had 19 more marbles than Doug. Ed lost some of his marbles at the playground. Now Ed has 8 more marbles than doug.", "executed": 11.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Ed had 19 more marbles than Doug. Ed lost some of his marbles at the playground. Now Ed has 8 more marbles than doug. How many marbles did Ed lose?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Ed's marbles = x\n    # Doug's marbles = y\n    # Ed lost marbles = z\n    # Then we can get the following equations:\n    # x = y + 19\n    # x - z = y + 8\n    # Solve the equations, we can get the answer:\n    z = 11\n    return z\nans = solver()", "answer": 11.0}
{"question": "How many chairs do they have for the guests?", "passage": "They decided to hold the party in their backyard. They have 12 sets of tables and each set has 14 chairs. There are also 6 chairs extra.", "executed": 174.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: They decided to hold the party in their backyard. They have 12 sets of tables and each set has 14 chairs. There are also 6 chairs extra. How many chairs do they have for the guests?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sets_of_tables = 12\n    chairs_per_set = 14\n    extra_chairs = 6\n    total_chairs = sets_of_tables * chairs_per_set + extra_chairs\n    return total_chairs\nans = solver()", "answer": 174.0}
{"question": "How many people can ride the Ferris wheel on large seats?", "passage": "The Ferris wheel in paradise park has 3 small seats and 7 large seats. Each small seat can hold 16 people and large seat can hold 12 people.", "executed": 84.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The Ferris wheel in paradise park has 3 small seats and 7 large seats. Each small seat can hold 16 people and large seat can hold 12 people. How many people can ride the Ferris wheel on large seats?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    small_seats = 3\n    large_seats = 7\n    small_capacity = 16\n    large_capacity = 12\n    # Now, we can calculate the total capacity of the Ferris wheel:\n    total_capacity = small_seats * small_capacity + large_seats * large_capacity\n    # Now, we can calculate the number of people who can ride the Ferris wheel on large seats:\n    large_seats_capacity = large_seats * large_capacity\n    return large_seats_capacity\nans = solver()", "answer": 84.0}
{"question": "How many pieces of junk mail should he give each block?", "passage": "There are 20 houses in a block. If a mailman has to give 32 pieces of junk mail to each house in each block.", "executed": 640.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 20 houses in a block. If a mailman has to give 32 pieces of junk mail to each house in each block. How many pieces of junk mail should he give each block?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    houses = 20\n    mailman = 32\n    block = houses * mailman\n    return block\nans = solver()", "answer": 640.0}
{"question": "How many more bottles than apple did they have?", "passage": "A grocery store had 72 bottles of regular soda, 32 bottles of diet soda and 78 apples.", "executed": 26.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A grocery store had 72 bottles of regular soda, 32 bottles of diet soda and 78 apples. How many more bottles than apple did they have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    regular_soda = 72\n    diet_soda = 32\n    apples = 78\n    # Now, we can calculate the difference between the number of bottles and the number of apples:\n    difference = regular_soda + diet_soda - apples\n    return difference\nans = solver()", "answer": 26.0}
{"question": "How many green peaches are in the baskets altogether?", "passage": "There are 7 baskets of peaches. Each basket has 10 red peaches and 2 green peaches.", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 7 baskets of peaches. Each basket has 10 red peaches and 2 green peaches. How many green peaches are in the baskets altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    basket_num = 7\n    red_peach_num = 10\n    green_peach_num = 2\n    total_peach_num = red_peach_num + green_peach_num\n    total_peach_num_in_all_baskets = basket_num * total_peach_num\n    total_green_peach_num_in_all_baskets = basket_num * green_peach_num\n    return total_green_peach_num_in_all_baskets\nans = solver()", "answer": 14.0}
{"question": "How many bird families were left near the mountain?", "passage": "Winter is almost here and most animals are migrating to warmer countries. There are 3 bird families living near the mountain. 26 new bird families came to live near the mountain from the arctic while 2 bird families flew away further south for winter.", "executed": 27.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Winter is almost here and most animals are migrating to warmer countries. There are 3 bird families living near the mountain. 26 new bird families came to live near the mountain from the arctic while 2 bird families flew away further south for winter. How many bird families were left near the mountain?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bird_families_near_mountain = 3\n    bird_families_from_arctic = 26\n    bird_families_migrated_south = 2\n    bird_families_left_near_mountain = bird_families_near_mountain + bird_families_from_arctic - bird_families_migrated_south\n    return bird_families_left_near_mountain\nans = solver()", "answer": 27.0}
{"question": "How many more students suggested mashed potatoes than those that suggested tomatoes?", "passage": "Because of the decision Sofia asked the students to suggest specific types of food. If 144 students suggested adding mashed potatoes 467 suggested adding bacon to the menu and 79 suggested adding tomatoes.", "executed": 65.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Because of the decision Sofia asked the students to suggest specific types of food. If 144 students suggested adding mashed potatoes 467 suggested adding bacon to the menu and 79 suggested adding tomatoes. How many more students suggested mashed potatoes than those that suggested tomatoes?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # M = number of students suggested adding mashed potatoes\n    # B = number of students suggested adding bacon\n    # T = number of students suggested adding tomatoes\n    M = 144\n    B = 467\n    T = 79\n    # We can also define the total number of students:\n    N = M + B + T\n    # Now, we can calculate the number of students suggested adding mashed potatoes than those that suggested tomatoes:\n    return M - T\nans = solver()", "answer": 65.0}
{"question": "How much carpet does she need to cover the floors of all rooms?", "passage": "Jesse's rooms are 19 feet long and 18 feet wide. If she has 20 rooms in all.", "executed": 6840.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jesse's rooms are 19 feet long and 18 feet wide. If she has 20 rooms in all. How much carpet does she need to cover the floors of all rooms?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    length = 19\n    width = 18\n    num_rooms = 20\n    area_of_one_room = length * width\n    total_area = area_of_one_room * num_rooms\n    return total_area\nans = solver()", "answer": 6840.0}
{"question": "How many pages did she have to complete in all?", "passage": "Rachel had to complete 10 pages of math homework. If she had to complete 3 more pages of reading homework than math homework.", "executed": 23.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel had to complete 10 pages of math homework. If she had to complete 3 more pages of reading homework than math homework. How many pages did she have to complete in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    math_homework = 10\n    reading_homework = math_homework + 3\n    total_homework = math_homework + reading_homework\n    return total_homework\nans = solver()", "answer": 23.0}
{"question": "How many pupils are there in that school?", "passage": "In a school there are 700 girls and the rest are boys. If there are 142 more boys than girls.", "executed": 1542.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In a school there are 700 girls and the rest are boys. If there are 142 more boys than girls. How many pupils are there in that school?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    girls = 700\n    boys = 0\n    total = 0\n    # Now, we can define the equation:\n    total = girls + boys\n    boys = girls + 142\n    girls = 700\n    total = girls + boys\n    return total\nans = solver()", "answer": 1542.0}
{"question": "How many customers does he still have?", "passage": "A waiter had 14 customers. 5 customers left.", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter had 14 customers. 5 customers left. How many customers does he still have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    customers_left = 5\n    customers_total = 14\n    customers_still_have = customers_total - customers_left\n    return customers_still_have\nans = solver()", "answer": 9.0}
{"question": "How many packs of groceries did she buy in all?", "passage": "Lucy went to the grocery store. She bought 2 packs of cookie and 12 packs of cake. In the end she had 56 amount of change remaining.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Lucy went to the grocery store. She bought 2 packs of cookie and 12 packs of cake. In the end she had 56 amount of change remaining. How many packs of groceries did she buy in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # cookie_price = 2\n    # cake_price = 12\n    # change = 56\n    cookie_price = 2\n    cake_price = 12\n    change = 56\n    # Now, we can define the equation:\n    # cookie_price * cookie_packs + cake_price * cake_packs = total_price\n    total_price = cookie_price * cookie_packs + cake_price * cake_packs\n    # We can also define the equation:\n    # total_price - change = paid_price\n    paid_price = total_price - change\n    # Now, we can define the equation:\n    # cookie_packs + cake_packs = total_packs\n    total_packs = cookie_packs + cake_packs\n    # Now, we can define the equation:\n    # total_packs = total_packs\n    total_packs = total_packs\n    # Now, we can define the equation:\n    # total_packs = total_packs\n    total_packs = total_packs\n    # Now, we can define the equation:\n    # total_packs = total_packs\n    total_packs = total_packs\n    # Now, we can define the equation:\n    # total_packs = total_packs\n    total_packs = total_packs\n    # Now, we can define the equation:\n    # total_packs = total_packs\n    total_packs = total_packs\n    # Now, we can define the equation:\n    # total_packs = total_packs\n    total\nans = solver()", "answer": 14.0}
{"question": "How many more cups of sugar does she need to add?", "passage": "Mary is baking a cake. The recipe calls for 11 cups of sugar and 9 cups of flour. She already put in 12 cups of flour and 10 cups of sugar.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 11 cups of sugar and 9 cups of flour. She already put in 12 cups of flour and 10 cups of sugar. How many more cups of sugar does she need to add?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sugar_needed = 11\n    flour_needed = 9\n    sugar_added = 10\n    flour_added = 12\n    # Now, we can calculate the answer:\n    sugar_to_add = sugar_needed - sugar_added\n    return sugar_to_add\nans = solver()", "answer": 1.0}
{"question": "Together how much did their strawberries weigh?", "passage": "Marco and his dad went strawberry picking. His strawberries weighed 8 pounds while his dad's strawberries weighed 32 pounds.", "executed": 40.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Marco and his dad went strawberry picking. His strawberries weighed 8 pounds while his dad's strawberries weighed 32 pounds. Together how much did their strawberries weigh?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marco_strawberries = 8\n    dad_strawberries = 32\n    total_strawberries = marco_strawberries + dad_strawberries\n    return total_strawberries\nans = solver()", "answer": 40.0}
{"question": "How many did she have initially if she still has 92 games left?", "passage": "Kelly gives away 91 nintendo games.", "executed": 183.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Kelly gives away 91 nintendo games. How many did she have initially if she still has 92 games left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = the number of nintendo games Kelly had initially\n    # y = the number of nintendo games Kelly gave away\n    # z = the number of nintendo games Kelly has left\n    x = 0\n    y = 0\n    z = 0\n    # Now, we can define the equations:\n    # x = y + z\n    # y = 91\n    # z = 92\n    x = y + z\n    y = 91\n    z = 92\n    # Now, we can solve for x:\n    x = y + z\n    x = 91 + 92\n    x = 183\n    return x\nans = solver()", "answer": 183.0}
{"question": "How many t-shirts did they sell during the Texas tech game?", "passage": "The Razorback t-shirt shop makes $ 106 dollars off each t-shirt sold. During the Arkansas game and the Texas tech game they sold a total of 242 t-shirts. If they sold 115 t-shirts during the Arkansas game.", "executed": 127.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The Razorback t-shirt shop makes $ 106 dollars off each t-shirt sold. During the Arkansas game and the Texas tech game they sold a total of 242 t-shirts. If they sold 115 t-shirts during the Arkansas game. How many t-shirts did they sell during the Texas tech game?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # t_shirt_sold_arkansas = 115\n    # t_shirt_sold_texas_tech = 242 - 115\n    # profit_arkansas = 106 * 115\n    # profit_texas_tech = 106 * (242 - 115)\n    # profit_total = profit_arkansas + profit_texas_tech\n    t_shirt_sold_arkansas = 115\n    t_shirt_sold_texas_tech = 242 - 115\n    profit_arkansas = 106 * 115\n    profit_texas_tech = 106 * (242 - 115)\n    profit_total = profit_arkansas + profit_texas_tech\n    return t_shirt_sold_texas_tech\nans = solver()", "answer": 127.0}
{"question": "How many t-shirts did they sell?", "passage": "The Razorback t-shirt shop makes $ 23 dollars off each t-shirt sold. During the Arkansas and Texas tech game they made $ 230 by selling t-shirts.", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The Razorback t-shirt shop makes $ 23 dollars off each t-shirt sold. During the Arkansas and Texas tech game they made $ 230 by selling t-shirts. How many t-shirts did they sell?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. The profit of each t-shirt sold\n    profit = 23\n    # 2. The total profit\n    total_profit = 230\n    # 3. The number of t-shirts sold\n    num_shirts = 0\n    # Now we can calculate the number of t-shirts sold\n    num_shirts = total_profit / profit\n    return num_shirts\nans = solver()", "answer": 10.0}
{"question": "How many more blocks did he use to build the house than he did to build the tower?", "passage": "Randy has 90 blocks. He uses 89 blocks to build a house and 63 blocks to build a tower.", "executed": 26.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Randy has 90 blocks. He uses 89 blocks to build a house and 63 blocks to build a tower. How many more blocks did he use to build the house than he did to build the tower?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    house = 89\n    tower = 63\n    # Now, we can calculate the difference between the house and the tower:\n    difference = house - tower\n    return difference\nans = solver()", "answer": 26.0}
{"question": "How many more balloons did Jake have than Allan in the park?", "passage": "Allan brought 2 balloons and Jake brought 3 balloons to the park.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Allan brought 2 balloons and Jake brought 3 balloons to the park. How many more balloons did Jake have than Allan in the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    allan_balloons = 2\n    jake_balloons = 3\n    # Now, we can calculate the difference between the number of balloons that Jake had and the number of balloons that Allan had\n    difference = jake_balloons - allan_balloons\n    # Finally, we can return the difference\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many more hours does he spend on learning english than he does on learning spanish?", "passage": "Every day Ryan spends 7 hours on learning english, 2 hours on learning chinese and 4 hours on learning spanish.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Every day Ryan spends 7 hours on learning english, 2 hours on learning chinese and 4 hours on learning spanish. How many more hours does he spend on learning english than he does on learning spanish?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    english = 7\n    chinese = 2\n    spanish = 4\n    # Now, we can calculate the difference between english and spanish\n    difference = english - spanish\n    return difference\nans = solver()", "answer": 3.0}
{"question": "How many pieces of gum does Robin have?", "passage": "Robin has 43 packages of gum. There are 23 pieces in each package. Robin has 8 extra pieces of gum.", "executed": 997.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Robin has 43 packages of gum. There are 23 pieces in each package. Robin has 8 extra pieces of gum. How many pieces of gum does Robin have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    num_packages = 43\n    num_pieces_per_package = 23\n    num_extra_pieces = 8\n    # Now, we can calculate the total number of pieces of gum:\n    num_pieces = num_packages * num_pieces_per_package + num_extra_pieces\n    return num_pieces\nans = solver()", "answer": 997.0}
{"question": "How many books did he sell in the garage sale?", "passage": "Paul had 108 books. After selling some books in a garage sale and giving 35 books to his friend he had 62 books left.", "executed": 11.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul had 108 books. After selling some books in a garage sale and giving 35 books to his friend he had 62 books left. How many books did he sell in the garage sale?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # books_sold = ?\n    # books_left = 62\n    # books_given = 35\n    # books_total = 108\n    books_sold = 0\n    books_left = 62\n    books_given = 35\n    books_total = 108\n    # Now we can write the equation:\n    # books_sold + books_left + books_given = books_total\n    books_sold = books_total - books_left - books_given\n    return books_sold\nans = solver()", "answer": 11.0}
{"question": "How many planks does John need for the house wall?", "passage": "For the walls of the house he would use 12 large planks of wood and 17 small planks. If each large plank of wood needs 14 pieces of nails to be secured and each small plank needs 25 nails.", "executed": 593.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For the walls of the house he would use 12 large planks of wood and 17 small planks. If each large plank of wood needs 14 pieces of nails to be secured and each small plank needs 25 nails. How many planks does John need for the house wall?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    large_planks = 12\n    small_planks = 17\n    large_nails = 14\n    small_nails = 25\n    total_nails = large_planks * large_nails + small_planks * small_nails\n    return total_nails\nans = solver()", "answer": 29.0}
{"question": "How many points did she score in each game?", "passage": "Melissa played 3 games and scored a total of 81 points scoring the same for each game.", "executed": 27.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Melissa played 3 games and scored a total of 81 points scoring the same for each game. How many points did she score in each game?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   x = points scored in each game\n    #   y = total points scored\n    x = 0\n    y = 81\n    # Now, we can write the equation:\n    #   x + x + x = y\n    #   3x = y\n    #   x = y / 3\n    x = y / 3\n    return x\nans = solver()", "answer": 27.0}
{"question": "How many more Ace cards than baseball cards does Nell have?", "passage": "Nell collects cards. She had 246 baseball cards and 214 Ace cards. She gave some of her cards to Jeff and now has 404 baseball cards and 495 Ace cards left.", "executed": 91.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Nell collects cards. She had 246 baseball cards and 214 Ace cards. She gave some of her cards to Jeff and now has 404 baseball cards and 495 Ace cards left. How many more Ace cards than baseball cards does Nell have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Nell's baseball cards: x\n    # Nell's Ace cards: y\n    # Jeff's baseball cards: z\n    # Jeff's Ace cards: w\n    # Then we can get the equations:\n    # x + z = 404\n    # y + w = 495\n    # x + y = 246 + 214\n    # z + w = 246 + 214 - 404 - 495\n    # Then we can get the answer:\n    # y - x = 495 - 404\n    return 495 - 404\nans = solver()", "answer": 91.0}
{"question": "How many action figures were on his shelf in all?", "passage": "Jerry had 8 action figures on a shelf in his room. Later he added 4 more action figures to the shelf and removed 5 old ones.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jerry had 8 action figures on a shelf in his room. Later he added 4 more action figures to the shelf and removed 5 old ones. How many action figures were on his shelf in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. Jerry had 8 action figures on a shelf in his room.\n    # 2. Later he added 4 more action figures to the shelf\n    # 3. and removed 5 old ones.\n    # 4. How many action figures were on his shelf in all?\n    # 5. The answer is the sum of the number of action figures on the shelf in the beginning, the number of action figures added, and the number of action figures removed.\n    # 6. The answer is 8 + 4 - 5 = 7\n    return 8 + 4 - 5\nans = solver()", "answer": 7.0}
{"question": "How many seeds did they plant in each flowerbed?", "passage": "Paige was helping her mom plant flowers and together they planted 45 seeds in 9 flowerbeds. If they put same number of seeds in each flower bed.", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paige was helping her mom plant flowers and together they planted 45 seeds in 9 flowerbeds. If they put same number of seeds in each flower bed. How many seeds did they plant in each flowerbed?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # seeds = 45\n    # flowerbeds = 9\n    seeds = 45\n    flowerbeds = 9\n    # Now, we can calculate the number of seeds in each flowerbed:\n    seeds_in_each_flowerbed = seeds / flowerbeds\n    return seeds_in_each_flowerbed\nans = solver()", "answer": 5.0}
{"question": "How many pieces of junk mail should he give in each block?", "passage": "A mailman has to give 4 pieces of junk mail to each house in each of the 81 blocks. If there are 12 houses in each block.", "executed": 3968.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A mailman has to give 4 pieces of junk mail to each house in each of the 81 blocks. If there are 12 houses in each block. How many pieces of junk mail should he give in each block?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. Number of blocks: 81\n    # 2. Number of houses in each block: 12\n    # 3. Number of pieces of junk mail to each house: 4\n    # 4. Number of pieces of junk mail to each block: ?\n    # 5. Number of pieces of junk mail to all blocks: ?\n    # 6. Number of pieces of junk mail to each block: 4 * 12 = 48\n    # 7. Number of pieces of junk mail to all blocks: 48 * 81 = 3968\n    return 3968\nans = solver()", "answer": 48.0}
{"question": "How much did they make per day in the remaining 57 days at the carnival?", "passage": "The ring toss game at the carnival made 325 dollars in the first 154 days and 114 dollars in the remaining 57 days.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The ring toss game at the carnival made 325 dollars in the first 154 days and 114 dollars in the remaining 57 days. How much did they make per day in the remaining 57 days at the carnival?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = the amount of money made per day in the remaining 57 days\n    # y = the amount of money made per day in the first 154 days\n    # z = the amount of money made in the first 154 days\n    # w = the amount of money made in the remaining 57 days\n    # z = 325\n    # w = 114\n    # z = 154 * y\n    # w = 57 * x\n    # 325 = 154 * y\n    # 114 = 57 * x\n    # y = 325 / 154\n    # x = 114 / 57\n    # x = 2\n    return 2\nans = solver()", "answer": 2.0}
{"question": "How many did each of them have?", "passage": "Brenda's mother made cookies for 10 guests but 9 guests did not come. If she prepared 18 cookies and each guest had the same number of cookies.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Brenda's mother made cookies for 10 guests but 9 guests did not come. If she prepared 18 cookies and each guest had the same number of cookies. How many did each of them have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    guests = 10\n    guests_came = 9\n    cookies = 18\n    cookies_per_guest = cookies / guests_came\n    return cookies_per_guest\nans = solver()", "answer": 18.0}
{"question": "How many more cups of flour than cups of salt does she need to add now?", "passage": "Mary is baking a cake. The recipe calls for 9 cups of sugar 7 cups of flour and 4 cups of salt. She already put in 2 cups of flour.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 9 cups of sugar 7 cups of flour and 4 cups of salt. She already put in 2 cups of flour. How many more cups of flour than cups of salt does she need to add now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sugar = 9\n    flour = 7\n    salt = 4\n    flour_added = 2\n    # Now, we need to calculate how many more cups of flour than cups of salt does she need to add now.\n    # We can use the following formula:\n    flour_needed = flour - flour_added\n    salt_needed = salt\n    flour_salt_diff = flour_needed - salt_needed\n    return flour_salt_diff\nans = solver()", "answer": 1.0}
{"question": "How many cakes did baker make?", "passage": "Baker made some cakes. He sold 145 of them. If he still has 72 cakes left.", "executed": 217.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made some cakes. He sold 145 of them. If he still has 72 cakes left. How many cakes did baker make?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cakes_sold = 145\n    cakes_left = 72\n    cakes_made = 0\n    # Now, we can use the information to derive the answer:\n    cakes_made = cakes_sold + cakes_left\n    return cakes_made\nans = solver()", "answer": 217.0}
{"question": "What is the length of her room?", "passage": "Jesse needs a carpet of size 10 square feet to cover her room. If her room is 2 feet wide.", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jesse needs a carpet of size 10 square feet to cover her room. If her room is 2 feet wide. What is the length of her room?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    width = 2\n    area = 10\n    length = area / width\n    return length\nans = solver()", "answer": 5.0}
{"question": "How many bananas does he have in his collection?", "passage": "There are some bananas in Philip's banana collection. If the bananas are organized into 140 groups of size 187.", "executed": 26180.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are some bananas in Philip's banana collection. If the bananas are organized into 140 groups of size 187. How many bananas does he have in his collection?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    group_size = 187\n    num_groups = 140\n    num_bananas = group_size * num_groups\n    return num_bananas\nans = solver()", "answer": 26180.0}
{"question": "How many groups will be created?", "passage": "Rebecca wants to split a collection of eggs into groups of 6. Rebecca has 18 eggs 72 bananas and 66 marbles.", "executed": 26.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rebecca wants to split a collection of eggs into groups of 6. Rebecca has 18 eggs 72 bananas and 66 marbles. How many groups will be created?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    eggs = 18\n    bananas = 72\n    marbles = 66\n    group_size = 6\n    # Now, we can calculate the number of groups for each item:\n    eggs_groups = math.ceil(eggs / group_size)\n    bananas_groups = math.ceil(bananas / group_size)\n    marbles_groups = math.ceil(marbles / group_size)\n    # Now, we can calculate the total number of groups:\n    total_groups = eggs_groups + bananas_groups + marbles_groups\n    return total_groups\nans = solver()", "answer": 3.0}
{"question": "How much did she weigh before starting to jog?", "passage": "Jessie currently weighs 9 kilograms. After she started to go jogging everyday she lost 62 kilograms in the first week and 140 kilograms in the second week.", "executed": 211.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jessie currently weighs 9 kilograms. After she started to go jogging everyday she lost 62 kilograms in the first week and 140 kilograms in the second week. How much did she weigh before starting to jog?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Jessie's weight before starting to jog = x\n    # Jessie's weight after the first week = x - 62\n    # Jessie's weight after the second week = x - 62 - 140\n    # Jessie's weight after the second week = 9\n    # x - 62 - 140 = 9\n    # x = 211\n    return 211\nans = solver()", "answer": 211.0}
{"question": "How many buses are needed to take the trip?", "passage": "The school is planning a field trip. The school has 72 classrooms. There are 3 seats on each school bus. If there are a total of 111 students in the school.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school is planning a field trip. The school has 72 classrooms. There are 3 seats on each school bus. If there are a total of 111 students in the school. How many buses are needed to take the trip?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    classrooms = 72\n    seats = 3\n    students = 111\n    # Now, we can calculate the number of buses needed:\n    buses = math.ceil(students / (classrooms * seats))\n    return buses\nans = solver()", "answer": 37.0}
{"question": "How many campers went rowing in all?", "passage": "13 campers went rowing and 59 campers went hiking in the morning. 21 campers went rowing in the afternoon.", "executed": 34.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 13 campers went rowing and 59 campers went hiking in the morning. 21 campers went rowing in the afternoon. How many campers went rowing in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    rowing_morning = 13\n    hiking_morning = 59\n    rowing_afternoon = 21\n    rowing_all = rowing_morning + rowing_afternoon\n    return rowing_all\nans = solver()", "answer": 34.0}
{"question": "How many more action figures than books were on his shelf?", "passage": "Jerry had 9 action figures on a shelf in his room. Later he added 7 more action figures to the shelf. If he also has 10 books on the shelf.", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jerry had 9 action figures on a shelf in his room. Later he added 7 more action figures to the shelf. If he also has 10 books on the shelf. How many more action figures than books were on his shelf?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Jerry had 9 action figures on a shelf in his room.\n    action_figures_on_shelf = 9\n    # Later he added 7 more action figures to the shelf.\n    action_figures_added = 7\n    # If he also has 10 books on the shelf.\n    books_on_shelf = 10\n    # How many more action figures than books were on his shelf?\n    action_figures_more_than_books = action_figures_on_shelf + action_figures_added - books_on_shelf\n    return action_figures_more_than_books\nans = solver()", "answer": 6.0}
{"question": "How many marbles does he have now?", "passage": "Josh had 22 marbles in his collection. He found 13 marbles ones while he lost 5 marbles.", "executed": 30.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Josh had 22 marbles in his collection. He found 13 marbles ones while he lost 5 marbles. How many marbles does he have now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marbles_in_collection = 22\n    marbles_found = 13\n    marbles_lost = 5\n    marbles_now = marbles_in_collection + marbles_found - marbles_lost\n    return marbles_now\nans = solver()", "answer": 30.0}
{"question": "How many nails does John need for the house wall?", "passage": "For the walls of the house he would use 12 large planks of wood and 10 small planks. If large planks together need 15 pieces of nails to be secured and small planks together need 5 nails.", "executed": 230.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For the walls of the house he would use 12 large planks of wood and 10 small planks. If large planks together need 15 pieces of nails to be secured and small planks together need 5 nails. How many nails does John need for the house wall?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    large_planks = 12\n    small_planks = 10\n    large_planks_nails = 15\n    small_planks_nails = 5\n    # Now we can calculate the total number of nails needed for the house wall:\n    total_nails = large_planks * large_planks_nails + small_planks * small_planks_nails\n    return total_nails\nans = solver()", "answer": 20.0}
{"question": "How many more crayons did he give to his friends than those he lost?", "passage": "Paul got a box of 589 crayons for his birthday. During the school year he gave 571 crayons to his friends while he lost 161 crayons.", "executed": 410.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul got a box of 589 crayons for his birthday. During the school year he gave 571 crayons to his friends while he lost 161 crayons. How many more crayons did he give to his friends than those he lost?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # crayons_given = 571\n    # crayons_lost = 161\n    # crayons_total = 589\n    crayons_given = 571\n    crayons_lost = 161\n    crayons_total = 589\n    # Now, we can calculate the crayons_remaining by using the formula:\n    # crayons_remaining = crayons_total - crayons_given - crayons_lost\n    crayons_remaining = crayons_total - crayons_given - crayons_lost\n    # Now, we can calculate the crayons_difference by using the formula:\n    # crayons_difference = crayons_given - crayons_lost\n    crayons_difference = crayons_given - crayons_lost\n    # Finally, we can return the answer\n    return crayons_difference\nans = solver()", "answer": 410.0}
{"question": "How many more emails did Jack receive in the morning than in the evening?", "passage": "Jack received 9 emails in the morning, 10 emails in the afternoon and 7 emails in the evening.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jack received 9 emails in the morning, 10 emails in the afternoon and 7 emails in the evening. How many more emails did Jack receive in the morning than in the evening?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning_emails = 9\n    afternoon_emails = 10\n    evening_emails = 7\n    # Now, we can calculate the difference between the morning emails and the evening emails:\n    difference = morning_emails - evening_emails\n    return difference\nans = solver()", "answer": 2.0}
{"question": "How many more emails did Jack receive in the afternoon than in the morning?", "passage": "Jack received 6 emails in the morning and 8 emails in the afternoon.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jack received 6 emails in the morning and 8 emails in the afternoon. How many more emails did Jack receive in the afternoon than in the morning?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning_emails = 6\n    afternoon_emails = 8\n    # Now, we can calculate the difference between the afternoon emails and the morning emails:\n    difference = afternoon_emails - morning_emails\n    # Finally, we can return the difference:\n    return difference\nans = solver()", "answer": 2.0}
{"question": "How many visited the Buckingham palace within 57 days?", "passage": "After eating a hearty meal they went to see the Buckingham palace. There were 71 paintings in the Buckingham palace. There, Rachel learned that 557 visitors came to the Buckingham palace that day. If there were 188 visitors the previous day.", "executed": 5.197183098591549, "generated": "\nimport math\nimport numpy as np\n\n# Question: After eating a hearty meal they went to see the Buckingham palace. There were 71 paintings in the Buckingham palace. There, Rachel learned that 557 visitors came to the Buckingham palace that day. If there were 188 visitors the previous day. How many visited the Buckingham palace within 57 days?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    paintings = 71\n    visitors_today = 557\n    visitors_previous_day = 188\n    days = 57\n    # Now, we can calculate the visitors_per_day\n    visitors_per_day = (visitors_today - visitors_previous_day) / days\n    # Now, we can calculate the visitors_per_paintings\n    visitors_per_paintings = visitors_per_day / paintings\n    # Now, we can calculate the visitors_per_days\n    visitors_per_days = visitors_per_paintings * days\n    return visitors_per_days\nans = solver()", "answer": 745.0}
{"question": "How many more chocolate chip cookies did Helen bake yesterday compared to today?", "passage": "Helen the hippo and her friends are preparing for thanksgiving at Helen's house. Helen baked 197 chocolate chip cookies and 46 raisin cookies yesterday. And she baked 75 raisin cookies and 66 chocolate chip cookies this morning.", "executed": 131.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Helen the hippo and her friends are preparing for thanksgiving at Helen's house. Helen baked 197 chocolate chip cookies and 46 raisin cookies yesterday. And she baked 75 raisin cookies and 66 chocolate chip cookies this morning. How many more chocolate chip cookies did Helen bake yesterday compared to today?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # yesterday_chocolate_chip_cookies = 197\n    # yesterday_raisin_cookies = 46\n    # today_chocolate_chip_cookies = 66\n    # today_raisin_cookies = 75\n    yesterday_chocolate_chip_cookies = 197\n    yesterday_raisin_cookies = 46\n    today_chocolate_chip_cookies = 66\n    today_raisin_cookies = 75\n    # Now, we can calculate the difference between yesterday and today:\n    difference_chocolate_chip_cookies = yesterday_chocolate_chip_cookies - today_chocolate_chip_cookies\n    difference_raisin_cookies = yesterday_raisin_cookies - today_raisin_cookies\n    # Finally, we can return the answer:\n    return difference_chocolate_chip_cookies\nans = solver()", "answer": 131.0}
{"question": "How many peaches does Jill have?", "passage": "Jake has 18 fewer peaches than Steven who has 13 more peaches than Jill. Steven has 19 peaches.", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jake has 18 fewer peaches than Steven who has 13 more peaches than Jill. Steven has 19 peaches. How many peaches does Jill have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    jake = 0\n    steven = 0\n    jill = 0\n    # Now, we can define the equations:\n    jake = jill - 18\n    steven = jill + 13\n    steven = 19\n    # Now, we can solve the equations:\n    jill = 19 - 13\n    jake = jill - 18\n    return jill, jake\nans = solver()", "answer": 6.0}
{"question": "How many packs of cake did she buy in all?", "passage": "Lucy went to the grocery store. She bought 23 packs of cookie and some packs of cake. In total she had 27 packs of grocery.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Lucy went to the grocery store. She bought 23 packs of cookie and some packs of cake. In total she had 27 packs of grocery. How many packs of cake did she buy in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookie = 23\n    cake = ?\n    total = 27\n    # We can also define the equation:\n    total = cookie + cake\n    # Now we can solve the equation:\n    cake = total - cookie\n    return cake\nans = solver()", "answer": 4.0}
{"question": "How many more hours does he spend on learning english than he does on learning chinese?", "passage": "Every day Ryan spends 6 hours on learning english 3 hours on learning chinese and 58 hours on learning spanish.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Every day Ryan spends 6 hours on learning english 3 hours on learning chinese and 58 hours on learning spanish. How many more hours does he spend on learning english than he does on learning chinese?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    english = 6\n    chinese = 3\n    spanish = 58\n    # Now we can calculate the difference between english and chinese\n    difference = english - chinese\n    return difference\nans = solver()", "answer": 3.0}
{"question": "How many more pages does the first chapter have than the second chapter?", "passage": "A book has 2 chapters. The first chapter is 48 pages long. The second chapter is 11 pages long.", "executed": 37.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A book has 2 chapters. The first chapter is 48 pages long. The second chapter is 11 pages long. How many more pages does the first chapter have than the second chapter?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    chapter1 = 48\n    chapter2 = 11\n    # Now, we can calculate the difference between the two chapters:\n    difference = chapter1 - chapter2\n    return difference\nans = solver()", "answer": 37.0}
{"question": "How many more green peaches than red peaches are in the basket?", "passage": "6 green peaches, 60 yellow peaches and 2 red peaches are in the basket.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 6 green peaches, 60 yellow peaches and 2 red peaches are in the basket. How many more green peaches than red peaches are in the basket?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    green_peaches = 6\n    yellow_peaches = 60\n    red_peaches = 2\n    # Now, we can calculate the answer:\n    answer = green_peaches - red_peaches\n    return answer\nans = solver()", "answer": 4.0}
{"question": "How many days would they last her?", "passage": "Debby drinks 6 bottles a day. If she bought a total of 12 water bottles.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Debby drinks 6 bottles a day. If she bought a total of 12 water bottles. How many days would they last her?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bottles_per_day = 6\n    total_bottles = 12\n    days = 0\n    # Now, we can calculate the days by dividing the total_bottles by bottles_per_day\n    days = total_bottles / bottles_per_day\n    return days\nans = solver()", "answer": 2.0}
{"question": "How many pupils were present in the program?", "passage": "There were 22 parents in the program and 676 people in total.", "executed": 654.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 22 parents in the program and 676 people in total. How many pupils were present in the program?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    parents = 22\n    total = 676\n    pupils = total - parents\n    return pupils\nans = solver()", "answer": 654.0}
{"question": "How many kids did she play with altogether?", "passage": "Julia played tag with 17 kids on monday, 15 kids on tuesday and 2 kids on wednesday.", "executed": 34.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Julia played tag with 17 kids on monday, 15 kids on tuesday and 2 kids on wednesday. How many kids did she play with altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 17\n    tuesday = 15\n    wednesday = 2\n    # Now, we can calculate the total number of kids she played with:\n    total = monday + tuesday + wednesday\n    return total\nans = solver()", "answer": 34.0}
{"question": "How far did the mouse jump?", "passage": "The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped 25 inches. The frog jumped 18 inches farther than the grasshopper and the mouse jumped 2 inches farther than the frog.", "executed": 45.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped 25 inches. The frog jumped 18 inches farther than the grasshopper and the mouse jumped 2 inches farther than the frog. How far did the mouse jump?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    grasshopper = 25\n    frog = grasshopper + 18\n    mouse = frog + 2\n    return mouse\nans = solver()", "answer": 45.0}
{"question": "How many grams of wax does he already have?", "passage": "Next on his checklist is wax to stick the feathers together and colors to paint them. He needs a total of 49 g of colors to paint them. If the feathers require 288 g of wax and right now he just needs 260 g.", "executed": 28.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Next on his checklist is wax to stick the feathers together and colors to paint them. He needs a total of 49 g of colors to paint them. If the feathers require 288 g of wax and right now he just needs 260 g. How many grams of wax does he already have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    wax_needed = 288\n    wax_have = 260\n    wax_missing = wax_needed - wax_have\n    return wax_missing\nans = solver()", "answer": 28.0}
{"question": "How many more cups of flour than cups of sugar does she need to add now?", "passage": "Mary is baking a cake. The recipe calls for 14 cups of flour and 6 cups of sugar. She already put in 5 cups of flour.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 14 cups of flour and 6 cups of sugar. She already put in 5 cups of flour. How many more cups of flour than cups of sugar does she need to add now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    flour_needed = 14\n    sugar_needed = 6\n    flour_added = 5\n    # Now, we can calculate the amount of flour needed to be added:\n    flour_to_add = flour_needed - flour_added\n    # Now, we can calculate the amount of sugar needed to be added:\n    sugar_to_add = sugar_needed\n    # Now, we can calculate the difference between the amount of flour needed to be added and the amount of sugar needed to be added:\n    difference = flour_to_add - sugar_to_add\n    return difference\nans = solver()", "answer": 3.0}
{"question": "How many apples does Jake have?", "passage": "Jake has 13 more apples and 17 fewer peaches than Steven. Steven has 8 peaches and 12 apples.", "executed": 25.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jake has 13 more apples and 17 fewer peaches than Steven. Steven has 8 peaches and 12 apples. How many apples does Jake have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    apples_jake = 0\n    apples_steven = 0\n    peaches_jake = 0\n    peaches_steven = 0\n    # Now, we can define the equations:\n    apples_jake = apples_steven + 13\n    peaches_jake = peaches_steven - 17\n    apples_steven = 12\n    peaches_steven = 8\n    # Now, we can solve the equations:\n    apples_jake = apples_steven + 13\n    apples_jake = 12 + 13\n    apples_jake = 25\n    return apples_jake\nans = solver()", "answer": 25.0}
{"question": "How many more peaches does Jill have than Jake?", "passage": "Jake has 12 fewer peaches than Steven who has 11 more peaches than Jill. Steven has 4 peaches.", "executed": 12.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jake has 12 fewer peaches than Steven who has 11 more peaches than Jill. Steven has 4 peaches. How many more peaches does Jill have than Jake?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    jake = 0\n    steven = 4\n    jill = 0\n    # Now, we can use the given information to derive the answer:\n    jill = steven + 11\n    jake = jill - 12\n    return jill - jake\nans = solver()", "answer": 1.0}
{"question": "How much money do they have together now?", "passage": "Last week Fred had 86 dollars and Jason had 5 dollars. Fred washed cars over the weekend and now has 9 dollars and Jason did not work.", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Last week Fred had 86 dollars and Jason had 5 dollars. Fred washed cars over the weekend and now has 9 dollars and Jason did not work. How much money do they have together now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    Fred_last_week = 86\n    Jason_last_week = 5\n    Fred_this_week = 9\n    Jason_this_week = Jason_last_week\n    # Now we can calculate the total money they have together now:\n    total_money = Fred_this_week + Jason_this_week\n    return total_money\nans = solver()", "answer": 14.0}
{"question": "How many peaches does Jake have?", "passage": "Jake has 12 fewer peaches and 79 more apples than Steven. Steven has 19 peaches and 14 apples.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jake has 12 fewer peaches and 79 more apples than Steven. Steven has 19 peaches and 14 apples. How many peaches does Jake have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    jake_peaches = 0\n    jake_apples = 0\n    steven_peaches = 0\n    steven_apples = 0\n    # Now, we can define the equations:\n    jake_peaches = steven_peaches - 12\n    jake_apples = steven_apples + 79\n    steven_peaches = 19\n    steven_apples = 14\n    # Now, we can solve the equations:\n    jake_peaches = 19 - 12\n    jake_apples = 14 + 79\n    steven_peaches = 19\n    steven_apples = 14\n    jake_peaches = 7\n    jake_apples = 93\n    steven_peaches = 19\n    steven_apples = 14\n    # Now, we can return the answer:\n    return jake_peaches\nans = solver()", "answer": 7.0}
{"question": "How many more books than movies have you read?", "passage": "There are 10 different books and 6 different movies in the ' crazy silly school ' series. If you read 14 of the movies and watched 19 of the books.", "executed": -5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 10 different books and 6 different movies in the ' crazy silly school ' series. If you read 14 of the movies and watched 19 of the books. How many more books than movies have you read?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    books = 10\n    movies = 6\n    read_books = 14\n    watched_movies = 19\n    # Now, we can calculate the number of books and movies that we have not read or watched:\n    unread_books = books - read_books\n    unwatched_movies = movies - watched_movies\n    # Now, we can calculate the number of books and movies that we have read or watched:\n    read_movies = movies - unwatched_movies\n    watched_books = books - unread_books\n    # Now, we can calculate the number of books that we have read more than movies:\n    more_books = read_books - read_movies\n    return more_books\nans = solver()", "answer": 5.0}
{"question": "How many days did she drink for?", "passage": "Debby bought 301 water bottles when they were on sale. If she drank 144 bottles a day for some days. If she has 157 bottles left.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Debby bought 301 water bottles when they were on sale. If she drank 144 bottles a day for some days. If she has 157 bottles left. How many days did she drink for?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    total_bottles = 301\n    drank_bottles = 144\n    left_bottles = 157\n    days = 0\n    # Now, we can use the variables to calculate the answer\n    days = (total_bottles - left_bottles) / drank_bottles\n    return days\nans = solver()", "answer": 1.0}
{"question": "How many saltwater animals does Tyler have?", "passage": "He also had 56 aquariums for saltwater animals and 10 aquariums for freshwater animals. Each aquarium has 39 animals in it.", "executed": 2184.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He also had 56 aquariums for saltwater animals and 10 aquariums for freshwater animals. Each aquarium has 39 animals in it. How many saltwater animals does Tyler have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    saltwater_aquariums = 56\n    freshwater_aquariums = 10\n    animals_per_aquarium = 39\n    saltwater_animals = saltwater_aquariums * animals_per_aquarium\n    return saltwater_animals\nans = solver()", "answer": 2184.0}
{"question": "How many bags did she have altogether?", "passage": "Tiffany was collecting cans for recycling. On monday she had 10 bags of cans. She found 3 bags of cans on the next day and 7 bags of cans the day after that.", "executed": 20.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Tiffany was collecting cans for recycling. On monday she had 10 bags of cans. She found 3 bags of cans on the next day and 7 bags of cans the day after that. How many bags did she have altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 10\n    tuesday = 3\n    wednesday = 7\n    # Now, we can calculate the total number of cans:\n    total = monday + tuesday + wednesday\n    return total\nans = solver()", "answer": 20.0}
{"question": "How much did they jump altogether?", "passage": "The grasshopper and the frog had a jumping contest. The grasshopper jumped 31 inches and the frog jumped 35 inches.", "executed": 66.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The grasshopper and the frog had a jumping contest. The grasshopper jumped 31 inches and the frog jumped 35 inches. How much did they jump altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    grasshopper_jump = 31\n    frog_jump = 35\n    total_jump = grasshopper_jump + frog_jump\n    return total_jump\nans = solver()", "answer": 66.0}
{"question": "How much did she spend?", "passage": "There were 100 dollars in Olivia's wallet. She collected 148 more dollars from an atm. After she visited a supermarket there were 159 dollars left.", "executed": 89.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 100 dollars in Olivia's wallet. She collected 148 more dollars from an atm. After she visited a supermarket there were 159 dollars left. How much did she spend?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Olivia's wallet = 100\n    # ATM = 148\n    # Supermarket = 159\n    # Olivia's wallet + ATM = Supermarket\n    # 100 + 148 = 159\n    # 248 = 159\n    # 248 - 159 = 89\n    return 89\nans = solver()", "answer": 89.0}
{"question": "How many more customers left than those that stayed behind?", "passage": "A waiter had 11 customers. After some left he still had 3 customers.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter had 11 customers. After some left he still had 3 customers. How many more customers left than those that stayed behind?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of customers that left\n    # y = number of customers that stayed behind\n    # x + y = 11\n    # y = 3\n    # x = 11 - 3\n    # x = 8\n    return 8\nans = solver()", "answer": 5.0}
{"question": "How many more games does Katie have than her friends?", "passage": "Katie had 81 ds games and her friends had 59 games.", "executed": 22.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Katie had 81 ds games and her friends had 59 games. How many more games does Katie have than her friends?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    katie_games = 81\n    friends_games = 59\n    # Now, we can calculate the difference between the two variables:\n    difference = katie_games - friends_games\n    # Finally, we can return the difference:\n    return difference\nans = solver()", "answer": 22.0}
{"question": "How many pieces of candy are in each bag?", "passage": "Frank put some pieces of candy equally into 2 bags. If he had 16 pieces of candy.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank put some pieces of candy equally into 2 bags. If he had 16 pieces of candy. How many pieces of candy are in each bag?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   candy_in_bag_1 = ?\n    #   candy_in_bag_2 = ?\n    #   total_candy = 16\n    #   candy_in_bag_1 + candy_in_bag_2 = total_candy\n    #   candy_in_bag_1 = candy_in_bag_2\n    #   candy_in_bag_1 + candy_in_bag_1 = total_candy\n    #   2 * candy_in_bag_1 = total_candy\n    #   candy_in_bag_1 = total_candy / 2\n    #   candy_in_bag_2 = total_candy / 2\n    candy_in_bag_1 = 16 / 2\n    candy_in_bag_2 = 16 / 2\n    return candy_in_bag_1, candy_in_bag_2\nans = solver()", "answer": 8.0}
{"question": "How many drums of grapes would be filled in each day?", "passage": "Being his favorite, he saved checking on the grapevines for his last stop. He was told by 266 of the pickers that they fill 90 drums of grapes in 5 days.", "executed": 18.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Being his favorite, he saved checking on the grapevines for his last stop. He was told by 266 of the pickers that they fill 90 drums of grapes in 5 days. How many drums of grapes would be filled in each day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    pickers = 266\n    drums = 90\n    days = 5\n    # Now, we can calculate the number of drums of grapes filled in each day:\n    drums_per_day = drums / days\n    return drums_per_day\nans = solver()", "answer": 18.0}
{"question": "How many more kids did she play with on monday than on tuesday?", "passage": "Julia played tag with 5 kids on tuesday. She had played tag with 6 kids on monday.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Julia played tag with 5 kids on tuesday. She had played tag with 6 kids on monday. How many more kids did she play with on monday than on tuesday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 6\n    tuesday = 5\n    # Now, we can calculate the difference between monday and tuesday\n    difference = monday - tuesday\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many kids did she play with on tuesday?", "passage": "Julia played tag with a total of 18 kids. She played with 4 kids on monday and yet with some more kids on tuesday.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Julia played tag with a total of 18 kids. She played with 4 kids on monday and yet with some more kids on tuesday. How many kids did she play with on tuesday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 4\n    tuesday = ?\n    total = 18\n    # We can also define the equation:\n    monday + tuesday = total\n    # Now, we can solve the equation:\n    tuesday = total - monday\n    return tuesday\nans = solver()", "answer": 14.0}
{"question": "How many more action figures than books were on his shelf?", "passage": "Jerry had 3 books and 4 action figures on a shelf in his room. Later he added 2 more action figures to the shelf.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jerry had 3 books and 4 action figures on a shelf in his room. Later he added 2 more action figures to the shelf. How many more action figures than books were on his shelf?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    books = 3\n    action_figures = 4\n    more_action_figures = 2\n    # Now, we can calculate the answer:\n    answer = action_figures + more_action_figures - books\n    return answer\nans = solver()", "answer": 3.0}
{"question": "How many pieces of junk mail should he give in each house?", "passage": "There are 6 houses on a block. If a mailman has to give 24 pieces of junk mail to each block.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 6 houses on a block. If a mailman has to give 24 pieces of junk mail to each block. How many pieces of junk mail should he give in each house?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   1. Number of houses on a block: n = 6\n    #   2. Number of pieces of junk mail to each block: m = 24\n    #   3. Number of pieces of junk mail to each house: x\n    #   4. Number of pieces of junk mail to each house: y\n    n = 6\n    m = 24\n    x = 0\n    y = 0\n    # Now, we can define the equation:\n    #   1. Number of pieces of junk mail to each block: m = n * x\n    #   2. Number of pieces of junk mail to each house: y = m / n\n    x = m / n\n    y = m / n\n    return y\nans = solver()", "answer": 4.0}
{"question": "How many more files than apps does he have left on the phone?", "passage": "Dave had 19 apps and 18 files on his phone. After deleting some apps and files he had 6 apps and 15 files left.", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dave had 19 apps and 18 files on his phone. After deleting some apps and files he had 6 apps and 15 files left. How many more files than apps does he have left on the phone?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    apps = 19\n    files = 18\n    apps_left = 6\n    files_left = 15\n    # Now, we can calculate the number of apps and files deleted:\n    apps_deleted = apps - apps_left\n    files_deleted = files - files_left\n    # Now, we can calculate the number of files more than apps left on the phone:\n    files_more_than_apps = files_left - apps_left\n    return files_more_than_apps\nans = solver()", "answer": 9.0}
{"question": "How many more cakes did baker buy than those he sold?", "passage": "Baker made 99 cakes. He bought 167 new cakes and sold 89 cakes.", "executed": 78.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 99 cakes. He bought 167 new cakes and sold 89 cakes. How many more cakes did baker buy than those he sold?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   cakes_baker_made = 99\n    #   cakes_baker_bought = 167\n    #   cakes_baker_sold = 89\n    cakes_baker_made = 99\n    cakes_baker_bought = 167\n    cakes_baker_sold = 89\n    # Now, we can calculate the number of cakes baker has:\n    cakes_baker_has = cakes_baker_made + cakes_baker_bought - cakes_baker_sold\n    # Now, we can calculate the number of cakes baker bought more than those he sold:\n    cakes_baker_bought_more = cakes_baker_bought - cakes_baker_sold\n    return cakes_baker_bought_more\nans = solver()", "answer": 78.0}
{"question": "How many birds and storks are sitting on the fence?", "passage": "3 birds and 4 storks were sitting on the fence. 6 more storks came to join them.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 3 birds and 4 storks were sitting on the fence. 6 more storks came to join them. How many birds and storks are sitting on the fence?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    birds = 3\n    storks = 4\n    more_storks = 6\n    total_birds = birds\n    total_storks = storks + more_storks\n    return total_birds, total_storks\nans = solver()", "answer": 13.0}
{"question": "How many push-ups did Zachary do?", "passage": "David did 44 push-ups in gym class today. David did 9 more push-ups than Zachary.", "executed": 35.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: David did 44 push-ups in gym class today. David did 9 more push-ups than Zachary. How many push-ups did Zachary do?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    zachary = 0\n    david = 0\n    # We know that David did 44 push-ups, so we can assign the value to david\n    david = 44\n    # We know that David did 9 more push-ups than Zachary, so we can assign the value to zachary\n    zachary = david - 9\n    return zachary\nans = solver()", "answer": 35.0}
{"question": "How much did Edward have before he spent his money?", "passage": "Edward spent $ 6 to buy books and $ 16 to buy pens. Now he has $ 19.", "executed": 41.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Edward spent $ 6 to buy books and $ 16 to buy pens. Now he has $ 19. How much did Edward have before he spent his money?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    books = 6\n    pens = 16\n    money = 19\n    # Now we can define the equation:\n    equation = books + pens + money\n    return equation\nans = solver()", "answer": 41.0}
{"question": "How many bookshelves does he have?", "passage": "Bryan took a look at his books as well. Each bookshelf contains 2 books. If he has a total of 38 books.", "executed": 9.5, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bryan took a look at his books as well. Each bookshelf contains 2 books. If he has a total of 38 books. How many bookshelves does he have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # bookshelf = ?\n    # books = ?\n    # bookshelf * 2 = books\n    # bookshelf * 2 + bookshelf * 2 = 38\n    # bookshelf * 4 = 38\n    # bookshelf = 38 / 4\n    bookshelf = 38 / 4\n    return bookshelf\nans = solver()", "answer": 19.0}
{"question": "How many roses did she cut?", "passage": "There were 7 roses in the vase. Jessica cut some more roses from her flower garden which had a total of 59 roses. There are now 20 roses in the vase.", "executed": 13.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 7 roses in the vase. Jessica cut some more roses from her flower garden which had a total of 59 roses. There are now 20 roses in the vase. How many roses did she cut?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of roses cut\n    # y = number of roses in the vase\n    # z = number of roses in the flower garden\n    # We can also define the equations:\n    # y = 7 + x\n    # z = 59\n    # y = 20\n    # We can solve the equations to get the answer:\n    x = 20 - 7\n    return x\nans = solver()", "answer": 13.0}
{"question": "How many rounds did he play?", "passage": "Luke played a trivia game and gained 3 points in each round of a game. If he scored 78 points in the trivia game.", "executed": 26.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Luke played a trivia game and gained 3 points in each round of a game. If he scored 78 points in the trivia game. How many rounds did he play?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of rounds\n    # y = number of points\n    # y = 3x\n    # y = 78\n    # 3x = 78\n    # x = 26\n    return 26\nans = solver()", "answer": 26.0}
{"question": "How many more cakes did baker buy than those he sold?", "passage": "Baker made 13 cakes. He sold 91 of them and bought 154 new cakes.", "executed": 63.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 13 cakes. He sold 91 of them and bought 154 new cakes. How many more cakes did baker buy than those he sold?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cakes_baker_made = 13\n    cakes_baker_sold = 91\n    cakes_baker_bought = 154\n    cakes_baker_bought_more_than_sold = cakes_baker_bought - cakes_baker_sold\n    return cakes_baker_bought_more_than_sold\nans = solver()", "answer": 63.0}
{"question": "How many more sacks of unripe oranges than ripe oranges are harvested per day?", "passage": "He then went to see the oranges being harvested. He found out that they harvest 71 sacks of unripe oranges and 60 sacks of ripe oranges per day.", "executed": 11.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He then went to see the oranges being harvested. He found out that they harvest 71 sacks of unripe oranges and 60 sacks of ripe oranges per day. How many more sacks of unripe oranges than ripe oranges are harvested per day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    unripe_oranges = 71\n    ripe_oranges = 60\n    # Now, we can calculate the difference between the two variables:\n    difference = unripe_oranges - ripe_oranges\n    return difference\nans = solver()", "answer": 11.0}
{"question": "How many animals were not hiding in all?", "passage": "At the zoo, a cage had snakes and alligators. The total number of animals in the cage was 79. If 24 snakes and 51 alligators were hiding.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the zoo, a cage had snakes and alligators. The total number of animals in the cage was 79. If 24 snakes and 51 alligators were hiding. How many animals were not hiding in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    snakes = 24\n    alligators = 51\n    total_animals = 79\n    not_hiding = total_animals - snakes - alligators\n    return not_hiding\nans = solver()", "answer": 4.0}
{"question": "How many bottle caps did he find at the park?", "passage": "Danny has 21 bottle caps in his collection. He found some more bottle caps at the park. If he has 53 bottle caps now.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Danny has 21 bottle caps in his collection. He found some more bottle caps at the park. If he has 53 bottle caps now. How many bottle caps did he find at the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bottle_caps_in_collection = 21\n    bottle_caps_found_at_park = ?\n    bottle_caps_now = 53\n    # Now, we can write the equation:\n    bottle_caps_found_at_park = bottle_caps_now - bottle_caps_in_collection\n    return bottle_caps_found_at_park\nans = solver()", "answer": 32.0}
{"question": "How many chapters did he read per day?", "passage": "Frank was reading through his favorite book. The book had 2 chapters each with 405 pages. It took frank 664 days to finish the book.", "executed": 0.0030120481927710845, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank was reading through his favorite book. The book had 2 chapters each with 405 pages. It took frank 664 days to finish the book. How many chapters did he read per day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    chapters = 2\n    pages = 405\n    days = 664\n    # Now, we can calculate the answer:\n    answer = chapters / days\n    return answer\nans = solver()", "answer": 332.0}
{"question": "How many roses did she cut?", "passage": "There were 2 roses in the vase. Jessica threw away 4 roses from the vase and cut some more new roses from her flower garden to put in the vase. There are now 23 roses in the vase.", "executed": 17.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 2 roses in the vase. Jessica threw away 4 roses from the vase and cut some more new roses from her flower garden to put in the vase. There are now 23 roses in the vase. How many roses did she cut?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 2 = x + y\n    # 23 = x + y + 4 + z\n    # x = number of roses in the vase before Jessica threw away 4 roses\n    # y = number of roses in the vase before Jessica cut some more new roses\n    # z = number of roses Jessica cut\n    # We can solve the equation to get the answer:\n    z = 23 - (2 + 4)\n    return z\nans = solver()", "answer": 25.0}
{"question": "How many pages of reading and biology homework did she have to complete?", "passage": "Rachel had to complete 5 pages of math homework, 10 pages of reading homework and 6 more pages of biology homework.", "executed": 16.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel had to complete 5 pages of math homework, 10 pages of reading homework and 6 more pages of biology homework. How many pages of reading and biology homework did she have to complete?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    math_pages = 5\n    reading_pages = 10\n    biology_pages = 6\n    total_pages = math_pages + reading_pages + biology_pages\n    reading_and_biology_pages = total_pages - math_pages\n    return reading_and_biology_pages\nans = solver()", "answer": 16.0}
{"question": "How many more action figures than books were on his shelf?", "passage": "Jerry had 7 action figures and 2 books on a shelf in his room. Later he added 4 more books to the shelf.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jerry had 7 action figures and 2 books on a shelf in his room. Later he added 4 more books to the shelf. How many more action figures than books were on his shelf?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    action_figures = 7\n    books = 2\n    more_books = 4\n    # Now, we can calculate the number of books on the shelf after adding more books:\n    books_after_adding = books + more_books\n    # Now, we can calculate the number of action figures on the shelf after adding more books:\n    action_figures_after_adding = action_figures\n    # Now, we can calculate the difference between the number of action figures and books on the shelf after adding more books:\n    difference = action_figures_after_adding - books_after_adding\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many more boys than girls does the school have?", "passage": "In a school there are 34 girls and 841 boys.", "executed": 807.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In a school there are 34 girls and 841 boys. How many more boys than girls does the school have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    girls = 34\n    boys = 841\n    # Now, we can calculate the difference between boys and girls:\n    difference = boys - girls\n    return difference\nans = solver()", "answer": 807.0}
{"question": "How many pieces of candy had he eaten at the start?", "passage": "Bobby ate some pieces of candy. Then he ate 25 more. If he ate a total of 43 pieces of candy.", "executed": 18.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bobby ate some pieces of candy. Then he ate 25 more. If he ate a total of 43 pieces of candy. How many pieces of candy had he eaten at the start?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x: the number of pieces of candy that Bobby ate at the start\n    # y: the number of pieces of candy that Bobby ate at the end\n    # z: the number of pieces of candy that Bobby ate in total\n    x = 0\n    y = 0\n    z = 0\n    # According to the question, we can define the equations:\n    # y = x + 25\n    # z = x + y\n    # z = 43\n    # We can solve the equations to get the answer:\n    x = 43 - 25\n    y = x + 25\n    z = x + y\n    return x\nans = solver()", "answer": 18.0}
{"question": "How many days will it take to harvest 24 sacks of oranges?", "passage": "He then went to see the oranges being harvested. He found out that they harvest 8 sacks per day.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He then went to see the oranges being harvested. He found out that they harvest 8 sacks per day. How many days will it take to harvest 24 sacks of oranges?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. The number of sacks of oranges harvested per day: 8\n    # 2. The number of sacks of oranges to be harvested: 24\n    # 3. The number of days to harvest the oranges: ?\n    # We can then derive the answer by using the formula:\n    # Number of days = Number of sacks of oranges to be harvested / Number of sacks of oranges harvested per day\n    return 24 / 8\nans = solver()", "answer": 3.0}
{"question": "How many more campers went rowing in the morning than in the evening?", "passage": "53 campers went rowing in the morning 48 campers went rowing in the afternoon and 49 campers went rowing in the evening.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 53 campers went rowing in the morning 48 campers went rowing in the afternoon and 49 campers went rowing in the evening. How many more campers went rowing in the morning than in the evening?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning = 53\n    afternoon = 48\n    evening = 49\n    # Now, we can calculate the difference between the morning and evening\n    difference = morning - evening\n    return difference\nans = solver()", "answer": 4.0}
{"question": "How many more emails did Jack receive in the morning than in the afternoon?", "passage": "Jack received 3 emails in the afternoon, 5 emails in the morning and 16 emails in the evening.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jack received 3 emails in the afternoon, 5 emails in the morning and 16 emails in the evening. How many more emails did Jack receive in the morning than in the afternoon?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    afternoon = 3\n    morning = 5\n    evening = 16\n    # Now, we can calculate the difference between morning and afternoon\n    difference = morning - afternoon\n    return difference\nans = solver()", "answer": 2.0}
{"question": "How much did each candy bar cost?", "passage": "Dan has $ 3. For a total of $ 4 he bought 2 candy bar each one costing the same amount of money.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dan has $ 3. For a total of $ 4 he bought 2 candy bar each one costing the same amount of money. How much did each candy bar cost?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Dan's money = 3\n    # Candy bar = 2\n    # Each candy bar cost = ?\n    # Total money = 4\n    # So, we can get the equation:\n    # 3 + ? = 4\n    # ? = 1\n    return 1\nans = solver()", "answer": 2.0}
{"question": "How many more pages of reading homework than math homework did she have?", "passage": "Rachel had to complete 3 pages of math homework and 4 pages of reading homework.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel had to complete 3 pages of math homework and 4 pages of reading homework. How many more pages of reading homework than math homework did she have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    math_homework = 3\n    reading_homework = 4\n    # Now, we can calculate the difference between the two variables:\n    difference = reading_homework - math_homework\n    # Finally, we can return the difference:\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many more pages does the second chapter have than the first chapter?", "passage": "A book has 2 chapters. The first chapter is 37 pages long. The second chapter is 80 pages long.", "executed": 43.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A book has 2 chapters. The first chapter is 37 pages long. The second chapter is 80 pages long. How many more pages does the second chapter have than the first chapter?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    chapter1 = 37\n    chapter2 = 80\n    # Now, we can calculate the difference between the two chapters:\n    difference = chapter2 - chapter1\n    return difference\nans = solver()", "answer": 43.0}
{"question": "How many more movies do you still have to watch?", "passage": "There are 8 different movies and 21 different books in the ' crazy silly school ' series. If you read 7 of the books and watched 4 of the movies.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 8 different movies and 21 different books in the ' crazy silly school ' series. If you read 7 of the books and watched 4 of the movies. How many more movies do you still have to watch?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    books_read = 7\n    movies_watched = 4\n    total_books = 21\n    total_movies = 8\n    # Now, we can calculate the number of books left to read:\n    books_left = total_books - books_read\n    # And the number of movies left to watch:\n    movies_left = total_movies - movies_watched\n    # Now, we can calculate the ratio of books left to read to movies left to watch:\n    ratio = books_left / movies_left\n    # Now, we can calculate the number of movies left to watch if we read all the books:\n    movies_left_if_all_books_read = books_left / ratio\n    # Now, we can calculate the number of movies left to watch if we read all the books and watched all the movies:\n    movies_left_if_all_books_read_and_movies_watched = movies_left_if_all_books_read - movies_watched\n    # Now, we can calculate the number of movies left to watch if we read all the books and watched all the movies and read all the books:\n    movies_left_if_all_books_read_and_movies_watched_and_books_read = movies_left_if_all_books_read_and_movies_watched - books_read\n    # Now, we can calculate the number of movies left to watch if we read all the books and watched all the movies and read all the books and watched\nans = solver()", "answer": 4.0}
{"question": "How many trees did she grow?", "passage": "Haley grew some trees in her backyard. After a typhoon 5 died. If 12 trees were left.", "executed": 17.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Haley grew some trees in her backyard. After a typhoon 5 died. If 12 trees were left. How many trees did she grow?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. The number of trees that died: 5\n    # 2. The number of trees that survived: 12\n    # 3. The number of trees that Haley grew: ?\n    # 4. The number of trees that Haley grew = The number of trees that died + The number of trees that survived\n    # 5. The number of trees that Haley grew = 5 + 12\n    # 6. The number of trees that Haley grew = 17\n    return 17\nans = solver()", "answer": 17.0}
{"question": "How much more does a t-shirt cost than a jersey?", "passage": "The Razorback shop makes $ 192 dollars off each t-shirt and $ 34 off each jersey. During the Arkansas and Texas tech game they sold 157 t-shirts and 19 jerseys.", "executed": -1334.2004693261815, "generated": "\nimport math\nimport numpy as np\n\n# Question: The Razorback shop makes $ 192 dollars off each t-shirt and $ 34 off each jersey. During the Arkansas and Texas tech game they sold 157 t-shirts and 19 jerseys. How much more does a t-shirt cost than a jersey?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    t_shirt_price = 192\n    jersey_price = 34\n    t_shirt_sold = 157\n    jersey_sold = 19\n    # Now, we can calculate the total revenue from t-shirts and jerseys:\n    t_shirt_revenue = t_shirt_price * t_shirt_sold\n    jersey_revenue = jersey_price * jersey_sold\n    # Now, we can calculate the total revenue from t-shirts and jerseys:\n    total_revenue = t_shirt_revenue + jersey_revenue\n    # Now, we can calculate the total cost of t-shirts and jerseys:\n    t_shirt_cost = t_shirt_sold * 10\n    jersey_cost = jersey_sold * 20\n    total_cost = t_shirt_cost + jersey_cost\n    # Now, we can calculate the total profit:\n    total_profit = total_revenue - total_cost\n    # Now, we can calculate the profit per t-shirt and jersey:\n    profit_per_t_shirt = total_profit / t_shirt_sold\n    profit_per_jersey = total_profit / jersey_sold\n    # Now, we can calculate the price difference between t-shirt and jersey:\n    price_difference = profit_per_t_shirt - profit_per_jersey\n    return price_difference\nans = solver()", "answer": 158.0}
{"question": "How many chocolate chip cookies did Helen bake?", "passage": "Helen the hippo and her friends are preparing for thanksgiving at Helen's house. Helen baked 527 chocolate chip cookies and 86 raisin cookies yesterday. And she baked 86 raisin cookies and 554 chocolate chip cookies this morning.", "executed": 909.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Helen the hippo and her friends are preparing for thanksgiving at Helen's house. Helen baked 527 chocolate chip cookies and 86 raisin cookies yesterday. And she baked 86 raisin cookies and 554 chocolate chip cookies this morning. How many chocolate chip cookies did Helen bake?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Helen_baked_yesterday = 527\n    # Helen_baked_this_morning = 554\n    # raisin_baked_yesterday = 86\n    # raisin_baked_this_morning = 86\n    # chocolate_baked_yesterday = Helen_baked_yesterday - raisin_baked_yesterday\n    # chocolate_baked_this_morning = Helen_baked_this_morning - raisin_baked_this_morning\n    # chocolate_baked_total = chocolate_baked_yesterday + chocolate_baked_this_morning\n    chocolate_baked_total = 527 - 86 + 554 - 86\n    return chocolate_baked_total\nans = solver()", "answer": 1081.0}
{"question": "How much did his dad's strawberries weigh now?", "passage": "Marco and his dad went strawberry picking. Together they collected strawberries that weighed 22 pounds. On the way back Marco ' dad found 30 more pounds of strawberries. Marco's strawberries now weighed 36 pounds.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Marco and his dad went strawberry picking. Together they collected strawberries that weighed 22 pounds. On the way back Marco ' dad found 30 more pounds of strawberries. Marco's strawberries now weighed 36 pounds. How much did his dad's strawberries weigh now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marco_strawberries = 22\n    marco_strawberries_after = 36\n    dad_strawberries = 30\n    dad_strawberries_after = ?\n    # We can calculate the answer by using the following equation:\n    dad_strawberries_after = marco_strawberries_after - marco_strawberries + dad_strawberries\n    return dad_strawberries_after\nans = solver()", "answer": 16.0}
{"question": "How many green peaches are in the basket?", "passage": "3 red peaches, and some more green peaches are in the basket. If there are 10 more green peaches than red peaches in the basket.", "executed": 13.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 3 red peaches, and some more green peaches are in the basket. If there are 10 more green peaches than red peaches in the basket. How many green peaches are in the basket?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    red_peaches = 3\n    green_peaches = red_peaches + 10\n    return green_peaches\nans = solver()", "answer": 13.0}
{"question": "How many more trees died in the typhoon than those that survived?", "passage": "After a typhoon, 13 trees in Haley's backyard died. If she had grown 3 trees initially.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: After a typhoon, 13 trees in Haley's backyard died. If she had grown 3 trees initially. How many more trees died in the typhoon than those that survived?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. The number of trees that survived the typhoon: x\n    # 2. The number of trees that died in the typhoon: y\n    # 3. The number of trees that Haley had grown initially: z\n    x = 0\n    y = 0\n    z = 3\n    # We can also define the equation:\n    # x + y = z + 13\n    x = z + 13 - y\n    # We can also define the equation:\n    # y - x = 13\n    y = x + 13\n    # We can also define the equation:\n    # y = 13\n    y = 13\n    # We can also define the equation:\n    # x = z + 13 - y\n    x = z + 13 - y\n    # We can also define the equation:\n    # x = z + 13 - 13\n    x = z + 13 - 13\n    # We can also define the equation:\n    # x = z\n    x = z\n    # We can also define the equation:\n    # x = 3\n    x = 3\n    # We can also define the equation:\n    # y = 13\n    y = 13\n    # We can also define the equation:\n    # y = 13\n    y = 13\n    # We can also define the equation:\n    # y = 13\n    y = 13\n    # We can also define the equation:\n    # y = 13\n    y = 13\n    # We can also define the equation:\n    # y = 13\nans = solver()", "answer": 23.0}
{"question": "How many marbles did he lose?", "passage": "Josh had 9 marbles in his collection. He lost some marbles. If he has 4 marbles now.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Josh had 9 marbles in his collection. He lost some marbles. If he has 4 marbles now. How many marbles did he lose?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marbles_in_collection = 9\n    marbles_lost = ?\n    marbles_now = 4\n    marbles_lost = marbles_in_collection - marbles_now\n    return marbles_lost\nans = solver()", "answer": 5.0}
{"question": "How many more chairs than tables do they have?", "passage": "They decided to hold the party in their backyard. They have 14 chairs for each set of table. If they have 9 sets of tables.", "executed": 126.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: They decided to hold the party in their backyard. They have 14 chairs for each set of table. If they have 9 sets of tables. How many more chairs than tables do they have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    chairs = 14\n    tables = 9\n    # Now, we can calculate the answer:\n    answer = chairs * tables\n    return answer\nans = solver()", "answer": 117.0}
{"question": "How many oranges do they harvest per day if each sack contains 28 oranges?", "passage": "He then went to see the oranges being harvested. He found out that they harvest 66 sacks per day.", "executed": 1848.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He then went to see the oranges being harvested. He found out that they harvest 66 sacks per day. How many oranges do they harvest per day if each sack contains 28 oranges?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sacks_per_day = 66\n    oranges_per_sack = 28\n    # Now, we can calculate the total number of oranges per day:\n    oranges_per_day = sacks_per_day * oranges_per_sack\n    return oranges_per_day\nans = solver()", "answer": 1848.0}
{"question": "How many tickets did Dave win at the arcade?", "passage": "At the arcade Dave had won some tickets. He used 12 tickets to buy some toys. If he still has 14 tickets left.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the arcade Dave had won some tickets. He used 12 tickets to buy some toys. If he still has 14 tickets left. How many tickets did Dave win at the arcade?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. Dave won some tickets\n    # 2. Dave used 12 tickets to buy some toys\n    # 3. Dave still has 14 tickets left\n    # 4. How many tickets did Dave win at the arcade?\n    # We can define the variables as:\n    # 1. Dave won x tickets\n    # 2. Dave used 12 tickets to buy some toys\n    # 3. Dave still has 14 tickets left\n    # 4. How many tickets did Dave win at the arcade?\n    # We can define the variables as:\n    # 1. x tickets\n    # 2. 12 tickets\n    # 3. 14 tickets\n    # 4. x tickets\n    # We can define the variables as:\n    # 1. x\n    # 2. 12\n    # 3. 14\n    # 4. x\n    # We can define the variables as:\n    # 1. x\n    # 2. 12\n    # 3. 14\n    # 4. x\n    # We can define the variables as:\n    # 1. x\n    # 2. 12\n    # 3. 14\n    # 4. x\n    # We can define the variables as:\n    # 1. x\n    # 2. 12\n    # 3. 14\n    # 4. x\n    # We can define the variables as:\n    # 1. x\n    # 2. 12\n    # 3. 14\n    # 4. x\n    # We can define the variables as:\n    # 1. x\n    # 2. 12\n    # 3\nans = solver()", "answer": 26.0}
{"question": "How many total shelves did his room have?", "passage": "Adam could fit 10 action figures on each shelf in his room. His room has could hold 8 action figures.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Adam could fit 10 action figures on each shelf in his room. His room has could hold 8 action figures. How many total shelves did his room have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # shelf_capacity = 10\n    # room_capacity = 8\n    # total_shelves = ?\n    shelf_capacity = 10\n    room_capacity = 8\n    total_shelves = math.ceil(room_capacity / shelf_capacity)\n    return total_shelves\nans = solver()", "answer": 80.0}
{"question": "How much did his dad's strawberries weigh?", "passage": "Marco and his dad went strawberry picking. Together they collected strawberries that weighed 24 pounds. On the way back Marco lost 9 pounds of strawberries. Marco's strawberries now weighed 3 pounds.", "executed": 12.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Marco and his dad went strawberry picking. Together they collected strawberries that weighed 24 pounds. On the way back Marco lost 9 pounds of strawberries. Marco's strawberries now weighed 3 pounds. How much did his dad's strawberries weigh?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marco_strawberries = 24\n    marco_strawberries_lost = 9\n    marco_strawberries_left = 3\n    dad_strawberries = 0\n    # Now we can use the information to derive the answer:\n    dad_strawberries = marco_strawberries - marco_strawberries_lost - marco_strawberries_left\n    return dad_strawberries\nans = solver()", "answer": 12.0}
{"question": "How many more cups of sugar does she need to add?", "passage": "Mary is baking a cake. The recipe calls for 12 cups of flour and 13 cups of sugar. She already put in 2 cups of sugar.", "executed": 11.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 12 cups of flour and 13 cups of sugar. She already put in 2 cups of sugar. How many more cups of sugar does she need to add?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    flour = 12\n    sugar = 13\n    sugar_added = 2\n    sugar_needed = sugar - sugar_added\n    return sugar_needed\nans = solver()", "answer": 11.0}
{"question": "How many more bird families flew away to asia than those that flew away to africa?", "passage": "Winter is almost here and most animals are migrating to warmer countries. There are 38 bird families living near the mountain. If 47 bird families flew away to africa and 94 bird families flew away to asia.", "executed": 47.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Winter is almost here and most animals are migrating to warmer countries. There are 38 bird families living near the mountain. If 47 bird families flew away to africa and 94 bird families flew away to asia. How many more bird families flew away to asia than those that flew away to africa?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bird_families_near_mountain = 38\n    bird_families_to_africa = 47\n    bird_families_to_asia = 94\n    # Now, we can calculate the number of bird families that flew away to asia than those that flew away to africa\n    bird_families_to_asia_than_africa = bird_families_to_asia - bird_families_to_africa\n    return bird_families_to_asia_than_africa\nans = solver()", "answer": 47.0}
{"question": "How many more peaches does Steven have than Jill?", "passage": "Jake has 9 fewer peaches than Steven and 18 more peaches than Jill. Steven has 16 peaches.", "executed": 18.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jake has 9 fewer peaches than Steven and 18 more peaches than Jill. Steven has 16 peaches. How many more peaches does Steven have than Jill?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    jake = 0\n    steven = 16\n    jill = 0\n    # Now, we can use the given information to derive the answer:\n    jake = steven - 9\n    jill = steven - 18\n    return steven - jill\nans = solver()", "answer": 27.0}
{"question": "How many more push-ups did Zachary do than David?", "passage": "Zachary did 51 push-ups and David did 44 push-ups in gym class today.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Zachary did 51 push-ups and David did 44 push-ups in gym class today. How many more push-ups did Zachary do than David?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    zachary_push_ups = 51\n    david_push_ups = 44\n    # Now, we can calculate the difference between the two variables:\n    difference = zachary_push_ups - david_push_ups\n    return difference\nans = solver()", "answer": 7.0}
{"question": "How many people can each seat hold?", "passage": "16 people can ride the Ferris wheel in paradise park at the same time. If the Ferris wheel has 4 seats.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 16 people can ride the Ferris wheel in paradise park at the same time. If the Ferris wheel has 4 seats. How many people can each seat hold?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    people = 16\n    seats = 4\n    # Now we can calculate the answer:\n    answer = people / seats\n    return answer\nans = solver()", "answer": 4.0}
{"question": "How many more cups of sugar than cups of salt does she need to add now?", "passage": "Mary is baking a cake. The recipe calls for 6 cups of flour 8 cups of sugar and 7 cups of salt. She already put in 5 cups of flour.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 6 cups of flour 8 cups of sugar and 7 cups of salt. She already put in 5 cups of flour. How many more cups of sugar than cups of salt does she need to add now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    flour = 6\n    sugar = 8\n    salt = 7\n    flour_added = 5\n    # Now, we can calculate the amount of sugar and salt that Mary needs to add:\n    sugar_added = sugar - (flour - flour_added)\n    salt_added = salt - (flour - flour_added)\n    # Finally, we can calculate the difference between the amount of sugar and salt that Mary needs to add:\n    sugar_salt_difference = sugar_added - salt_added\n    return sugar_salt_difference\nans = solver()", "answer": 1.0}
{"question": "How many goldfish disappeared?", "passage": "Paige raised 16 goldfish and 71 catfish in the pond but stray cats loved eating them. Now she has 2 left.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paige raised 16 goldfish and 71 catfish in the pond but stray cats loved eating them. Now she has 2 left. How many goldfish disappeared?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    goldfish = 16\n    catfish = 71\n    left = 2\n    # Now we can write the equation:\n    goldfish + catfish - left = disappeared\n    # We can solve the equation:\n    disappeared = goldfish + catfish - left\n    return disappeared\nans = solver()", "answer": 14.0}
{"question": "How many unripe apples does the tree have now?", "passage": "Rachel picked 7 ripe apples from her tree. Now the tree has 5 apples still on it. If 3 of those are ripe and the rest are unripe.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel picked 7 ripe apples from her tree. Now the tree has 5 apples still on it. If 3 of those are ripe and the rest are unripe. How many unripe apples does the tree have now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    ripe_apples_picked = 7\n    ripe_apples_left = 5\n    unripe_apples_left = 3\n    unripe_apples_picked = 0\n    unripe_apples_left = 0\n    ripe_apples_left = 0\n    ripe_apples_picked = 0\n    ripe_apples_left = 0\n    ripe_apples_picked = 0\n    ripe_apples_left = 0\n    ripe_apples_picked = 0\n    ripe_apples_left = 0\n    ripe_apples_picked = 0\n    ripe_apples_left = 0\n    ripe_apples_picked = 0\n    ripe_apples_left = 0\n    ripe_apples_picked = 0\n    ripe_apples_left = 0\n    ripe_apples_picked = 0\n    ripe_apples_left = 0\n    ripe_apples_picked = 0\n    ripe_apples_left = 0\n    ripe_apples_picked = 0\n    ripe_apples_left = 0\n    ripe_apples_picked = 0\n    ripe_apples_left = 0\n    ripe_apples_picked = 0\n    ripe_apples_left = 0\n    ripe_apples_picked = 0\n    ripe_apples_left = 0\n    ripe_apples_picked = 0\n    ripe_apples_left = 0\n    ripe_apples_picked = 0\n    ripe_\nans = solver()", "answer": 2.0}
{"question": "How many push-ups did Zachary and David do altogether?", "passage": "Zachary did 44 push-ups in gym class today. David did 58 more push-ups than zachary.", "executed": 146.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Zachary did 44 push-ups in gym class today. David did 58 more push-ups than zachary. How many push-ups did Zachary and David do altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    zachary = 44\n    david = zachary + 58\n    total = zachary + david\n    return total\nans = solver()", "answer": 146.0}
{"question": "How much money does he earn each week?", "passage": "If Lewis earns a total of $ 460 during 5 weeks of harvest.", "executed": 92.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: If Lewis earns a total of $ 460 during 5 weeks of harvest. How much money does he earn each week?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    total_money = 460\n    weeks = 5\n    # Now, we can calculate the money earned each week:\n    money_each_week = total_money / weeks\n    return money_each_week\nans = solver()", "answer": 92.0}
{"question": "How many more students suggested bacon than those that suggested tomatoes?", "passage": "Because of the decision Sofia asked the students to suggest specific types of food. If 228 students suggested adding mashed potatoes 337 suggested adding bacon to the menu and 23 suggested adding tomatoes.", "executed": 314.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Because of the decision Sofia asked the students to suggest specific types of food. If 228 students suggested adding mashed potatoes 337 suggested adding bacon to the menu and 23 suggested adding tomatoes. How many more students suggested bacon than those that suggested tomatoes?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. Mashed potatoes: m\n    # 2. Bacon: b\n    # 3. Tomatoes: t\n    # 4. Total number of students: n\n    # 5. The number of students who suggested adding bacon than those that suggested tomatoes: x\n    # Then we can get the following equations:\n    # 1. m + b + t = n\n    # 2. b - t = x\n    # 3. m = 228\n    # 4. b = 337\n    # 5. t = 23\n    # 6. n = 228 + 337 + 23 = 588\n    # Solve the equations, we can get the answer: x = 314\n    return 314\nans = solver()", "answer": 314.0}
{"question": "How much did Edward spend on books and pens?", "passage": "Edward spent $ 4 to buy books and $ 3 to buy pens. Now he has $ 12.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Edward spent $ 4 to buy books and $ 3 to buy pens. Now he has $ 12. How much did Edward spend on books and pens?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    books = 4\n    pens = 3\n    money = 12\n    # Now we can calculate the answer:\n    answer = books + pens\n    return answer\nans = solver()", "answer": 7.0}
{"question": "How much did Edward have before he spent his money?", "passage": "Edward spent $ 17. Then he received $ 10 from his friend. Now he has $ 7.", "executed": 24.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Edward spent $ 17. Then he received $ 10 from his friend. Now he has $ 7. How much did Edward have before he spent his money?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Edward's money before he spent his money: x\n    # Edward's money after he spent his money: y\n    # Edward's money after he received his money: z\n    # Then we can get the equations:\n    # x - y = 17\n    # y + 10 = z\n    # z = 7\n    # Solve the equations, we can get the answer: x = 24\n    return 24\nans = solver()", "answer": 14.0}
{"question": "How many more kids did she play with on monday than on tuesday?", "passage": "Julia played tag with 9 kids on monday, 7 kids on tuesday and 96 kids on wednesday.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Julia played tag with 9 kids on monday, 7 kids on tuesday and 96 kids on wednesday. How many more kids did she play with on monday than on tuesday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 9\n    tuesday = 7\n    wednesday = 96\n    # Now, we can calculate the difference between monday and tuesday:\n    difference = monday - tuesday\n    return difference\nans = solver()", "answer": 2.0}
{"question": "How many boys are there in that school?", "passage": "In a school there are 402 more girls than boys. If there are 739 girls.", "executed": 337.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In a school there are 402 more girls than boys. If there are 739 girls. How many boys are there in that school?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    girls = 739\n    boys = 0\n    diff = 402\n    boys = girls - diff\n    return boys\nans = solver()", "answer": 337.0}
{"question": "How much money did she still have?", "passage": "For Gwen's birthday she received 2 dollars from her mom. Her dad gave her 4 more dollars. If she spent 3 dollars.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For Gwen's birthday she received 2 dollars from her mom. Her dad gave her 4 more dollars. If she spent 3 dollars. How much money did she still have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    mom = 2\n    dad = 4\n    spent = 3\n    # Now we can calculate the answer:\n    answer = mom + dad - spent\n    return answer\nans = solver()", "answer": 3.0}
{"question": "How many red and green peaches are in the basket?", "passage": "6 red peaches, 90 yellow peaches and 16 green peaches are in the basket.", "executed": 22.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 6 red peaches, 90 yellow peaches and 16 green peaches are in the basket. How many red and green peaches are in the basket?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    red = 6\n    yellow = 90\n    green = 16\n    total = red + yellow + green\n    print(\"Total peaches: \", total)\n    print(\"Red peaches: \", red)\n    print(\"Yellow peaches: \", yellow)\n    print(\"Green peaches: \", green)\n    print(\"Red and green peaches: \", red + green)\n    return red + green\nans = solver()", "answer": 22.0}
{"question": "How many more blocks did he use to build the tower than he did to build the house?", "passage": "Randy has 37 blocks. He uses 33 blocks to build a tower and 13 blocks to build a house.", "executed": 20.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Randy has 37 blocks. He uses 33 blocks to build a tower and 13 blocks to build a house. How many more blocks did he use to build the tower than he did to build the house?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    tower = 33\n    house = 13\n    # Now, we can calculate the difference between the tower and the house\n    difference = tower - house\n    return difference\nans = solver()", "answer": 20.0}
{"question": "How much money did they make from selling the jerseys?", "passage": "The Razorback shop makes $ 76 dollars off each jersey and $ 204 off each t-shirt. During the Arkansas and Texas tech game they sold 158 t-shirts and 2 jerseys.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: The Razorback shop makes $ 76 dollars off each jersey and $ 204 off each t-shirt. During the Arkansas and Texas tech game they sold 158 t-shirts and 2 jerseys. How much money did they make from selling the jerseys?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of jerseys sold\n    # y = number of t-shirts sold\n    # We can also define the constants:\n    # c1 = $ 76 dollars off each jersey\n    # c2 = $ 204 dollars off each t-shirt\n    # We can also define the equation:\n    # c1 * x + c2 * y = $ 158 t-shirts\n    # We can also define the equation:\n    # c1 * x + c2 * y = $ 2 jerseys\n    # We can also define the equation:\n    # c1 * x + c2 * y = $ 158 t-shirts\n    # We can also define the equation:\n    # c1 * x + c2 * y = $ 2 jerseys\n    # We can also define the equation:\n    # c1 * x + c2 * y = $ 158 t-shirts\n    # We can also define the equation:\n    # c1 * x + c2 * y = $ 2 jerseys\n    # We can also define the equation:\n    # c1 * x + c2 * y = $ 158 t-shirts\n    # We can also define the equation:\n    # c1 * x + c2 * y = $ 2 jerseys\n    # We can also define the equation:\n    # c1 * x + c2 * y = $ 158 t-shirts\n    # We can also define the equation:\n    # c1 * x + c2 * y = $ 2 jerseys\n    # We can also define the equation:\n    # c\nans = solver()", "answer": 152.0}
{"question": "How many more cakes did baker sell than those he bought?", "passage": "Baker made 8 cakes. He bought 139 new cakes and sold 145 cakes.", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 8 cakes. He bought 139 new cakes and sold 145 cakes. How many more cakes did baker sell than those he bought?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   cakes_bought = 139\n    #   cakes_sold = 145\n    #   cakes_made = 8\n    cakes_bought = 139\n    cakes_sold = 145\n    cakes_made = 8\n    # Now, we can calculate the number of cakes baker sold than those he bought:\n    #   cakes_sold - cakes_bought = ?\n    cakes_sold_minus_cakes_bought = cakes_sold - cakes_bought\n    # Finally, we can return the answer:\n    return cakes_sold_minus_cakes_bought\nans = solver()", "answer": 6.0}
{"question": "How many more letters did Jack receive in the morning than in the afternoon?", "passage": "Jack received 6 emails and 8 letters in the morning. He then received 2 emails and 7 letters in the afternoon.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jack received 6 emails and 8 letters in the morning. He then received 2 emails and 7 letters in the afternoon. How many more letters did Jack receive in the morning than in the afternoon?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning_emails = 6\n    morning_letters = 8\n    afternoon_emails = 2\n    afternoon_letters = 7\n    # Now, we can calculate the difference between the morning and afternoon letters:\n    difference = morning_letters - afternoon_letters\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many more apples than peaches does Steven have?", "passage": "Jake has 3 fewer peaches and 10 more apples than Steven. Steven has 12 peaches and 15 apples.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jake has 3 fewer peaches and 10 more apples than Steven. Steven has 12 peaches and 15 apples. How many more apples than peaches does Steven have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    jake_peaches = 0\n    jake_apples = 0\n    steven_peaches = 12\n    steven_apples = 15\n    # Now, we can use the given information to derive the answer:\n    jake_peaches = steven_peaches - 3\n    jake_apples = steven_apples + 10\n    steven_apples_more_than_peaches = steven_apples - steven_peaches\n    return steven_apples_more_than_peaches\nans = solver()", "answer": 3.0}
{"question": "How many more pages of math homework than reading homework did she have?", "passage": "Rachel had to complete 5 pages of math homework and 2 pages of reading homework.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel had to complete 5 pages of math homework and 2 pages of reading homework. How many more pages of math homework than reading homework did she have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    math_homework = 5\n    reading_homework = 2\n    # Now, we can calculate the difference between the two variables:\n    difference = math_homework - reading_homework\n    # Finally, we can return the difference:\n    return difference\nans = solver()", "answer": 3.0}
{"question": "How many pages did he read per day?", "passage": "Frank was reading through his favorite book. The book had 41 chapters, each with the same number of pages. It has a total of 450 pages. It took Frank 30 days to finish the book.", "executed": 15.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank was reading through his favorite book. The book had 41 chapters, each with the same number of pages. It has a total of 450 pages. It took Frank 30 days to finish the book. How many pages did he read per day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # number of chapters = 41\n    # number of pages per chapter = ?\n    # total number of pages = 450\n    # number of days to finish the book = 30\n    # number of pages per day = ?\n    # We can use the following equations to solve the problem:\n    # number of pages per chapter * number of chapters = total number of pages\n    # number of pages per day * number of days = total number of pages\n    # We can solve the above equations to get the answer:\n    number_of_pages_per_chapter = 450 / 41\n    number_of_pages_per_day = 450 / 30\n    return number_of_pages_per_day\nans = solver()", "answer": 15.0}
{"question": "How much longer is her room than it is wide?", "passage": "Jesse's room is 19 feet wide and 20 feet long.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jesse's room is 19 feet wide and 20 feet long. How much longer is her room than it is wide?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    width = 19\n    length = 20\n    # Now, we can calculate the difference between length and width:\n    difference = length - width\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many pages did he read per day?", "passage": "Frank was reading through some books. Each book had 249 pages and it took Frank 3 days to finish each book.", "executed": 83.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank was reading through some books. Each book had 249 pages and it took Frank 3 days to finish each book. How many pages did he read per day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    book_pages = 249\n    days = 3\n    pages_per_day = book_pages / days\n    return pages_per_day\nans = solver()", "answer": 83.0}
{"question": "How many more erasers than crayons did he have left?", "passage": "Paul got a box of 601 crayons and 406 erasers for his birthday. At the end of the school year he only had 336 crayons left while not having lost a single eraser.", "executed": 141.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul got a box of 601 crayons and 406 erasers for his birthday. At the end of the school year he only had 336 crayons left while not having lost a single eraser. How many more erasers than crayons did he have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    crayons = 601\n    erasers = 406\n    crayons_left = 336\n    erasers_left = erasers - crayons + crayons_left\n    return erasers_left\nans = solver()", "answer": 70.0}
{"question": "How much did they make per day in the first 20 days at the carnival?", "passage": "The ring toss game at the carnival made 120 dollars in the first 20 days and 66 dollars in the remaining 16 days.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: The ring toss game at the carnival made 120 dollars in the first 20 days and 66 dollars in the remaining 16 days. How much did they make per day in the first 20 days at the carnival?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = the amount of money made per day in the first 20 days\n    # y = the amount of money made per day in the remaining 16 days\n    # We can also define the constants:\n    # a = 120 dollars in the first 20 days\n    # b = 66 dollars in the remaining 16 days\n    # We can then write the equations:\n    # a = 20x\n    # b = 16y\n    # We can then solve for x and y:\n    x = a / 20\n    y = b / 16\n    return x\nans = solver()", "answer": 6.0}
{"question": "How many more cups of sugar than cups of flour does she need to add now?", "passage": "Mary is baking a cake. The recipe calls for 5 cups of sugar and 14 cups of flour. She already put in 11 cups of flour.", "executed": -1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 5 cups of sugar and 14 cups of flour. She already put in 11 cups of flour. How many more cups of sugar than cups of flour does she need to add now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sugar = 5\n    flour = 14\n    flour_added = 11\n    # Now, we need to calculate the amount of flour that is left to be added\n    flour_left = flour - flour_added\n    # Now, we need to calculate the amount of sugar that is left to be added\n    sugar_left = sugar - flour_left\n    # Now, we need to calculate the difference between the amount of sugar and flour that is left to be added\n    difference = sugar_left - flour_left\n    return difference\nans = solver()", "answer": 2.0}
{"question": "How many beads did Emily have?", "passage": "Emily is making bead necklaces for her 44 friends. She made 26 necklaces and each necklace takes 2 beads.", "executed": 52.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Emily is making bead necklaces for her 44 friends. She made 26 necklaces and each necklace takes 2 beads. How many beads did Emily have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. Emily's friends: friends = 44\n    # 2. Emily's necklaces: necklaces = 26\n    # 3. Beads per necklace: beads_per_necklace = 2\n    friends = 44\n    necklaces = 26\n    beads_per_necklace = 2\n    # Now, we can calculate the total beads:\n    total_beads = necklaces * beads_per_necklace\n    return total_beads\nans = solver()", "answer": 52.0}
{"question": "How many games did she play?", "passage": "Melissa scored a total of 21 points playing some games. Is she scored 7 points in each game.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Melissa scored a total of 21 points playing some games. Is she scored 7 points in each game. How many games did she play?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    total_points = 21\n    points_per_game = 7\n    number_of_games = 0\n    # Now, we can use the variables to calculate the answer\n    number_of_games = total_points / points_per_game\n    return number_of_games\nans = solver()", "answer": 3.0}
{"question": "How many more apples does Adam have than Jackie?", "passage": "Adam has 10 apples. Jackie has 2 apples.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Adam has 10 apples. Jackie has 2 apples. How many more apples does Adam have than Jackie?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    adam_apples = 10\n    jackie_apples = 2\n    # Now, we can calculate the difference between the number of apples Adam has and the number of apples Jackie has\n    difference = adam_apples - jackie_apples\n    return difference\nans = solver()", "answer": 8.0}
{"question": "How many days would the soda bottles last?", "passage": "Debby bought 200 water bottles and 256 soda bottles when they were on sale. If she drank 312 water bottles and 4 soda bottles a day.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Debby bought 200 water bottles and 256 soda bottles when they were on sale. If she drank 312 water bottles and 4 soda bottles a day. How many days would the soda bottles last?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    water_bottles = 200\n    soda_bottles = 256\n    water_consumption = 312\n    soda_consumption = 4\n    days = 0\n    while water_bottles > 0 and soda_bottles > 0:\n        water_bottles -= water_consumption\n        soda_bottles -= soda_consumption\n        days += 1\n    return days\nans = solver()", "answer": 64.0}
{"question": "How many more books than action figures were on his shelf?", "passage": "Jerry had 5 action figures and 2 books on a shelf in his room. Later he added 9 more books to the shelf.", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jerry had 5 action figures and 2 books on a shelf in his room. Later he added 9 more books to the shelf. How many more books than action figures were on his shelf?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    action_figures = 5\n    books = 2\n    more_books = 9\n    # Now, we can calculate the answer:\n    answer = books + more_books - action_figures\n    return answer\nans = solver()", "answer": 6.0}
{"question": "How long is his hair now?", "passage": "Robin's hair was 19 inches long. If he grew 18 more inches.", "executed": 37.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Robin's hair was 19 inches long. If he grew 18 more inches. How long is his hair now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    hair_length = 19\n    hair_growth = 18\n    hair_length_now = hair_length + hair_growth\n    return hair_length_now\nans = solver()", "answer": 37.0}
{"question": "How many bottle caps did danny have at first?", "passage": "Danny collects bottle caps and wrappers. He found 82 wrappers and 29 bottle caps at the park. Now he has 42 bottle caps and 61 wrappers in his collection.", "executed": -11.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Danny collects bottle caps and wrappers. He found 82 wrappers and 29 bottle caps at the park. Now he has 42 bottle caps and 61 wrappers in his collection. How many bottle caps did danny have at first?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # wrappers_at_first = ?\n    # caps_at_first = ?\n    # wrappers_at_park = 82\n    # caps_at_park = 29\n    # wrappers_at_end = 61\n    # caps_at_end = 42\n    # caps_at_first = caps_at_end + caps_at_park - wrappers_at_park\n    caps_at_first = 42 + 29 - 82\n    return caps_at_first\nans = solver()", "answer": 13.0}
{"question": "How many cookies does each bag have?", "passage": "If you had 4 bags with equal number of cookies and 36 cookies in total.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: If you had 4 bags with equal number of cookies and 36 cookies in total. How many cookies does each bag have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # bag1, bag2, bag3, bag4, total_cookies\n    bag1 = 0\n    bag2 = 0\n    bag3 = 0\n    bag4 = 0\n    total_cookies = 36\n    # We know that there are 4 bags, and each bag has the same number of cookies.\n    # So we can define the variable:\n    # cookies_per_bag\n    cookies_per_bag = 0\n    # We know that there are 36 cookies in total.\n    # So we can define the variable:\n    # total_cookies\n    total_cookies = 36\n    # We know that there are 4 bags, and each bag has the same number of cookies.\n    # So we can define the variable:\n    # cookies_per_bag\n    cookies_per_bag = total_cookies / 4\n    # We know that there are 4 bags, and each bag has the same number of cookies.\n    # So we can define the variable:\n    # cookies_per_bag\n    cookies_per_bag = total_cookies / 4\n    # We know that there are 4 bags, and each bag has the same number of cookies.\n    # So we can define the variable:\n    # cookies_per_bag\n    cookies_per_bag = total_cookies / 4\n    # We know that there are 4 bags, and each bag has the same number of cookies.\n    # So we can define the variable:\n    # cookies_per_bag\n    cookies_per\nans = solver()", "answer": 9.0}
{"question": "How many packages will she have?", "passage": "White t - shirts can be purchased in packages of 13. If mom buys 39 white t - shirts.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: White t - shirts can be purchased in packages of 13. If mom buys 39 white t - shirts. How many packages will she have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. number of packages: n\n    # 2. number of white t-shirts: m\n    n = 0\n    m = 39\n    # We can also define the relationship between n and m:\n    # m = n * 13\n    # Then we can solve the equation:\n    n = m / 13\n    return n\nans = solver()", "answer": 3.0}
{"question": "How many pupils are there in the school now?", "passage": "In a school there are 706 girls and 222 boys. 418 more girls joined the school.", "executed": 1346.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In a school there are 706 girls and 222 boys. 418 more girls joined the school. How many pupils are there in the school now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    girls = 706\n    boys = 222\n    girls_joined = 418\n    # Now, we can calculate the total number of pupils in the school before the girls joined:\n    total_pupils_before = girls + boys\n    # Now, we can calculate the total number of pupils in the school after the girls joined:\n    total_pupils_after = total_pupils_before + girls_joined\n    return total_pupils_after\nans = solver()", "answer": 1346.0}
{"question": "How many nails does John need for the house wall?", "passage": "For the walls of the house John would use large planks of wood. Each plank needs 2 pieces of nails to be secured and he would use 16 planks.", "executed": 32.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For the walls of the house John would use large planks of wood. Each plank needs 2 pieces of nails to be secured and he would use 16 planks. How many nails does John need for the house wall?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    plank = 16\n    nail_per_plank = 2\n    total_nail = plank * nail_per_plank\n    return total_nail\nans = solver()", "answer": 32.0}
{"question": "How many more tickets did Dave use to buy clothes than he did to buy toys?", "passage": "At the arcade Dave had won 13 tickets. If he used 8 to buy some toys and 18 more to buy some clothes.", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the arcade Dave had won 13 tickets. If he used 8 to buy some toys and 18 more to buy some clothes. How many more tickets did Dave use to buy clothes than he did to buy toys?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    tickets_won = 13\n    tickets_used_for_toys = 8\n    tickets_used_for_clothes = 18\n    # Now we can calculate the difference between the tickets used for clothes and the tickets used for toys\n    tickets_used_for_clothes_minus_tickets_used_for_toys = tickets_used_for_clothes - tickets_used_for_toys\n    return tickets_used_for_clothes_minus_tickets_used_for_toys\nans = solver()", "answer": 10.0}
{"question": "How much more did his dad's strawberries weigh than his?", "passage": "Marco and his dad went strawberry picking. Together their strawberries weighed 35 pounds. Marco's strawberries weighed 13 pounds.", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Marco and his dad went strawberry picking. Together their strawberries weighed 35 pounds. Marco's strawberries weighed 13 pounds. How much more did his dad's strawberries weigh than his?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marco_strawberries = 13\n    marco_dad_strawberries = 35 - marco_strawberries\n    marco_dad_strawberries_more = marco_dad_strawberries - marco_strawberries\n    return marco_dad_strawberries_more\nans = solver()", "answer": 9.0}
{"question": "How many minutes did the machine work in all?", "passage": "An industrial machine can make 3 shirts a minute. It made 4 shirts yesterday and 8 shirts today.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: An industrial machine can make 3 shirts a minute. It made 4 shirts yesterday and 8 shirts today. How many minutes did the machine work in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    shirts_per_minute = 3\n    shirts_yesterday = 4\n    shirts_today = 8\n    # Now, we can calculate the time the machine worked yesterday and today:\n    time_yesterday = shirts_yesterday / shirts_per_minute\n    time_today = shirts_today / shirts_per_minute\n    # Finally, we can calculate the total time the machine worked:\n    time_total = time_yesterday + time_today\n    return time_total\nans = solver()", "answer": 4.0}
{"question": "How many more red peaches than yellow peaches are in the basket?", "passage": "19 red peaches, 11 yellow peaches and 12 green peaches are in the basket.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 19 red peaches, 11 yellow peaches and 12 green peaches are in the basket. How many more red peaches than yellow peaches are in the basket?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    red_peaches = 19\n    yellow_peaches = 11\n    green_peaches = 12\n    # Now, we can calculate the difference between red peaches and yellow peaches\n    difference = red_peaches - yellow_peaches\n    return difference\nans = solver()", "answer": 8.0}
{"question": "How much more money did she receive from her mom than she did from her dad?", "passage": "For Gwen's birthday she received 8 dollars from her mom. Her dad gave her 5 more dollars. If she spent 4 dollars.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For Gwen's birthday she received 8 dollars from her mom. Her dad gave her 5 more dollars. If she spent 4 dollars. How much more money did she receive from her mom than she did from her dad?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    mom = 8\n    dad = 5\n    spent = 4\n    # Now, we can calculate the total amount of money she received:\n    total = mom + dad\n    # And then, we can calculate the amount of money she has left:\n    left = total - spent\n    # Finally, we can calculate the difference between the amount of money she received from her mom and the amount of money she received from her dad:\n    difference = mom - dad\n    return difference\nans = solver()", "answer": 3.0}
{"question": "How much did ring toss game make per day?", "passage": "The ring toss game at the carnival made the same amount of money each day. In total in 30 days they earned 420 dollars. Together with game they earned 22 dollars.", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The ring toss game at the carnival made the same amount of money each day. In total in 30 days they earned 420 dollars. Together with game they earned 22 dollars. How much did ring toss game make per day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. The total amount of money earned in 30 days\n    total_amount = 420\n    # 2. The total amount of money earned in 30 days with the ring toss game\n    total_amount_with_game = 22\n    # 3. The amount of money earned per day with the ring toss game\n    amount_per_day = total_amount_with_game / 30\n    # 4. The amount of money earned per day without the ring toss game\n    amount_per_day_without_game = (total_amount - total_amount_with_game) / 30\n    # 5. The amount of money earned per day with the ring toss game\n    amount_per_day_with_game = amount_per_day_without_game + amount_per_day\n    return amount_per_day_with_game\nans = solver()", "answer": 14.0}
{"question": "How many apps did he delete?", "passage": "Dave had 16 apps and 77 files on his phone. After deleting some apps and files he had 5 apps and 23 files left.", "executed": 11.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dave had 16 apps and 77 files on his phone. After deleting some apps and files he had 5 apps and 23 files left. How many apps did he delete?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    apps_before = 16\n    files_before = 77\n    apps_after = 5\n    files_after = 23\n    apps_deleted = apps_before - apps_after\n    files_deleted = files_before - files_after\n    return apps_deleted\nans = solver()", "answer": 11.0}
{"question": "How many more sweet cookies than salty cookies did he eat?", "passage": "Paco had 39 sweet cookies and 6 salty cookies. He ate 23 salty cookies and 32 sweet cookies.", "executed": -15.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paco had 39 sweet cookies and 6 salty cookies. He ate 23 salty cookies and 32 sweet cookies. How many more sweet cookies than salty cookies did he eat?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sweet_cookies = 39\n    salty_cookies = 6\n    eaten_sweet_cookies = 32\n    eaten_salty_cookies = 23\n    # Now, we can calculate the answer:\n    sweet_cookies_left = sweet_cookies - eaten_sweet_cookies\n    salty_cookies_left = salty_cookies - eaten_salty_cookies\n    sweet_cookies_eaten = eaten_sweet_cookies - sweet_cookies_left\n    salty_cookies_eaten = eaten_salty_cookies - salty_cookies_left\n    sweet_cookies_eaten_more_than_salty_cookies = sweet_cookies_eaten - salty_cookies_eaten\n    return sweet_cookies_eaten_more_than_salty_cookies\nans = solver()", "answer": 9.0}
{"question": "How many more trees survived the typhoon than those that died?", "passage": "Haley grew 13 trees in her backyard. After a typhoon 6 died.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Haley grew 13 trees in her backyard. After a typhoon 6 died. How many more trees survived the typhoon than those that died?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    total_trees = 13\n    dead_trees = 6\n    survived_trees = total_trees - dead_trees\n    return survived_trees\nans = solver()", "answer": 1.0}
{"question": "How many more kids did she play with on monday than on tuesday?", "passage": "Julia played tag with 18 kids on monday. She played tag with 10 kids on tuesday.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Julia played tag with 18 kids on monday. She played tag with 10 kids on tuesday. How many more kids did she play with on monday than on tuesday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 18\n    tuesday = 10\n    # Now, we can calculate the difference between monday and tuesday\n    difference = monday - tuesday\n    return difference\nans = solver()", "answer": 8.0}
{"question": "How many sony games does she need to give away so that she will have 31 sony games left?", "passage": "Kelly has 46 nintendo games and 132 sony games.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Kelly has 46 nintendo games and 132 sony games. How many sony games does she need to give away so that she will have 31 sony games left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    nintendo_games = 46\n    sony_games = 132\n    sony_games_left = 31\n    # We can also define the equation:\n    sony_games_left = sony_games - sony_games_given_away\n    # We can also define the unknown variable:\n    sony_games_given_away = sony_games - sony_games_left\n    # We can also define the answer:\n    answer = sony_games_given_away\n    return answer\nans = solver()", "answer": 101.0}
{"question": "How many more green peaches than red peaches are in the basket?", "passage": "5 red peaches and 11 green peaches are in the basket.", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 5 red peaches and 11 green peaches are in the basket. How many more green peaches than red peaches are in the basket?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    red_peaches = 5\n    green_peaches = 11\n    # Now, we can calculate the difference between the number of green peaches and red peaches\n    difference = green_peaches - red_peaches\n    return difference\nans = solver()", "answer": 6.0}
{"question": "How many cards did Nell have initially?", "passage": "Nell collects baseball cards. She gave 301 of her cards to Jeff and now has 154 cards left..", "executed": 455.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Nell collects baseball cards. She gave 301 of her cards to Jeff and now has 154 cards left.. How many cards did Nell have initially?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Nell's initial cards: x\n    # Nell's cards after giving to Jeff: x - 301\n    # Nell's cards left: 154\n    # We can derive the equation: x - 301 = 154\n    # Solve the equation: x = 455\n    return 455\nans = solver()", "answer": 455.0}
{"question": "How many kids did she play with on monday and tuesday?", "passage": "Julia played tag with 15 kids on monday, 18 kids on tuesday and 97 kids on wednesday.", "executed": 33.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Julia played tag with 15 kids on monday, 18 kids on tuesday and 97 kids on wednesday. How many kids did she play with on monday and tuesday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 15\n    tuesday = 18\n    wednesday = 97\n    # Now, we can calculate the answer:\n    answer = monday + tuesday\n    return answer\nans = solver()", "answer": 33.0}
{"question": "How many more pages of math homework than reading homework did she have?", "passage": "Rachel had to complete 9 pages of math homework, 2 pages of reading homework and 96 more pages of biology homework.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel had to complete 9 pages of math homework, 2 pages of reading homework and 96 more pages of biology homework. How many more pages of math homework than reading homework did she have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    math_homework = 9\n    reading_homework = 2\n    biology_homework = 96\n    # Now, we can calculate the difference between math homework and reading homework\n    difference = math_homework - reading_homework\n    return difference\nans = solver()", "answer": 7.0}
{"question": "How many campers went rowing in all?", "passage": "36 campers went rowing in the morning 13 campers went rowing in the afternoon and 49 campers went rowing in the evening.", "executed": 98.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 36 campers went rowing in the morning 13 campers went rowing in the afternoon and 49 campers went rowing in the evening. How many campers went rowing in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning = 36\n    afternoon = 13\n    evening = 49\n    total = morning + afternoon + evening\n    return total\nans = solver()", "answer": 98.0}
{"question": "How many more marbles did he lose than those he found?", "passage": "Josh had 4 marbles in his collection. He lost 16 marbles and found 8 new ones.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Josh had 4 marbles in his collection. He lost 16 marbles and found 8 new ones. How many more marbles did he lose than those he found?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marbles_collected = 4\n    marbles_lost = 16\n    marbles_found = 8\n    marbles_lost_more = marbles_lost - marbles_found\n    return marbles_lost_more\nans = solver()", "answer": 8.0}
{"question": "How many more wrappers than bottle caps did danny find at the park?", "passage": "Danny collects bottle caps and wrappers. He found 11 bottle caps and 28 wrappers at the park. Now he has 68 bottle caps and 51 wrappers in his collection.", "executed": -34.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Danny collects bottle caps and wrappers. He found 11 bottle caps and 28 wrappers at the park. Now he has 68 bottle caps and 51 wrappers in his collection. How many more wrappers than bottle caps did danny find at the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bottle_caps = 11\n    wrappers = 28\n    bottle_caps_collection = 68\n    wrappers_collection = 51\n    # Now we can calculate the number of bottle caps and wrappers that Danny found at the park\n    bottle_caps_found = bottle_caps_collection - bottle_caps\n    wrappers_found = wrappers_collection - wrappers\n    # Now we can calculate the difference between the number of wrappers and bottle caps that Danny found at the park\n    difference = wrappers_found - bottle_caps_found\n    return difference\nans = solver()", "answer": 17.0}
{"question": "How many apps did he delete?", "passage": "Dave had 59 files and 15 apps on his phone. After deleting some apps and files he had 12 apps and 30 files left.", "executed": 47.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dave had 59 files and 15 apps on his phone. After deleting some apps and files he had 12 apps and 30 files left. How many apps did he delete?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   a = number of apps\n    #   f = number of files\n    #   a_d = number of apps deleted\n    #   f_d = number of files deleted\n    #   a_l = number of apps left\n    #   f_l = number of files left\n    a = 59\n    f = 15\n    a_l = 12\n    f_l = 30\n    a_d = a - a_l\n    f_d = f - f_l\n    return a_d\nans = solver()", "answer": 3.0}
{"question": "How many more books did he buy than he sold?", "passage": "Paul had 71 books. After selling some in a garage sale he bought 38 new ones. If he has 116 books now.", "executed": -7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul had 71 books. After selling some in a garage sale he bought 38 new ones. If he has 116 books now. How many more books did he buy than he sold?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   a = number of books Paul had before the garage sale\n    #   b = number of books Paul sold in the garage sale\n    #   c = number of books Paul bought after the garage sale\n    #   d = number of books Paul has now\n    a = 71\n    d = 116\n    c = 38\n    b = a - d + c\n    return b\nans = solver()", "answer": 45.0}
{"question": "How many balls did Allan and Jake have in the park?", "passage": "Allan brought 7 balloons and 5 balls while Jake brought 6 balloons and 4 balls to the park.", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Allan brought 7 balloons and 5 balls while Jake brought 6 balloons and 4 balls to the park. How many balls did Allan and Jake have in the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    balloons_allan = 7\n    balls_allan = 5\n    balloons_jake = 6\n    balls_jake = 4\n    # Now, we can calculate the total number of balls in the park:\n    total_balls = balls_allan + balls_jake\n    return total_balls\nans = solver()", "answer": 9.0}
{"question": "How many packs of dvds can you buy if each pack costs 26 dollars?", "passage": "You have 104 dollars.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: You have 104 dollars. How many packs of dvds can you buy if each pack costs 26 dollars?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    money = 104\n    price = 26\n    # Now, we can calculate the number of packs of dvds we can buy:\n    num_packs = money // price\n    return num_packs\nans = solver()", "answer": 4.0}
{"question": "How many nintendo games does she need to give away so that she will have 12 nintendo games left?", "passage": "Kelly has 20 nintendo games and 70 sony games.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Kelly has 20 nintendo games and 70 sony games. How many nintendo games does she need to give away so that she will have 12 nintendo games left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    nintendo_games = 20\n    sony_games = 70\n    nintendo_games_left = 12\n    nintendo_games_given_away = nintendo_games - nintendo_games_left\n    return nintendo_games_given_away\nans = solver()", "answer": 8.0}
{"question": "How many more kids did she play with on tuesday than on monday?", "passage": "Julia played tag with 11 kids on monday. She played tag with 12 kids on tuesday.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Julia played tag with 11 kids on monday. She played tag with 12 kids on tuesday. How many more kids did she play with on tuesday than on monday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 11\n    tuesday = 12\n    # Now, we can calculate the difference between tuesday and monday:\n    difference = tuesday - monday\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many more bags did she have on monday than she found on the next day?", "passage": "Tiffany was collecting cans for recycling. On monday she had 8 bags of cans. The next day she found 7 more bags worth of cans.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Tiffany was collecting cans for recycling. On monday she had 8 bags of cans. The next day she found 7 more bags worth of cans. How many more bags did she have on monday than she found on the next day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 8\n    tuesday = 7\n    # Now we can calculate the difference between monday and tuesday\n    difference = monday - tuesday\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How big is each group?", "passage": "There are 3941 skittles in Steven's skittles collection. Steven also has 4950 erasers. If the erasers are organized into 495 groups.", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 3941 skittles in Steven's skittles collection. Steven also has 4950 erasers. If the erasers are organized into 495 groups. How big is each group?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    skittles = 3941\n    erasers = 4950\n    groups = 495\n    # Now, we can calculate the size of each group:\n    size = erasers / groups\n    return size\nans = solver()", "answer": 10.0}
{"question": "How many students suggested bacon?", "passage": "Because of the decision Sofia asked the students to suggest specific types of food. 457 students suggested adding mashed potatoes while others suggested adding bacon to the menu. If 63 more students suggested adding mashed potatoes than those that suggested bacon.", "executed": 197.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Because of the decision Sofia asked the students to suggest specific types of food. 457 students suggested adding mashed potatoes while others suggested adding bacon to the menu. If 63 more students suggested adding mashed potatoes than those that suggested bacon. How many students suggested bacon?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of students suggested adding bacon\n    # y = number of students suggested adding mashed potatoes\n    # x + y = 457\n    # y = x + 63\n    # x + x + 63 = 457\n    # 2x + 63 = 457\n    # 2x = 457 - 63\n    # 2x = 394\n    # x = 394 / 2\n    # x = 197\n    return 197\nans = solver()", "answer": 394.0}
{"question": "How much money did they make from selling the t-shirts?", "passage": "The Razorback t-shirt shop sells each t-shirt for $ 51 dollars. During the Arkansas and Texas tech game they offered a discount of $ 8 per t-shirt and sold 130 t-shirts.", "executed": 5590.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The Razorback t-shirt shop sells each t-shirt for $ 51 dollars. During the Arkansas and Texas tech game they offered a discount of $ 8 per t-shirt and sold 130 t-shirts. How much money did they make from selling the t-shirts?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    price = 51\n    discount = 8\n    tshirts = 130\n    # Now, we can calculate the total revenue:\n    revenue = price * tshirts - discount * tshirts\n    return revenue\nans = solver()", "answer": 5590.0}
{"question": "How many more birds than storks are sitting on the fence?", "passage": "5 storks and 3 birds were sitting on the fence. 4 more birds came to join them.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 5 storks and 3 birds were sitting on the fence. 4 more birds came to join them. How many more birds than storks are sitting on the fence?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    storks = 5\n    birds = 3\n    more_birds = 4\n    # Now, we can calculate the total number of birds and storks on the fence:\n    total_birds = birds + more_birds\n    total_storks = storks\n    # Finally, we can calculate the difference between the total number of birds and storks:\n    difference = total_birds - total_storks\n    return difference\nans = solver()", "answer": 2.0}
{"question": "How many cakes did each person eat?", "passage": "Matthew had 29 crackers and 30 cakes. If Matthew gave equal numbers of crackers and cakes to his 2 friends.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Matthew had 29 crackers and 30 cakes. If Matthew gave equal numbers of crackers and cakes to his 2 friends. How many cakes did each person eat?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   Matthew's crackers: m_crackers\n    #   Matthew's cakes: m_cakes\n    #   Friend 1's crackers: f1_crackers\n    #   Friend 1's cakes: f1_cakes\n    #   Friend 2's crackers: f2_crackers\n    #   Friend 2's cakes: f2_cakes\n    m_crackers = 29\n    m_cakes = 30\n    f1_crackers = 0\n    f1_cakes = 0\n    f2_crackers = 0\n    f2_cakes = 0\n    # According to the question, we can define the constraints:\n    #   Matthew's crackers = Friend 1's crackers + Friend 2's crackers\n    #   Matthew's cakes = Friend 1's cakes + Friend 2's cakes\n    #   Friend 1's crackers = Friend 1's cakes\n    #   Friend 2's crackers = Friend 2's cakes\n    #   Friend 1's crackers > 0\n    #   Friend 1's cakes > 0\n    #   Friend 2's crackers > 0\n    #   Friend 2's cakes > 0\n    #   Friend 1's crackers < Matthew's crackers\n    #   Friend 1's cakes < Matthew's cakes\n    #   Friend 2's crackers < Matthew's crackers\n    #   Friend 2's cakes < Matthew's cakes\n    #   Friend 1's crackers < Friend 2's crackers\n    #   Friend 1's cakes < Friend 2's cakes\n    #   Friend 2's crackers <\nans = solver()", "answer": 15.0}
{"question": "How many roses are there in the vase now?", "passage": "There were 10 roses in the vase. Jessica cut 8 more roses from her flower garden and put them in the vase.", "executed": 18.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 10 roses in the vase. Jessica cut 8 more roses from her flower garden and put them in the vase. How many roses are there in the vase now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    roses_in_vase = 10\n    roses_cut = 8\n    roses_in_vase_now = roses_in_vase + roses_cut\n    return roses_in_vase_now\nans = solver()", "answer": 18.0}
{"question": "How many pages are in each chapter?", "passage": "Frank was reading through his favorite book. The book had 555 pages equally distributed over 5 chapters. It took Frank 220 days to finish the book.", "executed": 111.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank was reading through his favorite book. The book had 555 pages equally distributed over 5 chapters. It took Frank 220 days to finish the book. How many pages are in each chapter?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # pages = 555\n    # chapters = 5\n    # days = 220\n    pages = 555\n    chapters = 5\n    days = 220\n    # Now, we can calculate the number of pages in each chapter:\n    pages_per_chapter = pages / chapters\n    print(pages_per_chapter)\n    # Now, we can calculate the number of days it took Frank to read each chapter:\n    days_per_chapter = days / chapters\n    print(days_per_chapter)\n    # Now, we can calculate the number of pages Frank read each day:\n    pages_per_day = pages / days\n    print(pages_per_day)\n    return pages_per_chapter\nans = solver()", "answer": 111.0}
{"question": "How many sweet cookies did Paco have left?", "passage": "Paco had 22 sweet cookies and 75 salty cookies. He ate 15 sweet cookies and 54 salty cookies.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paco had 22 sweet cookies and 75 salty cookies. He ate 15 sweet cookies and 54 salty cookies. How many sweet cookies did Paco have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sweet_cookies = 22\n    salty_cookies = 75\n    sweet_cookies_eaten = 15\n    salty_cookies_eaten = 54\n    sweet_cookies_left = sweet_cookies - sweet_cookies_eaten\n    salty_cookies_left = salty_cookies - salty_cookies_eaten\n    return sweet_cookies_left\nans = solver()", "answer": 7.0}
{"question": "How many more cups of flour does she need to add?", "passage": "Mary is baking a cake. The recipe calls for 9 cups of flour and 5 cups of sugar. She already put in 3 cups of flour and 62 cups of sugar.", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 9 cups of flour and 5 cups of sugar. She already put in 3 cups of flour and 62 cups of sugar. How many more cups of flour does she need to add?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    flour_needed = 9\n    sugar_needed = 5\n    flour_added = 3\n    sugar_added = 2\n    # Now, we can calculate the answer:\n    flour_remaining = flour_needed - flour_added\n    sugar_remaining = sugar_needed - sugar_added\n    return flour_remaining, sugar_remaining\nans = solver()", "answer": 6.0}
{"question": "How many packs of dvds can you buy with 93 dollars?", "passage": "Each pack of dvds costs 107 dollars. If there is a discount of 106 dollars on each pack.", "executed": 93.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Each pack of dvds costs 107 dollars. If there is a discount of 106 dollars on each pack. How many packs of dvds can you buy with 93 dollars?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cost = 107\n    discount = 106\n    money = 93\n    # Now we can calculate the number of packs of dvds we can buy with 93 dollars:\n    num_packs = math.floor(money / (cost - discount))\n    return num_packs\nans = solver()", "answer": 93.0}
{"question": "How many more movies than books are there in the ' crazy silly school ' series?", "passage": "There are 8 different books and 10 different movies in the ' crazy silly school ' series. If you read 19 of the books and watched 61 of the movies.", "executed": 44.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 8 different books and 10 different movies in the ' crazy silly school ' series. If you read 19 of the books and watched 61 of the movies. How many more movies than books are there in the ' crazy silly school ' series?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    books = 8\n    movies = 10\n    read_books = 19\n    watched_movies = 61\n    # Now, we can calculate the number of books and movies in the ' crazy silly school ' series:\n    total_books = books + read_books\n    total_movies = movies + watched_movies\n    # Now, we can calculate the number of movies than books are there in the ' crazy silly school ' series:\n    movies_than_books = total_movies - total_books\n    return movies_than_books\nans = solver()", "answer": 2.0}
{"question": "How many pieces of candy and chocolate did Bobby eat altogether?", "passage": "Bobby ate 33 pieces of candy. Then he ate 4 more. He also ate 14 pieces of chocolate.", "executed": 47.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bobby ate 33 pieces of candy. Then he ate 4 more. He also ate 14 pieces of chocolate. How many pieces of candy and chocolate did Bobby eat altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    candy = 33\n    chocolate = 14\n    # Then we can calculate the answer:\n    answer = candy + chocolate\n    return answer\nans = solver()", "answer": 51.0}
{"question": "How many books are there in each bookshelf?", "passage": "Bryan took a look at his books as well. He has 7 bookshelves with each having the same number of books. If he has a total of 28 books.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bryan took a look at his books as well. He has 7 bookshelves with each having the same number of books. If he has a total of 28 books. How many books are there in each bookshelf?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    total_books = 28\n    total_bookshelves = 7\n    books_per_bookshelf = total_books / total_bookshelves\n    return books_per_bookshelf\nans = solver()", "answer": 4.0}
{"question": "How many games did she play?", "passage": "Melissa scored 12 points in each game. If she scored a total of 36 points.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Melissa scored 12 points in each game. If she scored a total of 36 points. How many games did she play?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of games\n    # y = number of points\n    x = 0\n    y = 0\n    # We know that Melissa scored 12 points in each game, so we can write the equation:\n    y = 12 * x\n    # We also know that she scored a total of 36 points, so we can write the equation:\n    y = 36\n    # Now we have two equations, and we can solve for x:\n    x = 36 / 12\n    x = 3\n    return x\nans = solver()", "answer": 3.0}
{"question": "How many pages of reading homework did she have to complete?", "passage": "Rachel had to complete 8 pages of math homework. If she had to complete 6 more pages of reading homework than math homework.", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel had to complete 8 pages of math homework. If she had to complete 6 more pages of reading homework than math homework. How many pages of reading homework did she have to complete?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    math_homework = 8\n    reading_homework = math_homework + 6\n    return reading_homework\nans = solver()", "answer": 14.0}
{"question": "How many emails did Jack receive in the day?", "passage": "Jack received 6 emails and sent 91 letters in the morning. He then received 2 emails and sent 74 letters in the afternoon.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jack received 6 emails and sent 91 letters in the morning. He then received 2 emails and sent 74 letters in the afternoon. How many emails did Jack receive in the day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Jack received 6 emails in the morning\n    morning_received_emails = 6\n    # Jack sent 91 letters in the morning\n    morning_sent_letters = 91\n    # Jack received 2 emails in the afternoon\n    afternoon_received_emails = 2\n    # Jack sent 74 letters in the afternoon\n    afternoon_sent_letters = 74\n    # Jack received emails in the day\n    day_received_emails = morning_received_emails + afternoon_received_emails\n    return day_received_emails\nans = solver()", "answer": 8.0}
{"question": "How many tickets did Dave use to buy toys?", "passage": "At the arcade Dave had won 7 tickets. He used some tickets to buy toys. If he still has 2 tickets left.", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the arcade Dave had won 7 tickets. He used some tickets to buy toys. If he still has 2 tickets left. How many tickets did Dave use to buy toys?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   - total_tickets: the total number of tickets Dave had won\n    #   - tickets_left: the number of tickets Dave still has\n    total_tickets = 7\n    tickets_left = 2\n    # Now we can calculate the number of tickets Dave used to buy toys:\n    tickets_used = total_tickets - tickets_left\n    return tickets_used\nans = solver()", "answer": 5.0}
{"question": "How many hours does he spend on learning chinese?", "passage": "Every day Ryan spends 7 hours on learning english and some more hours on learning chinese. If he spends 2 hours more on learning english than on learning chinese.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Every day Ryan spends 7 hours on learning english and some more hours on learning chinese. If he spends 2 hours more on learning english than on learning chinese. How many hours does he spend on learning chinese?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x: the hours Ryan spends on learning chinese\n    # y: the hours Ryan spends on learning english\n    x = Symbol('x')\n    y = Symbol('y')\n    # According to the question, we can define the equation:\n    equation = Eq(x + y, 7)\n    equation = Eq(x + y + 2, 9)\n    equation = Eq(x + y, 7)\n    equation = Eq(x + y, 7)\n    equation = Eq(x + y, 7)\n    equation = Eq(x + y, 7)\n    equation = Eq(x + y, 7)\n    equation = Eq(x + y, 7)\n    equation = Eq(x + y, 7)\n    equation = Eq(x + y, 7)\n    equation = Eq(x + y, 7)\n    equation = Eq(x + y, 7)\n    equation = Eq(x + y, 7)\n    equation = Eq(x + y, 7)\n    equation = Eq(x + y, 7)\n    equation = Eq(x + y, 7)\n    equation = Eq(x + y, 7)\n    equation = Eq(x + y, 7)\n    equation = Eq(x + y, 7)\n    equation = Eq(x + y, 7)\n    equation = Eq(x + y, 7)\n    equation = Eq(x + y\nans = solver()", "answer": 5.0}
{"question": "How many games do her friends have in all?", "passage": "Katie had 91 ds games and her new friends had 88 games and old friends had 53 games.", "executed": 232.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Katie had 91 ds games and her new friends had 88 games and old friends had 53 games. How many games do her friends have in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    new_friends_games = 88\n    old_friends_games = 53\n    katie_games = 91\n    # Now, we can calculate the total games of her friends:\n    total_games = new_friends_games + old_friends_games\n    # Finally, we can calculate the answer:\n    answer = katie_games + total_games\n    return answer\nans = solver()", "answer": 141.0}
{"question": "How many crayons had been lost or given away?", "passage": "Paul got a box of some crayons for his birthday. During the school year he gave 52 crayons to his friends while he lost 535 crayons. If he only had 492 crayons left.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul got a box of some crayons for his birthday. During the school year he gave 52 crayons to his friends while he lost 535 crayons. If he only had 492 crayons left. How many crayons had been lost or given away?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # crayons_given = 52\n    # crayons_lost = 535\n    # crayons_left = 492\n    crayons_given = 52\n    crayons_lost = 535\n    crayons_left = 492\n    # Now, we can define the equation:\n    # crayons_given + crayons_lost = crayons_left\n    crayons_given + crayons_lost = crayons_left\n    # We can solve the equation by using the following code:\n    crayons_given + crayons_lost - crayons_left = 0\n    crayons_given + crayons_lost - crayons_left - crayons_given = 0 - crayons_given\n    crayons_lost - crayons_left - crayons_given = - crayons_given - crayons_given\n    crayons_lost - crayons_left - crayons_given - crayons_lost = - crayons_given - crayons_given - crayons_lost\n    - crayons_left - crayons_given - crayons_lost = - crayons_given - crayons_given - crayons_lost - crayons_lost\n    - crayons_left - crayons_given - crayons_lost - crayons_left = - crayons_given - crayons_given -\nans = solver()", "answer": 587.0}
{"question": "How many drums of grapes would be filled in 146 days?", "passage": "Being his favorite, he saved checking on the grapevines for his last stop. He was told by 294 of the pickers that they fill 244 drums of grapes per day and 47 drums of raspberries per day.", "executed": 35624.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Being his favorite, he saved checking on the grapevines for his last stop. He was told by 294 of the pickers that they fill 244 drums of grapes per day and 47 drums of raspberries per day. How many drums of grapes would be filled in 146 days?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    grape_per_day = 244\n    raspberry_per_day = 47\n    days = 146\n    # Now we can calculate the answer:\n    grape_per_146_days = grape_per_day * days\n    return grape_per_146_days\nans = solver()", "answer": 35624.0}
{"question": "How many peaches does Jill have?", "passage": "Jake has 7 fewer peaches than Steven and 8 more peaches than Jill. Steven has 17 peaches.", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jake has 7 fewer peaches than Steven and 8 more peaches than Jill. Steven has 17 peaches. How many peaches does Jill have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    jake = 0\n    steven = 17\n    jill = 0\n    # Now, we can use the given information to derive the answer:\n    jill = steven - 8\n    jake = jill + 7\n    return jill\nans = solver()", "answer": 2.0}
{"question": "How many more green peaches than yellow peaches are in the basket?", "passage": "2 red peaches, 6 yellow peaches and 14 green peaches are in the basket.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 2 red peaches, 6 yellow peaches and 14 green peaches are in the basket. How many more green peaches than yellow peaches are in the basket?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    red_peaches = 2\n    yellow_peaches = 6\n    green_peaches = 14\n    # Now, we can calculate the difference between green peaches and yellow peaches\n    diff = green_peaches - yellow_peaches\n    return diff\nans = solver()", "answer": 8.0}
{"question": "How many pages does the book have altogether?", "passage": "A book has 31 chapters. Each chapter is 61 pages long.", "executed": 1891.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A book has 31 chapters. Each chapter is 61 pages long. How many pages does the book have altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    num_chapters = 31\n    num_pages_per_chapter = 61\n    num_pages_total = num_chapters * num_pages_per_chapter\n    return num_pages_total\nans = solver()", "answer": 1891.0}
{"question": "How many guests did she prepare cookies for?", "passage": "Brenda's mother made cookies for guests. Each guest had 2 cookies. If she prepared a total of 10 cookies.", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Brenda's mother made cookies for guests. Each guest had 2 cookies. If she prepared a total of 10 cookies. How many guests did she prepare cookies for?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookies = 10\n    cookies_per_guest = 2\n    guests = cookies / cookies_per_guest\n    return guests\nans = solver()", "answer": 5.0}
{"question": "How many hours does he spend on learning chinese?", "passage": "Every day Ryan spends a total of 3 hours on learning english and chinese. If he spends 2 hours on learning english everyday.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Every day Ryan spends a total of 3 hours on learning english and chinese. If he spends 2 hours on learning english everyday. How many hours does he spend on learning chinese?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # english_hours = 2\n    # chinese_hours = ?\n    # total_hours = 3\n    # We can also define the equation:\n    # english_hours + chinese_hours = total_hours\n    # Then we can solve the equation:\n    chinese_hours = total_hours - english_hours\n    return chinese_hours\nans = solver()", "answer": 1.0}
{"question": "How many drums of grapes would be filled in 77 days?", "passage": "Being his favorite, he saved checking on the grapevines for his last stop. He was told by 235 of the pickers that they fill 100 drums of raspberries per day and 221 drums of grapes per day.", "executed": 3998995.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Being his favorite, he saved checking on the grapevines for his last stop. He was told by 235 of the pickers that they fill 100 drums of raspberries per day and 221 drums of grapes per day. How many drums of grapes would be filled in 77 days?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    raspberries = 100\n    grapes = 221\n    pickers = 235\n    days = 77\n    # Now, we can calculate the answer:\n    answer = pickers * grapes * days\n    return answer\nans = solver()", "answer": 17017.0}
{"question": "How many more pieces of candy than chocolate did Bobby eat?", "passage": "Bobby ate 38 pieces of candy. Then he ate 36 more. He also ate 16 pieces of chocolate.", "executed": 22.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bobby ate 38 pieces of candy. Then he ate 36 more. He also ate 16 pieces of chocolate. How many more pieces of candy than chocolate did Bobby eat?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    candy = 38\n    chocolate = 16\n    # Then we can calculate the answer:\n    answer = candy - chocolate\n    return answer\nans = solver()", "answer": 58.0}
{"question": "How many days did it take to harvest them if they harvested 18 sacks of oranges per day?", "passage": "He then went to see the oranges being harvested. He found out that they harvested 54 sacks of oranges.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He then went to see the oranges being harvested. He found out that they harvested 54 sacks of oranges. How many days did it take to harvest them if they harvested 18 sacks of oranges per day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. The number of days to harvest the oranges\n    # 2. The number of sacks of oranges harvested per day\n    # 3. The total number of sacks of oranges harvested\n    # 4. The number of days to harvest the oranges\n    days = 0\n    sacks_per_day = 18\n    total_sacks = 54\n    days = total_sacks / sacks_per_day\n    return days\nans = solver()", "answer": 3.0}
{"question": "How many houses are there in a block?", "passage": "A mailman has to give 25 pieces of junk mail to each block. If he gives 5 mails to each house in a block.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A mailman has to give 25 pieces of junk mail to each block. If he gives 5 mails to each house in a block. How many houses are there in a block?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # mailman = 25\n    # block = mailman / 5\n    # house = block / 5\n    mailman = 25\n    block = mailman / 5\n    house = block / 5\n    return house\nans = solver()", "answer": 5.0}
{"question": "How many customers left?", "passage": "A waiter had 8 customers. After some left he still had 5 customers. Then he got 99 new customers.", "executed": 0.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter had 8 customers. After some left he still had 5 customers. Then he got 99 new customers. How many customers left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x: the number of customers left\n    # y: the number of customers left after some left\n    # z: the number of customers left after he got 99 new customers\n    x = 0\n    y = 0\n    z = 0\n    return x\nans = solver()", "answer": 3.0}
{"question": "How many more apples than peaches does Steven have?", "passage": "Jake has 3 fewer peaches and 4 more apples than Steven. Steven has 19 apples and 15 peaches.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jake has 3 fewer peaches and 4 more apples than Steven. Steven has 19 apples and 15 peaches. How many more apples than peaches does Steven have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Jake's apples = x\n    # Jake's peaches = y\n    # Steven's apples = z\n    # Steven's peaches = w\n    # Then we can write the equations:\n    # x = z - 3\n    # y = w + 4\n    # z = 19\n    # w = 15\n    # We can solve the equations to get the answer:\n    x = 19 - 3\n    y = 15 + 4\n    z = 19\n    w = 15\n    answer = z - w\n    return answer\nans = solver()", "answer": 4.0}
{"question": "How many more hours does he spend on learning chinese than he does on learning english?", "passage": "Every day Ryan spends 6 hours on learning english and 7 hours on learning chinese.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Every day Ryan spends 6 hours on learning english and 7 hours on learning chinese. How many more hours does he spend on learning chinese than he does on learning english?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    english_hours = 6\n    chinese_hours = 7\n    # Then we can calculate the difference between the two variables:\n    difference = chinese_hours - english_hours\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many birds are sitting on the fence?", "passage": "4 birds and 46 storks were sitting on the fence. 6 more birds came to join them.", "executed": 56.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 4 birds and 46 storks were sitting on the fence. 6 more birds came to join them. How many birds are sitting on the fence?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    birds = 4\n    storks = 46\n    more_birds = 6\n    total_birds = birds + more_birds\n    total_birds_and_storks = total_birds + storks\n    return total_birds_and_storks\nans = solver()", "answer": 10.0}
{"question": "How many cookies did Paco eat?", "passage": "Paco had 28 cookies. He ate some of them and had 7 cookies left.", "executed": 21.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paco had 28 cookies. He ate some of them and had 7 cookies left. How many cookies did Paco eat?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookies_paco_had = 28\n    cookies_paco_left = 7\n    cookies_paco_ate = cookies_paco_had - cookies_paco_left\n    return cookies_paco_ate\nans = solver()", "answer": 21.0}
{"question": "How many friends did he give crackers to?", "passage": "Matthew had 8 crackers to give to friends. If Matthew gave 2 crackers to each his friends.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Matthew had 8 crackers to give to friends. If Matthew gave 2 crackers to each his friends. How many friends did he give crackers to?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    crackers = 8\n    friends = 2\n    # Now, we can calculate the number of friends by dividing the number of crackers by the number of crackers given to each friend.\n    friends = crackers / friends\n    return friends\nans = solver()", "answer": 4.0}
{"question": "How many campers went rowing and hiking in all?", "passage": "41 campers went rowing and 4 campers went hiking in the morning. 26 campers went rowing in the afternoon.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 41 campers went rowing and 4 campers went hiking in the morning. 26 campers went rowing in the afternoon. How many campers went rowing and hiking in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    rowing_morning = 4\n    hiking_morning = 26\n    rowing_afternoon = 4\n    hiking_afternoon = 26\n    rowing_all = rowing_morning + rowing_afternoon\n    hiking_all = hiking_morning + hiking_afternoon\n    return rowing_all, hiking_all\nans = solver()", "answer": 71.0}
{"question": "How many more cookies did he buy than those he ate?", "passage": "Paco had 13 cookies. He ate 2 of them. Then he bought 36 more cookies.", "executed": 47.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paco had 13 cookies. He ate 2 of them. Then he bought 36 more cookies. How many more cookies did he buy than those he ate?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookies_ate = 2\n    cookies_bought = 36\n    cookies_ate_total = 13\n    cookies_bought_total = cookies_ate_total + cookies_bought\n    cookies_left = cookies_bought_total - cookies_ate\n    return cookies_left\nans = solver()", "answer": 34.0}
{"question": "How many push-ups did David do?", "passage": "Zachary did 19 push-ups in gym class today. David did 39 more push-ups than Zachary. John did 13 push-ups less than david.", "executed": 58.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Zachary did 19 push-ups in gym class today. David did 39 more push-ups than Zachary. John did 13 push-ups less than david. How many push-ups did David do?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    zachary = 19\n    david = zachary + 39\n    john = david - 13\n    return david\nans = solver()", "answer": 58.0}
{"question": "How many more cups of flour than cups of salt does she need to add now?", "passage": "Mary is baking a cake. The recipe calls for 12 cups of flour 14 cups of sugar and 7 cups of salt. She already put in 2 cups of flour.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 12 cups of flour 14 cups of sugar and 7 cups of salt. She already put in 2 cups of flour. How many more cups of flour than cups of salt does she need to add now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    flour = 12\n    sugar = 14\n    salt = 7\n    flour_added = 2\n    # Now, we need to calculate the number of cups of flour that Mary needs to add now.\n    flour_to_add = flour - flour_added\n    # Now, we need to calculate the number of cups of salt that Mary needs to add now.\n    salt_to_add = salt\n    # Now, we need to calculate the difference between the number of cups of flour and the number of cups of salt that Mary needs to add now.\n    difference = flour_to_add - salt_to_add\n    # Now, we need to return the answer.\n    return difference\nans = solver()", "answer": 3.0}
{"question": "How many more roses did she cut than those she threw away?", "passage": "There were 15 roses in the vase. Jessica threw away 33 roses from the vase and cut some more new roses from her flower garden to put in the vase. There are now 17 roses in the vase.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 15 roses in the vase. Jessica threw away 33 roses from the vase and cut some more new roses from her flower garden to put in the vase. There are now 17 roses in the vase. How many more roses did she cut than those she threw away?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of roses Jessica cut from her flower garden\n    # y = number of roses Jessica threw away\n    # z = number of roses in the vase\n    # We can also define the equations:\n    # x + y = z\n    # x - y = 17\n    # We can solve the equations by using the numpy library:\n    x, y, z = np.linalg.solve([[1, 1, 1], [1, -1, 0]], [17, 17])\n    return x - y\nans = solver()", "answer": 2.0}
{"question": "How much money did Jason earn by delivering newspapers?", "passage": "Last week Fred had 49 dollars and Jason had 3 dollars. Fred washed cars over the weekend and now has 112 dollars. Jason delivered newspapers and now has 63 dollars.", "executed": 60.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Last week Fred had 49 dollars and Jason had 3 dollars. Fred washed cars over the weekend and now has 112 dollars. Jason delivered newspapers and now has 63 dollars. How much money did Jason earn by delivering newspapers?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    Fred_had = 49\n    Jason_had = 3\n    Fred_now = 112\n    Jason_now = 63\n    # We can also define the unknown variable:\n    Jason_earn = 0\n    # Now we can use the given information to derive the answer:\n    Jason_earn = Jason_now - Jason_had\n    return Jason_earn\nans = solver()", "answer": 60.0}
{"question": "How many peaches does Jake have?", "passage": "Jake has 7 fewer peaches than Steven and 9 more peaches than Jill. Steven has 16 peaches.", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jake has 7 fewer peaches than Steven and 9 more peaches than Jill. Steven has 16 peaches. How many peaches does Jake have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    jake = 0\n    steven = 16\n    jill = 0\n    # Now, we can use the given information to derive the answer:\n    jake = steven - 7\n    jill = jake - 9\n    return jake\nans = solver()", "answer": 9.0}
{"question": "How many campers went rowing in the afternoon?", "passage": "46 campers went rowing on a day. 43 campers went rowing in the morning and some more campers went rowing in the afternoon.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: 46 campers went rowing on a day. 43 campers went rowing in the morning and some more campers went rowing in the afternoon. How many campers went rowing in the afternoon?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning = 43\n    afternoon = ?\n    total = 46\n    # We can also define the constraints:\n    morning + afternoon = total\n    afternoon > 0\n    # Now we can use the constraints to derive the answer:\n    afternoon = total - morning\n    return afternoon\nans = solver()", "answer": 3.0}
{"question": "How much did they make in all?", "passage": "The ring toss game at the carnival made 382 dollars in the first 44 days and 374 dollars in the remaining 10 days.", "executed": 756.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The ring toss game at the carnival made 382 dollars in the first 44 days and 374 dollars in the remaining 10 days. How much did they make in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    days_1 = 44\n    days_2 = 10\n    money_1 = 382\n    money_2 = 374\n    money_total = money_1 + money_2\n    return money_total\nans = solver()", "answer": 756.0}
{"question": "How many pages are in the first chapter?", "passage": "A book has 2 chapters. The second chapter is 36 pages long. If there are a total of 67 pages in the book.", "executed": 31.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A book has 2 chapters. The second chapter is 36 pages long. If there are a total of 67 pages in the book. How many pages are in the first chapter?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    chapter_1 = 0\n    chapter_2 = 36\n    total_pages = 67\n    # Now, we can use the given information to derive the answer:\n    chapter_1 = total_pages - chapter_2\n    return chapter_1\nans = solver()", "answer": 31.0}
{"question": "How many extra invitations will she need to buy?", "passage": "Carol was sending out birthday invitations to her friends. Each package of invitations she bought had 3 invitations in it and she bought 2 packs. If she wants to invite 9 friends.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Carol was sending out birthday invitations to her friends. Each package of invitations she bought had 3 invitations in it and she bought 2 packs. If she wants to invite 9 friends. How many extra invitations will she need to buy?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. Number of friends Carol wants to invite: 9\n    # 2. Number of invitations in each package: 3\n    # 3. Number of packages Carol bought: 2\n    # 4. Number of invitations in total: 3 * 2 = 6\n    # 5. Number of extra invitations Carol needs to buy: 9 - 6 = 3\n    return 3\nans = solver()", "answer": 3.0}
{"question": "How many more push-ups did Zachary do than John?", "passage": "Zachary did 15 push-ups in gym class today. David did 39 more push-ups than Zachary. John did 9 push-ups less than David.", "executed": -30.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Zachary did 15 push-ups in gym class today. David did 39 more push-ups than Zachary. John did 9 push-ups less than David. How many more push-ups did Zachary do than John?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    zachary = 15\n    david = zachary + 39\n    john = david - 9\n    return zachary - john\nans = solver()", "answer": 30.0}
{"question": "How many marbles did Doug lose?", "passage": "Ed had 2 more marbles than Doug. Doug lost some of his marbles at the playground. Now Ed has 19 more marbles than doug.", "executed": 17.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Ed had 2 more marbles than Doug. Doug lost some of his marbles at the playground. Now Ed has 19 more marbles than doug. How many marbles did Doug lose?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Ed's marbles = x\n    # Doug's marbles = y\n    # Doug lost marbles = z\n    # Then we can get the equations:\n    # x = y + 2\n    # x = y + 19 + z\n    # Solve the equations, we can get the answer:\n    # z = 17\n    return 17\nans = solver()", "answer": 17.0}
{"question": "How big is each group?", "passage": "There are 896 skittles in Steven's skittles collection. Steven also has 517 erasers and 90 scales. If the skittles are organized into 8 groups.", "executed": 112.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 896 skittles in Steven's skittles collection. Steven also has 517 erasers and 90 scales. If the skittles are organized into 8 groups. How big is each group?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    skittles = 896\n    erasers = 517\n    scales = 90\n    groups = 8\n    # Now, we can calculate the size of each group:\n    size = skittles / groups\n    return size\nans = solver()", "answer": 112.0}
{"question": "How many groups will be created?", "passage": "Rebecca wants to split a collection of eggs into groups of 5. Rebecca has 10 marbles and 15 eggs.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rebecca wants to split a collection of eggs into groups of 5. Rebecca has 10 marbles and 15 eggs. How many groups will be created?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marbles = 10\n    eggs = 15\n    group_size = 5\n    # Now, we can calculate the number of groups:\n    groups = eggs // group_size\n    return groups\nans = solver()", "answer": 3.0}
{"question": "How many books did he sell in the garage sale?", "passage": "Paul had 95 pens and 153 books. After selling some books and pens in a garage sale he had 13 books and 23 pens left.", "executed": 140.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul had 95 pens and 153 books. After selling some books and pens in a garage sale he had 13 books and 23 pens left. How many books did he sell in the garage sale?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # pens = 95\n    # books = 153\n    # pens_left = 23\n    # books_left = 13\n    # pens_sold = pens - pens_left\n    # books_sold = books - books_left\n    pens = 95\n    books = 153\n    pens_left = 23\n    books_left = 13\n    pens_sold = pens - pens_left\n    books_sold = books - books_left\n    return books_sold\nans = solver()", "answer": 140.0}
{"question": "How many pages did he read per day?", "passage": "Frank was reading through his favorite book. The book had 612 pages equally distributed over 24 chapters. It took Frank 6 days to finish the book.", "executed": 102.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank was reading through his favorite book. The book had 612 pages equally distributed over 24 chapters. It took Frank 6 days to finish the book. How many pages did he read per day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    pages = 612\n    chapters = 24\n    days = 6\n    # Now, we can calculate the number of pages per day:\n    pages_per_day = pages / days\n    return pages_per_day\nans = solver()", "answer": 102.0}
{"question": "How many baskets of peaches are there?", "passage": "There are 10 peaches distributed equally in some baskets. If each basket has 4 red peaches and 6 green peaches.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 10 peaches distributed equally in some baskets. If each basket has 4 red peaches and 6 green peaches. How many baskets of peaches are there?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    red_peaches = 4\n    green_peaches = 6\n    total_peaches = red_peaches + green_peaches\n    total_baskets = 10 / total_peaches\n    return total_baskets\nans = solver()", "answer": 1.0}
{"question": "How many weeks did the harvest last?", "passage": "Lewis earns $ 2 every week during the harvest. If he earns a total of $ 178.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Lewis earns $ 2 every week during the harvest. If he earns a total of $ 178. How many weeks did the harvest last?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = the number of weeks\n    # y = the total amount of money\n    x = 0\n    y = 0\n    # We know that y = 2x, so we can write the equation as:\n    y = 2 * x\n    # We also know that y = 178, so we can write the equation as:\n    y = 178\n    # We can combine the two equations to get:\n    2 * x = 178\n    # We can divide both sides by 2 to get:\n    x = 89\n    # We can return the answer\n    return x\nans = solver()", "answer": 89.0}
{"question": "How many more bottle caps did danny throw away than those he found at the park?", "passage": "Danny collects bottle caps. He threw away 54 of the old ones at the park while he found 48 bottle caps new ones. Now he has 52 bottle caps in his collection.", "executed": -98.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Danny collects bottle caps. He threw away 54 of the old ones at the park while he found 48 bottle caps new ones. Now he has 52 bottle caps in his collection. How many more bottle caps did danny throw away than those he found at the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    old_caps = 54\n    new_caps = 48\n    total_caps = 52\n    # Now we can calculate the number of caps that Danny threw away\n    thrown_away = old_caps - total_caps\n    # And the number of caps that Danny found\n    found = new_caps + total_caps\n    # Finally, we can calculate the difference between the number of caps that Danny threw away and the number of caps that Danny found\n    difference = thrown_away - found\n    return difference\nans = solver()", "answer": 6.0}
{"question": "How many sacks of unripe oranges will they have after 45 days of harvest?", "passage": "He then went to see the oranges being harvested. He found out that they harvest 31 sacks of ripe oranges and 24 sacks of unripe oranges per day.", "executed": 1080.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He then went to see the oranges being harvested. He found out that they harvest 31 sacks of ripe oranges and 24 sacks of unripe oranges per day. How many sacks of unripe oranges will they have after 45 days of harvest?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    ripe_oranges = 31\n    unripe_oranges = 24\n    days = 45\n    # Now, we can calculate the total number of ripe oranges and unripe oranges after 45 days\n    total_ripe_oranges = ripe_oranges * days\n    total_unripe_oranges = unripe_oranges * days\n    return total_unripe_oranges\nans = solver()", "answer": 1080.0}
{"question": "How much did they jump altogether?", "passage": "The grasshopper and the frog had a jumping contest. The grasshopper jumped 35 inches. The grasshopper jumped 4 inches farther than the frog.", "executed": 66.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The grasshopper and the frog had a jumping contest. The grasshopper jumped 35 inches. The grasshopper jumped 4 inches farther than the frog. How much did they jump altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    grasshopper_jump = 35\n    frog_jump = grasshopper_jump - 4\n    total_jump = grasshopper_jump + frog_jump\n    return total_jump\nans = solver()", "answer": 66.0}
{"question": "How much money did they make from selling the jerseys?", "passage": "The Razorback shop makes $ 67 dollars off each t-shirt and $ 165 off each jersey. During the Arkansas and Texas tech game they sold 74 t-shirts and 156 jerseys.", "executed": 25740.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The Razorback shop makes $ 67 dollars off each t-shirt and $ 165 off each jersey. During the Arkansas and Texas tech game they sold 74 t-shirts and 156 jerseys. How much money did they make from selling the jerseys?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    t_shirt_price = 67\n    jersey_price = 165\n    t_shirt_sold = 74\n    jersey_sold = 156\n    # Now we can calculate the total money made from selling the jerseys:\n    total_money_made = jersey_price * jersey_sold\n    return total_money_made\nans = solver()", "answer": 25740.0}
{"question": "How deep was the water?", "passage": "After resting they decided to go for a swim. The depth of the water is 5 times Ron's height. Dean is 11 feet shorter than Ron. If Ron stands at 12 feet.", "executed": 60.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: After resting they decided to go for a swim. The depth of the water is 5 times Ron's height. Dean is 11 feet shorter than Ron. If Ron stands at 12 feet. How deep was the water?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    ron_height = 12\n    dean_height = ron_height - 11\n    water_depth = ron_height * 5\n    return water_depth\nans = solver()", "answer": 60.0}
{"question": "How many flowers and sticks are there in all?", "passage": "There are 466 pots. Each pot has 53 flowers and 181 sticks in it.", "executed": 24698.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 466 pots. Each pot has 53 flowers and 181 sticks in it. How many flowers and sticks are there in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    pots = 466\n    flowers_per_pot = 53\n    sticks_per_pot = 181\n    # Now, we can calculate the total number of flowers and sticks:\n    total_flowers = pots * flowers_per_pot\n    total_sticks = pots * sticks_per_pot\n    return total_flowers, total_sticks\nans = solver()", "answer": 109044.0}
{"question": "How many more crayons did he lose than those he gave to his friends?", "passage": "Paul got a box of 110 crayons for his birthday. During the school year he gave 90 crayons to his friends while he lost 412 crayons.", "executed": 322.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul got a box of 110 crayons for his birthday. During the school year he gave 90 crayons to his friends while he lost 412 crayons. How many more crayons did he lose than those he gave to his friends?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # crayons_given = 90\n    # crayons_lost = 412\n    # crayons_total = 110\n    crayons_given = 90\n    crayons_lost = 412\n    crayons_total = 110\n    crayons_remaining = crayons_total - crayons_given - crayons_lost\n    crayons_lost_more = crayons_lost - crayons_given\n    return crayons_lost_more\nans = solver()", "answer": 322.0}
{"question": "How many more girls than boys does the school have?", "passage": "In a school there are 569 girls and 236 boys.", "executed": 333.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In a school there are 569 girls and 236 boys. How many more girls than boys does the school have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    girls = 569\n    boys = 236\n    # Now, we can calculate the difference between girls and boys:\n    difference = girls - boys\n    return difference\nans = solver()", "answer": 333.0}
{"question": "How many sacks of unripe oranges will they have after 6 days of harvest?", "passage": "He then went to see the oranges being harvested. He found out that they harvest 65 sacks of unripe oranges and 46 sacks of ripe oranges per day.", "executed": 390.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He then went to see the oranges being harvested. He found out that they harvest 65 sacks of unripe oranges and 46 sacks of ripe oranges per day. How many sacks of unripe oranges will they have after 6 days of harvest?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    unripe_oranges = 65\n    ripe_oranges = 46\n    days = 6\n    # Now, we can calculate the total number of unripe oranges after 6 days of harvest:\n    total_unripe_oranges = unripe_oranges * days\n    return total_unripe_oranges\nans = solver()", "answer": 390.0}
{"question": "How many more people can join the wheel?", "passage": "The Ferris wheel in paradise park has 6 seats. Each seat can hold 14 people. If there are 16 people on the wheel right now.", "executed": 68.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The Ferris wheel in paradise park has 6 seats. Each seat can hold 14 people. If there are 16 people on the wheel right now. How many more people can join the wheel?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    seats = 6\n    people_per_seat = 14\n    people_on_wheel = 16\n    # Now, we can calculate the total capacity of the wheel:\n    total_capacity = seats * people_per_seat\n    # Now, we can calculate the number of people that can join the wheel:\n    people_can_join = total_capacity - people_on_wheel\n    return people_can_join\nans = solver()", "answer": 68.0}
{"question": "How many bottles did she drink each day?", "passage": "Debby bought 153 water bottles when they were on sale. She drank the same number of bottles each day. If the bottles lasted for 17 days.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Debby bought 153 water bottles when they were on sale. She drank the same number of bottles each day. If the bottles lasted for 17 days. How many bottles did she drink each day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bottles_bought = 153\n    bottles_drank = ?\n    days_lasted = 17\n    bottles_drank_each_day = ?\n    return bottles_drank_each_day\nans = solver()", "answer": 9.0}
{"question": "How many pieces of candies does Robin have?", "passage": "Robin has 21 packages of gum and 45 packages of candy. There are 9 pieces in each package.", "executed": 594.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Robin has 21 packages of gum and 45 packages of candy. There are 9 pieces in each package. How many pieces of candies does Robin have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    gum_packages = 21\n    candy_packages = 45\n    pieces_per_package = 9\n    # Now, we can calculate the total number of pieces of gum and candy:\n    gum_pieces = gum_packages * pieces_per_package\n    candy_pieces = candy_packages * pieces_per_package\n    # Finally, we can calculate the total number of pieces of candy:\n    total_pieces = gum_pieces + candy_pieces\n    return total_pieces\nans = solver()", "answer": 405.0}
{"question": "How much did she spend?", "passage": "After Olivia visited a supermarket there were 29 dollars left. If there were 54 dollars in her wallet initially.", "executed": 25.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: After Olivia visited a supermarket there were 29 dollars left. If there were 54 dollars in her wallet initially. How much did she spend?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. Olivia's initial money: x\n    # 2. Olivia's money left: y\n    # 3. Olivia's money spent: z\n    x = 54\n    y = 29\n    z = x - y\n    return z\nans = solver()", "answer": 25.0}
{"question": "How many trees died in the typhoon?", "passage": "Haley grew 20 trees in her backyard. After a typhoon 4 trees were left.", "executed": 16.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Haley grew 20 trees in her backyard. After a typhoon 4 trees were left. How many trees died in the typhoon?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # trees_before_typhoon = 20\n    # trees_after_typhoon = 4\n    trees_before_typhoon = 20\n    trees_after_typhoon = 4\n    # Now, we can calculate the number of trees died in the typhoon:\n    trees_died_in_typhoon = trees_before_typhoon - trees_after_typhoon\n    return trees_died_in_typhoon\nans = solver()", "answer": 16.0}
{"question": "How many peaches does Jake have?", "passage": "Jake has 7 fewer peaches than Steven who has 14 more peaches than Jill. Steven has 15 peaches.", "executed": -6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jake has 7 fewer peaches than Steven who has 14 more peaches than Jill. Steven has 15 peaches. How many peaches does Jake have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    jake = 0\n    steven = 0\n    jill = 0\n    # Now, we can define the equations:\n    jake = jill - 7\n    steven = jill + 14\n    steven = 15\n    # Now, we can solve the equations:\n    jill = steven - 14\n    jake = jill - 7\n    jake = steven - 21\n    jake = 15 - 21\n    jake = -6\n    return jake\nans = solver()", "answer": 8.0}
{"question": "How much money will have at the end of the harvest season?", "passage": "Lewis earns $ 491 every week during the 1181 weeks of harvest. If he has to pay $ 216 rent every week.", "executed": 324775.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Lewis earns $ 491 every week during the 1181 weeks of harvest. If he has to pay $ 216 rent every week. How much money will have at the end of the harvest season?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    rent = 216\n    income = 491\n    weeks = 1181\n    # Now, we can calculate the total income:\n    total_income = income * weeks\n    # And the total rent:\n    total_rent = rent * weeks\n    # Now, we can calculate the total money he will have at the end of the harvest season:\n    total_money = total_income - total_rent\n    return total_money\nans = solver()", "answer": 324775.0}
{"question": "How many pens did he sell in the garage sale?", "passage": "Paul had 51 books and 106 pens. After selling some books and pens in a garage sale he had 82 books and 14 pens left.", "executed": 92.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul had 51 books and 106 pens. After selling some books and pens in a garage sale he had 82 books and 14 pens left. How many pens did he sell in the garage sale?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # books_before = 51\n    # pens_before = 106\n    # books_after = 82\n    # pens_after = 14\n    books_before = 51\n    pens_before = 106\n    books_after = 82\n    pens_after = 14\n    # Now we can calculate the number of books sold in the garage sale:\n    books_sold = books_before - books_after\n    # And the number of pens sold in the garage sale:\n    pens_sold = pens_before - pens_after\n    return pens_sold\nans = solver()", "answer": 92.0}
{"question": "How many crunches did David do?", "passage": "Zachary did 44 push-ups and 17 crunches in gym class today. David did 29 more push-ups but 13 less crunches than zachary.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Zachary did 44 push-ups and 17 crunches in gym class today. David did 29 more push-ups but 13 less crunches than zachary. How many crunches did David do?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    zachary_push_ups = 44\n    zachary_crunches = 17\n    david_push_ups = zachary_push_ups + 29\n    david_crunches = zachary_crunches - 13\n    return david_crunches\nans = solver()", "answer": 4.0}
{"question": "How many pens did he sell in the garage sale?", "passage": "Paul had 42 pens and 143 books. After selling some books and pens in a garage sale he had 113 books and 19 pens left.", "executed": 23.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul had 42 pens and 143 books. After selling some books and pens in a garage sale he had 113 books and 19 pens left. How many pens did he sell in the garage sale?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    pens_before = 42\n    books_before = 143\n    pens_after = 19\n    books_after = 113\n    pens_sold = pens_before - pens_after\n    books_sold = books_before - books_after\n    return pens_sold\nans = solver()", "answer": 23.0}
{"question": "How many more bottle caps than wrappers does danny have now?", "passage": "Danny collects bottle caps and wrappers. He found 71 bottle caps and 24 wrappers at the park. Now he has 28 bottle caps and 16 wrappers in his collection.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Danny collects bottle caps and wrappers. He found 71 bottle caps and 24 wrappers at the park. Now he has 28 bottle caps and 16 wrappers in his collection. How many more bottle caps than wrappers does danny have now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bottle_caps_found = 71\n    wrappers_found = 24\n    bottle_caps_now = 28\n    wrappers_now = 16\n    # Now we can calculate the number of bottle caps and wrappers that Danny has collected:\n    bottle_caps_collected = bottle_caps_now - bottle_caps_found\n    wrappers_collected = wrappers_now - wrappers_found\n    # Now we can calculate the number of bottle caps and wrappers that Danny has now:\n    bottle_caps_now = bottle_caps_collected + bottle_caps_found\n    wrappers_now = wrappers_collected + wrappers_found\n    # Now we can calculate the number of bottle caps and wrappers that Danny has now:\n    bottle_caps_now = bottle_caps_collected + bottle_caps_found\n    wrappers_now = wrappers_collected + wrappers_found\n    # Now we can calculate the number of bottle caps and wrappers that Danny has now:\n    bottle_caps_now = bottle_caps_collected + bottle_caps_found\n    wrappers_now = wrappers_collected + wrappers_found\n    # Now we can calculate the number of bottle caps and wrappers that Danny has now:\n    bottle_caps_now = bottle_caps_collected + bottle_caps_found\n    wrappers_now = wrappers_collected + wrappers_found\n    # Now we can calculate the number of bottle caps and wrappers that Danny has now:\nans = solver()", "answer": 12.0}
{"question": "How much money is left?", "passage": "Dan has $ 4. He bought 99 candy bar for $ 3 each one costing the same amount of money.", "executed": -293.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dan has $ 4. He bought 99 candy bar for $ 3 each one costing the same amount of money. How much money is left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    money = 4\n    candy_bar_price = 3\n    candy_bar_number = 99\n    # Now we can calculate the total price of the candy bars:\n    total_price = candy_bar_price * candy_bar_number\n    # Now we can calculate the money left:\n    money_left = money - total_price\n    return money_left\nans = solver()", "answer": 1.0}
{"question": "How many more children got on the bus than those that got off?", "passage": "5 children were riding on the bus. At the bus stop 63 children got off the bus while some more got on the bus. Then there were 14 children altogether on the bus.", "executed": -49.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 5 children were riding on the bus. At the bus stop 63 children got off the bus while some more got on the bus. Then there were 14 children altogether on the bus. How many more children got on the bus than those that got off?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of children that got on the bus\n    # y = number of children that got off the bus\n    # z = number of children that were on the bus\n    # We can then write the following equations:\n    # x + y = z\n    # y = 63\n    # z = 14\n    # We can then solve for x:\n    x = 14 - 63\n    return x\nans = solver()", "answer": 9.0}
{"question": "How many days would the water bottles last?", "passage": "Debby bought 95 soda bottles and 180 water bottles when they were on sale. If she drank 15 water bottles and 54 soda bottles a day.", "executed": 1.7592592592592593, "generated": "\nimport math\nimport numpy as np\n\n# Question: Debby bought 95 soda bottles and 180 water bottles when they were on sale. If she drank 15 water bottles and 54 soda bottles a day. How many days would the water bottles last?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    soda_bottles = 95\n    water_bottles = 180\n    soda_drink = 54\n    water_drink = 15\n    soda_days = soda_bottles / soda_drink\n    water_days = water_bottles / water_drink\n    return min(soda_days, water_days)\nans = solver()", "answer": 12.0}
{"question": "How many cups of flour did she put in?", "passage": "Mary is baking a cake. The recipe calls for 3 cups of sugar and 10 cups of flour. She already put in some cups of flour. If she still needs 5 more cups of flour than sugar.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 3 cups of sugar and 10 cups of flour. She already put in some cups of flour. If she still needs 5 more cups of flour than sugar. How many cups of flour did she put in?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sugar = 3\n    flour = 10\n    flour_put_in = ?\n    flour_need = ?\n    sugar_need = ?\n    # Now, we can write the equations:\n    flour_need = flour - flour_put_in\n    sugar_need = sugar - (flour_need - 5)\n    # We can solve the equations:\n    flour_put_in = flour - flour_need\n    flour_need = flour - flour_put_in\n    sugar_need = sugar - (flour_need - 5)\n    return flour_put_in\nans = solver()", "answer": 2.0}
{"question": "How many rows could she make?", "passage": "Faye had 35 packs of pencils each one having 4 pencils. She was placing her pencils into rows with 2 pencils in each row.", "executed": 70.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Faye had 35 packs of pencils each one having 4 pencils. She was placing her pencils into rows with 2 pencils in each row. How many rows could she make?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # packs = 35\n    # pencils_per_pack = 4\n    # pencils_per_row = 2\n    packs = 35\n    pencils_per_pack = 4\n    pencils_per_row = 2\n    # Now, we can calculate the total number of pencils:\n    total_pencils = packs * pencils_per_pack\n    # Now, we can calculate the total number of rows:\n    total_rows = total_pencils / pencils_per_row\n    return total_rows\nans = solver()", "answer": 70.0}
{"question": "How many people can ride 20 Ferris wheels at the same time?", "passage": "Each Ferris wheel in paradise park has 19 seats. Each seat in a Ferris wheel can hold 15 people.", "executed": 5700.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Each Ferris wheel in paradise park has 19 seats. Each seat in a Ferris wheel can hold 15 people. How many people can ride 20 Ferris wheels at the same time?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    ferris_wheel_seats = 19\n    people_per_seat = 15\n    number_of_ferris_wheels = 20\n    # Now, we can calculate the number of people that can ride 20 Ferris wheels at the same time:\n    number_of_people = ferris_wheel_seats * people_per_seat * number_of_ferris_wheels\n    return number_of_people\nans = solver()", "answer": 5700.0}
{"question": "How many pieces of candy does he still have left?", "passage": "Bobby had 19 pieces of candy. He ate 2 pieces of candy.", "executed": 17.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bobby had 19 pieces of candy. He ate 2 pieces of candy. How many pieces of candy does he still have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    candy_pieces = 19\n    candy_pieces_ate = 2\n    candy_pieces_left = candy_pieces - candy_pieces_ate\n    return candy_pieces_left\nans = solver()", "answer": 17.0}
{"question": "How many pieces of candy did Bobby eat?", "passage": "Bobby had 20 pieces of candy. He ate 34 pieces of candy. Then he ate 18 more.", "executed": 52.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bobby had 20 pieces of candy. He ate 34 pieces of candy. Then he ate 18 more. How many pieces of candy did Bobby eat?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    initial_candy = 20\n    first_eat = 34\n    second_eat = 18\n    total_eat = first_eat + second_eat\n    return total_eat\nans = solver()", "answer": 52.0}
{"question": "How many more visitors visited the Buckingham palace on that day than on the previous 245 days?", "passage": "After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that 705 visitors came to the Buckingham palace that day. If there were 191 visitors the previous day and 457 visitors the day before that.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that 705 visitors came to the Buckingham palace that day. If there were 191 visitors the previous day and 457 visitors the day before that. How many more visitors visited the Buckingham palace on that day than on the previous 245 days?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   visitors_today = 705\n    #   visitors_yesterday = 191\n    #   visitors_day_before_yesterday = 457\n    visitors_today = 705\n    visitors_yesterday = 191\n    visitors_day_before_yesterday = 457\n    # Now, we can calculate the visitors_day_before_day_before_yesterday\n    visitors_day_before_day_before_yesterday = visitors_yesterday - visitors_day_before_yesterday\n    # Now, we can calculate the visitors_day_before_day_before_day_before_yesterday\n    visitors_day_before_day_before_day_before_yesterday = visitors_day_before_yesterday - visitors_day_before_day_before_yesterday\n    # Now, we can calculate the visitors_day_before_day_before_day_before_day_before_yesterday\n    visitors_day_before_day_before_day_before_day_before_yesterday = visitors_day_before_day_before_yesterday - visitors_day_before_day_before_day_before_yesterday\n    # Now, we can calculate the visitors_day_before_day_before_day_before_day_before_day_before_yesterday\n    visitors_day_before_day_before_day_before_day_before_day_before_yesterday = visitors_day_before_day_before_day_before_yesterday - visitors_day_before_\nans = solver()", "answer": 57.0}
{"question": "How many books did he sell in the garage sale?", "passage": "Paul had 108 books and 55 pens. After selling some books and pens in a garage sale he had 66 books and 59 pens left.", "executed": 0.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul had 108 books and 55 pens. After selling some books and pens in a garage sale he had 66 books and 59 pens left. How many books did he sell in the garage sale?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    books_before = 108\n    pens_before = 55\n    books_after = 66\n    pens_after = 59\n    # We can also define the unknown variable:\n    books_sold = 0\n    # Now we can write the equation:\n    books_before = books_after + books_sold\n    pens_before = pens_after + books_sold\n    # We can solve the equation:\n    books_sold = books_before - books_after\n    pens_sold = pens_before - pens_after\n    # We can check the answer:\n    books_before_check = books_after + books_sold\n    pens_before_check = pens_after + pens_sold\n    print(\"books_before_check:\", books_before_check)\n    print(\"pens_before_check:\", pens_before_check)\n    # We can return the answer:\n    return books_sold\nans = solver()", "answer": 42.0}
{"question": "How much did Marco's strawberries weigh?", "passage": "Marco and his dad went strawberry picking. Marco's dad's strawberries weighed 11 pounds. If together their strawberries weighed 30 pounds.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Marco and his dad went strawberry picking. Marco's dad's strawberries weighed 11 pounds. If together their strawberries weighed 30 pounds. How much did Marco's strawberries weigh?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marcos_dad_strawberries = 11\n    marcos_strawberries = ?\n    total_strawberries = 30\n    # Now we can write the equation:\n    marcos_dad_strawberries + marcos_strawberries = total_strawberries\n    # We can solve for marcos_strawberries:\n    marcos_strawberries = total_strawberries - marcos_dad_strawberries\n    return marcos_strawberries\nans = solver()", "answer": 19.0}
{"question": "How many kids did she play with on monday and wednesday?", "passage": "Julia played tag with 5 kids on monday, 9 kids on tuesday and 15 kids on wednesday.", "executed": 20.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Julia played tag with 5 kids on monday, 9 kids on tuesday and 15 kids on wednesday. How many kids did she play with on monday and wednesday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 5\n    tuesday = 9\n    wednesday = 15\n    # Now, we can calculate the answer:\n    answer = monday + wednesday\n    return answer\nans = solver()", "answer": 20.0}
{"question": "How much did his dad's strawberries weigh?", "passage": "Marco and his dad went strawberry picking. Marco's strawberries weighed 15 pounds. If together their strawberries weighed 37 pounds.", "executed": 22.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Marco and his dad went strawberry picking. Marco's strawberries weighed 15 pounds. If together their strawberries weighed 37 pounds. How much did his dad's strawberries weigh?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marco_strawberries = 15\n    total_strawberries = 37\n    dad_strawberries = total_strawberries - marco_strawberries\n    return dad_strawberries\nans = solver()", "answer": 22.0}
{"question": "How many boxes are in each case if she needs to deliver 5 cases of boxes?", "passage": "Shirley sold 10 boxes of trefoils.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Shirley sold 10 boxes of trefoils. How many boxes are in each case if she needs to deliver 5 cases of boxes?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    boxes_per_case = None\n    total_boxes = 10\n    total_cases = 5\n    # Now, we can calculate the boxes_per_case:\n    boxes_per_case = total_boxes / total_cases\n    return boxes_per_case\nans = solver()", "answer": 2.0}
{"question": "How many crayons had been lost or given away?", "passage": "Paul got a box of 521 crayons and 66 erasers for his birthday. At the end of the school year he only had 154 left while not having lost a single erasers.", "executed": 367.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul got a box of 521 crayons and 66 erasers for his birthday. At the end of the school year he only had 154 left while not having lost a single erasers. How many crayons had been lost or given away?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    crayons_at_start = 521\n    erasers_at_start = 66\n    crayons_at_end = 154\n    erasers_at_end = 66\n    crayons_lost = crayons_at_start - crayons_at_end\n    erasers_lost = erasers_at_start - erasers_at_end\n    return crayons_lost\nans = solver()", "answer": 367.0}
{"question": "How many push-ups did Zachary and David do altogether?", "passage": "David did 56 more push-ups than Zachary in gym class today. If David did 38 push-ups.", "executed": 20.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: David did 56 more push-ups than Zachary in gym class today. If David did 38 push-ups. How many push-ups did Zachary and David do altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    zachary = 0\n    david = 0\n    total = 0\n    # Now, we can define the equations:\n    total = zachary + david\n    david = zachary + 56\n    david = 38\n    # Now, we can solve the equations:\n    zachary = david - 56\n    total = zachary + david\n    return total\nans = solver()", "answer": 20.0}
{"question": "How many more wrappers than bottle caps does danny have now?", "passage": "Danny collects bottle caps and wrappers. He found 10 bottle caps and 62 wrappers at the park. Now he has 27 bottle caps and 43 wrappers in his collection.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Danny collects bottle caps and wrappers. He found 10 bottle caps and 62 wrappers at the park. Now he has 27 bottle caps and 43 wrappers in his collection. How many more wrappers than bottle caps does danny have now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bottle_caps = 10\n    wrappers = 62\n    bottle_caps_now = 27\n    wrappers_now = 43\n    # Now we can calculate the difference between the wrappers and bottle caps now and before\n    wrappers_diff = wrappers_now - wrappers\n    bottle_caps_diff = bottle_caps_now - bottle_caps\n    # Now we can calculate the difference between the wrappers and bottle caps now and before\n    wrappers_diff = wrappers_now - wrappers\n    bottle_caps_diff = bottle_caps_now - bottle_caps\n    # Now we can calculate the difference between the wrappers and bottle caps now and before\n    wrappers_diff = wrappers_now - wrappers\n    bottle_caps_diff = bottle_caps_now - bottle_caps\n    # Now we can calculate the difference between the wrappers and bottle caps now and before\n    wrappers_diff = wrappers_now - wrappers\n    bottle_caps_diff = bottle_caps_now - bottle_caps\n    # Now we can calculate the difference between the wrappers and bottle caps now and before\n    wrappers_diff = wrappers_now - wrappers\n    bottle_caps_diff = bottle_caps_now - bottle_caps\n    # Now we can calculate the difference between the wrappers and bottle caps now and before\n    wrappers_diff = wrappers_now - wrappers\n    bottle_caps_diff = bottle_caps_now - bottle_caps\n    # Now we can calculate the difference between\nans = solver()", "answer": 16.0}
{"question": "How many bags did she find after monday?", "passage": "Tiffany was collecting cans for recycling. On monday she had 8 bags of cans. She found 10 bags of cans on the next day and 4 bags of cans the day after that.", "executed": 22.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Tiffany was collecting cans for recycling. On monday she had 8 bags of cans. She found 10 bags of cans on the next day and 4 bags of cans the day after that. How many bags did she find after monday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 8\n    tuesday = 10\n    wednesday = 4\n    # Now, we can calculate the total number of cans:\n    total_cans = monday + tuesday + wednesday\n    return total_cans\nans = solver()", "answer": 14.0}
{"question": "How many rows could she make?", "passage": "Faye was placing her pencils into rows with 16 pencils in each row. She had 28 packs of pencils each one having 24 pencils.", "executed": 42.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Faye was placing her pencils into rows with 16 pencils in each row. She had 28 packs of pencils each one having 24 pencils. How many rows could she make?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    packs = 28\n    pencils_per_pack = 24\n    pencils_per_row = 16\n    # Now, we can calculate the total number of pencils:\n    total_pencils = packs * pencils_per_pack\n    # Now, we can calculate the total number of rows:\n    total_rows = total_pencils / pencils_per_row\n    return total_rows\nans = solver()", "answer": 42.0}
{"question": "How many more storks than birds are sitting on the fence?", "passage": "4 birds and 3 storks were sitting on the fence. 6 more storks came to join them.", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 4 birds and 3 storks were sitting on the fence. 6 more storks came to join them. How many more storks than birds are sitting on the fence?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    birds = 4\n    storks = 3\n    more_storks = 6\n    # Now, we can calculate the total number of storks:\n    total_storks = storks + more_storks\n    # Now, we can calculate the total number of birds and storks:\n    total_birds_and_storks = birds + total_storks\n    # Now, we can calculate the difference between the total number of storks and birds:\n    difference = total_storks - birds\n    return difference\nans = solver()", "answer": 5.0}
{"question": "How much does she weigh now?", "passage": "Jessie weighed 114 kilograms. After she started to go jogging everyday she lost 50 kilograms in the first week and 60 kilograms in the second week.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jessie weighed 114 kilograms. After she started to go jogging everyday she lost 50 kilograms in the first week and 60 kilograms in the second week. How much does she weigh now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    weight_before = 114\n    weight_after_1st_week = weight_before - 50\n    weight_after_2nd_week = weight_after_1st_week - 60\n    return weight_after_2nd_week\nans = solver()", "answer": 4.0}
{"question": "How much does each pack cost?", "passage": "6 packs of dvds can be bought with 120 dollars.", "executed": 20.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 6 packs of dvds can be bought with 120 dollars. How much does each pack cost?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x: the price of each pack\n    x = 0\n    # y: the number of packs\n    y = 6\n    # z: the total price\n    z = 120\n    # Now, we can write the equation:\n    # x * y = z\n    x = z / y\n    return x\nans = solver()", "answer": 20.0}
{"question": "How many more kids did she play with on monday than on wednesday?", "passage": "Julia played tag with 14 kids on monday, 2 kids on tuesday and 8 kids on wednesday.", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Julia played tag with 14 kids on monday, 2 kids on tuesday and 8 kids on wednesday. How many more kids did she play with on monday than on wednesday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 14\n    tuesday = 2\n    wednesday = 8\n    # Now, we can calculate the difference between monday and wednesday\n    difference = monday - wednesday\n    return difference\nans = solver()", "answer": 6.0}
{"question": "How many people were present in the program?", "passage": "There were 73 parents, 724 pupils and 744 teachers in the program.", "executed": 1541.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 73 parents, 724 pupils and 744 teachers in the program. How many people were present in the program?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    parents = 73\n    pupils = 724\n    teachers = 744\n    # Now, we can define the total number of people in the program:\n    total_people = parents + pupils + teachers\n    return total_people\nans = solver()", "answer": 1541.0}
{"question": "How many people are there on the train now?", "passage": "At the stop 8 more people got on the train. Initially there were 11 people on the train.", "executed": 19.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the stop 8 more people got on the train. Initially there were 11 people on the train. How many people are there on the train now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    people_on_train = 11\n    people_got_on = 8\n    people_on_train_now = people_on_train + people_got_on\n    return people_on_train_now\nans = solver()", "answer": 19.0}
{"question": "How many bags would he have?", "passage": "Frank had 33 pieces of candy. He lost 24 of them. If he put the remaining pieces into bags with 9 pieces in each bag.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank had 33 pieces of candy. He lost 24 of them. If he put the remaining pieces into bags with 9 pieces in each bag. How many bags would he have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    total_candy = 33\n    lost_candy = 24\n    bag_size = 9\n    # Now we can calculate the remaining candy:\n    remaining_candy = total_candy - lost_candy\n    # Now we can calculate the number of bags:\n    num_bags = math.ceil(remaining_candy / bag_size)\n    return num_bags\nans = solver()", "answer": 1.0}
{"question": "How many books are there in each bookshelf?", "passage": "Bryan took a look at his books as well. If he has 34 books distributed equally in 2 bookshelves.", "executed": 17.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bryan took a look at his books as well. If he has 34 books distributed equally in 2 bookshelves. How many books are there in each bookshelf?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    books = 34\n    bookshelves = 2\n    books_per_bookshelf = books / bookshelves\n    return books_per_bookshelf\nans = solver()", "answer": 17.0}
{"question": "How many new customers arrived?", "passage": "A waiter had 3 customers. After some more arrived he had 8 customers.", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter had 3 customers. After some more arrived he had 8 customers. How many new customers arrived?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of customers before\n    # y = number of customers after\n    # z = number of new customers\n    x = 3\n    y = 8\n    z = y - x\n    return z\nans = solver()", "answer": 5.0}
{"question": "How many guests did she prepare cookies for?", "passage": "Brenda's mother made cookies for guests. If she prepared 38 cookies and each of them had 19 cookies.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Brenda's mother made cookies for guests. If she prepared 38 cookies and each of them had 19 cookies. How many guests did she prepare cookies for?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookies = 38\n    cookies_per_guest = 19\n    guests = cookies / cookies_per_guest\n    return guests\nans = solver()", "answer": 2.0}
{"question": "How many sets of tables do they have?", "passage": "They decided to hold the party in their backyard. They have some sets of tables, each having the 3 chairs. If there are a total of 9 chairs in the backyard.", "executed": 0.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: They decided to hold the party in their backyard. They have some sets of tables, each having the 3 chairs. If there are a total of 9 chairs in the backyard. How many sets of tables do they have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   a: number of sets of tables\n    #   b: number of chairs in the backyard\n    a = 0\n    b = 9\n    # Now, we can use the formula:\n    #   a * 3 + b = 9\n    a = (b - b) / 3\n    return a\nans = solver()", "answer": 3.0}
{"question": "How many rounds did he play?", "passage": "Luke played a trivia game and scored 154 points. If he gained the 11 points in each round.", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Luke played a trivia game and scored 154 points. If he gained the 11 points in each round. How many rounds did he play?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # score = 154\n    # round = ?\n    # points = 11\n    score = 154\n    points = 11\n    round = score / points\n    return round\nans = solver()", "answer": 14.0}
{"question": "How many emails did jack receive in the evening?", "passage": "Jack received 3 emails in the afternoon, 6 emails in the morning and some more in the evening. If he received a total of 10 emails in the day.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jack received 3 emails in the afternoon, 6 emails in the morning and some more in the evening. If he received a total of 10 emails in the day. How many emails did jack receive in the evening?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    afternoon = 3\n    morning = 6\n    evening = ?\n    total = 10\n    # We can also define the constraints:\n    afternoon + morning + evening = total\n    evening > 0\n    # Now we can use the constraints to derive the answer:\n    evening = total - afternoon - morning\n    return evening\nans = solver()", "answer": 1.0}
{"question": "How many peaches are in each basket?", "passage": "There are 65 baskets of peaches. Each basket has 7 red peaches and 3 green peaches.", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 65 baskets of peaches. Each basket has 7 red peaches and 3 green peaches. How many peaches are in each basket?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   - number of baskets: n_baskets\n    #   - number of red peaches: n_red_peaches\n    #   - number of green peaches: n_green_peaches\n    n_baskets = 65\n    n_red_peaches = 7\n    n_green_peaches = 3\n    # We can also define the number of peaches in each basket:\n    n_peaches_per_basket = n_red_peaches + n_green_peaches\n    # Now, we can calculate the total number of peaches:\n    n_peaches = n_baskets * n_peaches_per_basket\n    # Finally, we can calculate the number of peaches in each basket:\n    n_peaches_per_basket = n_peaches / n_baskets\n    return n_peaches_per_basket\nans = solver()", "answer": 10.0}
{"question": "How many students are going on the trip?", "passage": "The school is planning a field trip. The school has 102 classrooms. There are 11 students in the school and 99 seats on each school bus. If 8 students do n't want to go for the trip.", "executed": 101.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school is planning a field trip. The school has 102 classrooms. There are 11 students in the school and 99 seats on each school bus. If 8 students do n't want to go for the trip. How many students are going on the trip?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    students = 11\n    seats = 99\n    classrooms = 102\n    students_not_going = 8\n    students_going = students - students_not_going\n    buses = math.ceil(students_going / seats)\n    classrooms_not_used = classrooms - buses\n    return classrooms_not_used\nans = solver()", "answer": 3.0}
{"question": "How much more carpet does she need to cover the whole floor?", "passage": "Jesse's room is 11 feet long and 15 feet wide. If she already has 16 square feet of carpet.", "executed": 149.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jesse's room is 11 feet long and 15 feet wide. If she already has 16 square feet of carpet. How much more carpet does she need to cover the whole floor?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    length = 11\n    width = 15\n    carpet_area = 16\n    # Now, we can calculate the area of the room:\n    room_area = length * width\n    # Now, we can calculate the area of the carpet needed:\n    carpet_needed = room_area - carpet_area\n    return carpet_needed\nans = solver()", "answer": 149.0}
{"question": "How many more peaches than apples does Steven have?", "passage": "Jake has 6 fewer peaches and 8 more apples than Steven. Steven has 17 peaches and 16 apples.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jake has 6 fewer peaches and 8 more apples than Steven. Steven has 17 peaches and 16 apples. How many more peaches than apples does Steven have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Jake's peaches = x\n    # Jake's apples = y\n    # Steven's peaches = z\n    # Steven's apples = w\n    # Then we can write the equations:\n    # x = z - 6\n    # y = w + 8\n    # z = 17\n    # w = 16\n    # We can solve the equations to get the answer:\n    x = 17 - 6\n    y = 16 + 8\n    z = 17\n    w = 16\n    answer = z - w\n    return answer\nans = solver()", "answer": 1.0}
{"question": "How many bottle caps did danny have at first?", "passage": "Danny collects bottle caps. He threw away 60 of the old ones at the park while he found 58 bottle caps new ones. Now he has 67 bottle caps in his collection.", "executed": 69.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Danny collects bottle caps. He threw away 60 of the old ones at the park while he found 58 bottle caps new ones. Now he has 67 bottle caps in his collection. How many bottle caps did danny have at first?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    old_caps = 60\n    new_caps = 58\n    total_caps = 67\n    # Now we can derive the answer:\n    first_caps = total_caps - new_caps + old_caps\n    return first_caps\nans = solver()", "answer": 69.0}
{"question": "How many cards did Nell give to Jeff?", "passage": "Nell collects baseball cards. She had 573 cards. She gave 195 cards to John and yet some more to Jeff. Now she has 210 cards left.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Nell collects baseball cards. She had 573 cards. She gave 195 cards to John and yet some more to Jeff. Now she has 210 cards left. How many cards did Nell give to Jeff?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    Nell = 573\n    John = 195\n    Jeff = ?\n    Nell_left = 210\n    # Now we can write the equation:\n    Nell = John + Jeff + Nell_left\n    # We can solve the equation:\n    Jeff = Nell - John - Nell_left\n    return Jeff\nans = solver()", "answer": 168.0}
{"question": "How many more grams of wax does he need?", "passage": "Next on his checklist is wax to stick the feathers together. If he currently has 11 g of wax and the feathers require a total of 492 g of wax.", "executed": 481.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Next on his checklist is wax to stick the feathers together. If he currently has 11 g of wax and the feathers require a total of 492 g of wax. How many more grams of wax does he need?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    current_wax = 11\n    required_wax = 492\n    # Now, we can calculate the difference between the required wax and the current wax\n    wax_difference = required_wax - current_wax\n    return wax_difference\nans = solver()", "answer": 481.0}
{"question": "How many bird families were left near the mountain?", "passage": "Winter is almost here and most animals are migrating to warmer countries. There are 49 bird families living near the mountain. 59 bird families flew away for winter and 24 new bird families came to live near the mountain from the arctic.", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Winter is almost here and most animals are migrating to warmer countries. There are 49 bird families living near the mountain. 59 bird families flew away for winter and 24 new bird families came to live near the mountain from the arctic. How many bird families were left near the mountain?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bird_families_near_mountain = 49\n    bird_families_flew_away = 59\n    bird_families_came_from_arctic = 24\n    bird_families_left_near_mountain = bird_families_near_mountain - bird_families_flew_away + bird_families_came_from_arctic\n    return bird_families_left_near_mountain\nans = solver()", "answer": 14.0}
{"question": "How many peaches does Jake have?", "passage": "Steven has 19 peaches. Jake has 12 fewer peaches than Steven and 72 more peaches than Jill.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Steven has 19 peaches. Jake has 12 fewer peaches than Steven and 72 more peaches than Jill. How many peaches does Jake have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    steven = 19\n    jake = steven - 12\n    jill = jake - 72\n    return jake\nans = solver()", "answer": 7.0}
{"question": "How many marbles did he have in his collection?", "passage": "Josh had some marbles in his collection. He lost 21 marbles. If he has 12 marbles now.", "executed": 33.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Josh had some marbles in his collection. He lost 21 marbles. If he has 12 marbles now. How many marbles did he have in his collection?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marbles_lost = 21\n    marbles_now = 12\n    marbles_collection = marbles_now + marbles_lost\n    return marbles_collection\nans = solver()", "answer": 33.0}
{"question": "How many animals does he have in total?", "passage": "He had 15 aquariums for saltwater animals and 62 aquariums for freshwater animals. Each aquarium has 19 animals in it.", "executed": 1463.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He had 15 aquariums for saltwater animals and 62 aquariums for freshwater animals. Each aquarium has 19 animals in it. How many animals does he have in total?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    saltwater_aquariums = 15\n    freshwater_aquariums = 62\n    animals_per_aquarium = 19\n    total_animals = saltwater_aquariums * animals_per_aquarium + freshwater_aquariums * animals_per_aquarium\n    return total_animals\nans = solver()", "answer": 1463.0}
{"question": "How much did she weigh before starting to jog?", "passage": "Jessie currently weighs 27 kilograms. After she started to go jogging everyday she lost 101 kilograms.", "executed": 128.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jessie currently weighs 27 kilograms. After she started to go jogging everyday she lost 101 kilograms. How much did she weigh before starting to jog?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    current_weight = 27\n    lost_weight = 101\n    # Now we can calculate the answer:\n    before_weight = current_weight + lost_weight\n    return before_weight\nans = solver()", "answer": 128.0}
{"question": "How much money did he have initially?", "passage": "Dan has $ 3 left with him after he bought a candy bar for $ 2.", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dan has $ 3 left with him after he bought a candy bar for $ 2. How much money did he have initially?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # money_initially = ?\n    # money_left = 3\n    # candy_bar_price = 2\n    # money_initially = money_left + candy_bar_price\n    return 3 + 2\nans = solver()", "answer": 5.0}
{"question": "How many push-ups and crunches did Zachary do?", "passage": "Zachary did 53 push-ups and 14 crunches in gym class today. David did 17 more push-ups but 10 less crunches than zachary.", "executed": 53.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Zachary did 53 push-ups and 14 crunches in gym class today. David did 17 more push-ups but 10 less crunches than zachary. How many push-ups and crunches did Zachary do?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    zachary_push_ups = 53\n    zachary_crunches = 14\n    david_push_ups = zachary_push_ups + 17\n    david_crunches = zachary_crunches - 10\n    return zachary_push_ups, zachary_crunches\nans = solver()", "answer": 67.0}
{"question": "How many more pages does the first chapter have than the second chapter?", "passage": "A book has 3 chapters. The first chapter is 91 pages long the second chapter is 23 pages long and the third chapter is 25 pages long.", "executed": 68.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A book has 3 chapters. The first chapter is 91 pages long the second chapter is 23 pages long and the third chapter is 25 pages long. How many more pages does the first chapter have than the second chapter?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    first_chapter = 91\n    second_chapter = 23\n    third_chapter = 25\n    # Now, we can calculate the difference between the first chapter and the second chapter:\n    difference = first_chapter - second_chapter\n    return difference\nans = solver()", "answer": 68.0}
{"question": "How many more bottle caps did danny find at the park than those he threw away?", "passage": "Danny collects bottle caps. He found 36 bottle caps at the park while he threw away 35 old ones. Now he has 22 bottle caps in his collection.", "executed": 22.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Danny collects bottle caps. He found 36 bottle caps at the park while he threw away 35 old ones. Now he has 22 bottle caps in his collection. How many more bottle caps did danny find at the park than those he threw away?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   x: the number of bottle caps Danny found at the park\n    #   y: the number of bottle caps Danny threw away\n    #   z: the number of bottle caps Danny has in his collection\n    # Then we can write the equations:\n    #   x + y = 36\n    #   x - y = 22\n    #   z = x\n    # We can solve the equations by using the numpy.linalg.solve() function\n    x, y = np.linalg.solve([[1, 1], [1, -1]], [36, 22])\n    z = x\n    return z - y\nans = solver()", "answer": 1.0}
{"question": "How much money is left?", "passage": "Dan has $ 4. For a total of $ 3 he bought 10 candy bar each one costing the same amount of money.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dan has $ 4. For a total of $ 3 he bought 10 candy bar each one costing the same amount of money. How much money is left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    money_dan_has = 4\n    money_dan_spent = 3\n    number_of_candy_bars = 10\n    # Now, we can calculate the money_dan_has_left\n    money_dan_has_left = money_dan_has - money_dan_spent\n    # Finally, we can return the answer\n    return money_dan_has_left\nans = solver()", "answer": 1.0}
{"question": "How many more cups of flour than cups of sugar does she need to add now?", "passage": "Mary is baking a cake. The recipe calls for 6 cups of sugar and 9 cups of flour. She already put in 2 cups of flour.", "executed": -1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 6 cups of sugar and 9 cups of flour. She already put in 2 cups of flour. How many more cups of flour than cups of sugar does she need to add now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sugar = 6\n    flour = 9\n    flour_added = 2\n    # Now, we need to calculate the difference between the flour and sugar\n    flour_diff = flour - sugar\n    # Now, we need to calculate the difference between the flour_added and flour_diff\n    flour_added_diff = flour_added - flour_diff\n    return flour_added_diff\nans = solver()", "answer": 1.0}
{"question": "How many snakes were not hiding?", "passage": "At the zoo, a cage had 95 snakes and 61 alligators. If 64 snakes were hiding.", "executed": 31.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the zoo, a cage had 95 snakes and 61 alligators. If 64 snakes were hiding. How many snakes were not hiding?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    snakes = 95\n    alligators = 61\n    hiding_snakes = 64\n    not_hiding_snakes = 0\n    # Now, we can use the variables to calculate the answer:\n    not_hiding_snakes = snakes - hiding_snakes\n    return not_hiding_snakes\nans = solver()", "answer": 31.0}
{"question": "How many beads did each necklace need?", "passage": "Emily is making bead necklaces for her friends. She was able to make 6 necklaces and she had 18 beads.", "executed": 108.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Emily is making bead necklaces for her friends. She was able to make 6 necklaces and she had 18 beads. How many beads did each necklace need?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of beads in each necklace\n    # y = number of necklaces\n    # z = number of beads\n    x = 6\n    y = 18\n    z = x * y\n    return z\nans = solver()", "answer": 3.0}
{"question": "How many bags of cans did she have altogether?", "passage": "Tiffany was collecting cans for recycling. On monday she had 3 bags of cans. The next day she found 7 more bags of cans and 44 bags of bottles.", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Tiffany was collecting cans for recycling. On monday she had 3 bags of cans. The next day she found 7 more bags of cans and 44 bags of bottles. How many bags of cans did she have altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cans_monday = 3\n    cans_tuesday = 7\n    bottles_tuesday = 44\n    cans_total = cans_monday + cans_tuesday\n    return cans_total\nans = solver()", "answer": 10.0}
{"question": "How many packages does Robin have?", "passage": "Robin has some packages of gum. There are 7 pieces in each package. Robin has 6 extra pieces of gum. In all the number of pieces of gums robin has is 41.", "executed": 0.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Robin has some packages of gum. There are 7 pieces in each package. Robin has 6 extra pieces of gum. In all the number of pieces of gums robin has is 41. How many packages does Robin have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x: the number of packages of gum\n    # y: the number of extra pieces of gum\n    # z: the number of pieces of gum in total\n    x = 0\n    y = 0\n    z = 0\n    # According to the question, we can define the equations:\n    # x * 7 + y = z\n    # x + y = 41\n    # We can solve the equations by using the following code:\n    x = (z - y) / 7\n    y = 41 - x\n    z = x * 7 + y\n    return x\nans = solver()", "answer": 5.0}
{"question": "How many cakes would baker still have?", "passage": "Baker made 155 cakes. If his friend bought 140 cakes from him.", "executed": 15.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 155 cakes. If his friend bought 140 cakes from him. How many cakes would baker still have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cakes_baker_made = 155\n    cakes_baker_friend_bought = 140\n    cakes_baker_still_have = cakes_baker_made - cakes_baker_friend_bought\n    return cakes_baker_still_have\nans = solver()", "answer": 15.0}
{"question": "How many more children are on the bus now than there were before the bus stop?", "passage": "2 children were riding on the bus. At the bus stop some more children got on the bus. Then there were 10 children altogether on the bus.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 2 children were riding on the bus. At the bus stop some more children got on the bus. Then there were 10 children altogether on the bus. How many more children are on the bus now than there were before the bus stop?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # children_before_bus_stop = 2\n    # children_after_bus_stop = 10\n    children_before_bus_stop = 2\n    children_after_bus_stop = 10\n    # Now we can calculate the number of children who got on the bus at the bus stop:\n    children_got_on_bus = children_after_bus_stop - children_before_bus_stop\n    return children_got_on_bus\nans = solver()", "answer": 8.0}
{"question": "How many bottle caps did danny have at first?", "passage": "Danny collects bottle caps and wrappers. He found 22 bottle caps and 8 wrappers at the park. Now he has 28 bottle caps and 63 wrappers in his collection.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Danny collects bottle caps and wrappers. He found 22 bottle caps and 8 wrappers at the park. Now he has 28 bottle caps and 63 wrappers in his collection. How many bottle caps did danny have at first?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bottle_caps_at_first = 0\n    bottle_caps_at_park = 22\n    bottle_caps_at_home = 28\n    wrappers_at_first = 0\n    wrappers_at_park = 8\n    wrappers_at_home = 63\n    # We can also define the constants:\n    bottle_caps_per_wrapper = 4\n    wrappers_per_bottle_cap = 1\n    # Now we can derive the answer:\n    bottle_caps_at_first = bottle_caps_at_home - bottle_caps_at_park + bottle_caps_at_first\n    wrappers_at_first = wrappers_at_home - wrappers_at_park + wrappers_at_first\n    bottle_caps_at_first = bottle_caps_at_first + wrappers_at_first * bottle_caps_per_wrapper\n    wrappers_at_first = wrappers_at_first + bottle_caps_at_first * wrappers_per_bottle_cap\n    bottle_caps_at_first = bottle_caps_at_first + wrappers_at_first * bottle_caps_per_wrapper\n    wrappers_at_first = wrappers_at_first + bottle_caps_at_first * wrappers_per_bottle_cap\n    bottle_caps_at_first = bottle_caps_at_first + wrappers_at_first * bottle_caps_per_wrapper\n    wrappers_at_first =\nans = solver()", "answer": 6.0}
{"question": "How many planks does John need for the house wall?", "passage": "For the walls of the house he would use 8 large planks of wood. If each plank of wood needs 74 pieces of nails to be secured.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: For the walls of the house he would use 8 large planks of wood. If each plank of wood needs 74 pieces of nails to be secured. How many planks does John need for the house wall?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. The number of planks of wood needed for the house wall\n    # 2. The number of pieces of nails needed for each plank of wood\n    # 3. The number of pieces of nails needed for the house wall\n    # 4. The number of planks of wood needed for the house wall\n    # 5. The number of pieces of nails needed for each plank of wood\n    # 6. The number of pieces of nails needed for the house wall\n    # 7. The number of planks of wood needed for the house wall\n    # 8. The number of pieces of nails needed for each plank of wood\n    # 9. The number of pieces of nails needed for the house wall\n    # 10. The number of planks of wood needed for the house wall\n    # 11. The number of pieces of nails needed for each plank of wood\n    # 12. The number of pieces of nails needed for the house wall\n    # 13. The number of planks of wood needed for the house wall\n    # 14. The number of pieces of nails needed for each plank of wood\n    # 15. The number of pieces of nails needed for the house wall\n    # 16. The number of planks of wood needed for the house wall\n    # 17. The number of pieces of nails needed for each plank of wood\n    # 18. The number of pieces of nails needed for the house wall\n    # 19. The number of planks of wood needed for the house wall\n    # 20. The number of pieces of nails needed for each plank of wood\n    # 21. The\nans = solver()", "answer": 8.0}
{"question": "How many cookies did Paco have left?", "passage": "Paco ate 36 cookies. If he had 37 cookies initially.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paco ate 36 cookies. If he had 37 cookies initially. How many cookies did Paco have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookies_ate = 36\n    cookies_initially = 37\n    cookies_left = cookies_initially - cookies_ate\n    return cookies_left\nans = solver()", "answer": 1.0}
{"question": "How many pieces of candy does he still have left?", "passage": "Bobby had 21 pieces of candy. He ate 5 pieces of candy. Then he ate 9 more.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bobby had 21 pieces of candy. He ate 5 pieces of candy. Then he ate 9 more. How many pieces of candy does he still have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    candy_pieces = 21\n    candy_pieces_ate = 5\n    candy_pieces_ate_more = 9\n    candy_pieces_left = candy_pieces - candy_pieces_ate - candy_pieces_ate_more\n    return candy_pieces_left\nans = solver()", "answer": 7.0}
{"question": "How many cakes did baker sell?", "passage": "Baker made 54 cakes. He sold some of them. If he still has 13 cakes left.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 54 cakes. He sold some of them. If he still has 13 cakes left. How many cakes did baker sell?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cakes_baker_made = 54\n    cakes_baker_sold = ?\n    cakes_baker_left = 13\n    # Now, we can write the equation:\n    cakes_baker_sold = cakes_baker_made - cakes_baker_left\n    return cakes_baker_sold\nans = solver()", "answer": 41.0}
{"question": "How many more kids spent their summer break at the camp compared to those who stayed home?", "passage": "During summer break 819058 kids from Lawrence county go to camp and the other 668278 kids stay home.", "executed": 150780.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: During summer break 819058 kids from Lawrence county go to camp and the other 668278 kids stay home. How many more kids spent their summer break at the camp compared to those who stayed home?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    kids_at_camp = 819058\n    kids_at_home = 668278\n    # Now, we can calculate the difference between the two variables:\n    difference = kids_at_camp - kids_at_home\n    return difference\nans = solver()", "answer": 150780.0}
{"question": "How many blocks are left?", "passage": "Randy has 79 blocks. He uses 14 blocks to build a tower and 11 blocks to build a house.", "executed": 54.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Randy has 79 blocks. He uses 14 blocks to build a tower and 11 blocks to build a house. How many blocks are left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    tower = 14\n    house = 11\n    total = 79\n    left = total - tower - house\n    return left\nans = solver()", "answer": 54.0}
{"question": "How many hours does he spend on learning english, chinese and spanish in all?", "passage": "Every day Ryan spends 6 hours on learning english 7 hours on learning chinese and 3 hours on learning spanish.", "executed": 16.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Every day Ryan spends 6 hours on learning english 7 hours on learning chinese and 3 hours on learning spanish. How many hours does he spend on learning english, chinese and spanish in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    english = 6\n    chinese = 7\n    spanish = 3\n    total = english + chinese + spanish\n    return total\nans = solver()", "answer": 16.0}
{"question": "How many more birds had come to sit on the fence?", "passage": "2 birds were sitting on the fence. Some more birds came to join them. If there are a total of 6 birds on the fence now.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 2 birds were sitting on the fence. Some more birds came to join them. If there are a total of 6 birds on the fence now. How many more birds had come to sit on the fence?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # birds_on_fence_before = 2\n    # birds_on_fence_after = 6\n    birds_on_fence_before = 2\n    birds_on_fence_after = 6\n    # Now, we can calculate the number of birds that came to sit on the fence:\n    birds_came_to_sit = birds_on_fence_after - birds_on_fence_before\n    return birds_came_to_sit\nans = solver()", "answer": 4.0}
{"question": "How many boys are there in that school?", "passage": "In a school there are 635 girls and the rest are boys. If there are 510 more boys than girls.", "executed": 1145.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In a school there are 635 girls and the rest are boys. If there are 510 more boys than girls. How many boys are there in that school?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    girls = 635\n    boys = 0\n    diff = 510\n    boys = girls + diff\n    return boys\nans = solver()", "answer": 1145.0}
{"question": "How much longer is her room than it is wide?", "passage": "Jesse's room is 12 feet long and 11 feet wide.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jesse's room is 12 feet long and 11 feet wide. How much longer is her room than it is wide?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    length = 12\n    width = 11\n    # Now, we can calculate the difference between length and width:\n    difference = length - width\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many more books than movies are there in the ' crazy silly school ' series?", "passage": "There are 16 different books and 14 different movies in the ' crazy silly school ' series. If you read 19 of the books and watched 13 of the movies.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 16 different books and 14 different movies in the ' crazy silly school ' series. If you read 19 of the books and watched 13 of the movies. How many more books than movies are there in the ' crazy silly school ' series?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    books = 16\n    movies = 14\n    read_books = 19\n    watched_movies = 13\n    # Now, we can calculate the number of books and movies in the ' crazy silly school ' series:\n    total_books = books + read_books\n    total_movies = movies + watched_movies\n    # Now, we can calculate the number of more books than movies in the ' crazy silly school ' series:\n    more_books = total_books - total_movies\n    return more_books\nans = solver()", "answer": 2.0}
{"question": "How many bags of cookies do you have?", "passage": "You had 14 bags with equal number of cookies. If you had 28 cookies and 86 candies in total.", "executed": 0.2456140350877193, "generated": "\nimport math\nimport numpy as np\n\n# Question: You had 14 bags with equal number of cookies. If you had 28 cookies and 86 candies in total. How many bags of cookies do you have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookies = 28\n    candies = 86\n    bags = 14\n    # Now, we can use the variables to derive the answer:\n    cookies_per_bag = cookies / bags\n    candies_per_bag = candies / bags\n    bags_of_cookies = cookies_per_bag / (cookies_per_bag + candies_per_bag)\n    return bags_of_cookies\nans = solver()", "answer": 2.0}
{"question": "How many more books than action figures were on his shelf?", "passage": "Jerry had 2 action figures and 10 books on a shelf in his room. Later he added 4 more action figures to the shelf.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jerry had 2 action figures and 10 books on a shelf in his room. Later he added 4 more action figures to the shelf. How many more books than action figures were on his shelf?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    action_figures = 2\n    books = 10\n    action_figures_added = 4\n    # Now, we can calculate the total number of action figures on the shelf:\n    total_action_figures = action_figures + action_figures_added\n    # Now, we can calculate the total number of books on the shelf:\n    total_books = books\n    # Now, we can calculate the difference between the total number of books and the total number of action figures:\n    difference = total_books - total_action_figures\n    # Now, we can return the difference:\n    return difference\nans = solver()", "answer": 4.0}
{"question": "How many cups of flour did she put in?", "passage": "Mary is baking a cake. The recipe calls for 5 cups of sugar and 13 cups of flour. She already put in some cups of flour. If she still needs 12 more cups of flour.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 5 cups of sugar and 13 cups of flour. She already put in some cups of flour. If she still needs 12 more cups of flour. How many cups of flour did she put in?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sugar = 5\n    flour = 13\n    flour_put_in = ?\n    flour_still_need = 12\n    # Now, we can write the equation:\n    sugar + flour_put_in = flour\n    flour_put_in + flour_still_need = flour\n    # Solve the equation:\n    flour_put_in = flour - sugar\n    flour_put_in = flour - flour_still_need\n    return flour_put_in\nans = solver()", "answer": 1.0}
{"question": "How many pages of math and reading homework did she have to complete?", "passage": "Rachel had to complete 9 pages of math homework, 11 pages of reading homework and 29 more pages of biology homework.", "executed": 49.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel had to complete 9 pages of math homework, 11 pages of reading homework and 29 more pages of biology homework. How many pages of math and reading homework did she have to complete?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    math_pages = 9\n    reading_pages = 11\n    biology_pages = 29\n    total_pages = math_pages + reading_pages + biology_pages\n    print(\"Total pages:\", total_pages)\n    return total_pages\nans = solver()", "answer": 20.0}
{"question": "How many seeds did they plant in each flowerbed?", "passage": "Paige was helping her mom plant flowers in 8 flowerbeds. They planted 32 seeds altogether. If they put same number of seeds in each flower bed.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paige was helping her mom plant flowers in 8 flowerbeds. They planted 32 seeds altogether. If they put same number of seeds in each flower bed. How many seeds did they plant in each flowerbed?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # number of flowerbeds = 8\n    # number of seeds = 32\n    # number of seeds in each flowerbed = ?\n    # We can use the formula:\n    # number of seeds in each flowerbed = number of seeds / number of flowerbeds\n    # number of seeds in each flowerbed = 32 / 8\n    # number of seeds in each flowerbed = 4\n    return 32 / 8\nans = solver()", "answer": 4.0}
{"question": "How many sacks of ripe oranges will they have after 73 days of harvest?", "passage": "He then went to see the oranges being harvested. He found out that they harvest 25 sacks of unripe oranges and 5 sacks of ripe oranges per day.", "executed": 365.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He then went to see the oranges being harvested. He found out that they harvest 25 sacks of unripe oranges and 5 sacks of ripe oranges per day. How many sacks of ripe oranges will they have after 73 days of harvest?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    unripe_oranges = 25\n    ripe_oranges = 5\n    days = 73\n    # Now, we can calculate the total number of ripe oranges after 73 days of harvest:\n    total_ripe_oranges = ripe_oranges * days\n    return total_ripe_oranges\nans = solver()", "answer": 365.0}
{"question": "How many books did he sell in the garage sale?", "passage": "Paul had 134 books. After giving 39 books to his friend and selling some books in a garage sale he had 68 books left.", "executed": 27.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul had 134 books. After giving 39 books to his friend and selling some books in a garage sale he had 68 books left. How many books did he sell in the garage sale?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # books_paul_had = 134\n    # books_paul_gave = 39\n    # books_paul_sold = ?\n    # books_paul_left = 68\n    # books_paul_had = books_paul_gave + books_paul_sold + books_paul_left\n    # books_paul_had = books_paul_gave + books_paul_sold + books_paul_left\n    # 134 = 39 + books_paul_sold + 68\n    # books_paul_sold = 134 - 39 - 68\n    books_paul_sold = 134 - 39 - 68\n    return books_paul_sold\nans = solver()", "answer": 27.0}
{"question": "How many sweet cookies did Paco have left?", "passage": "Paco had 97 salty cookies and 34 sweet cookies. He ate 15 sweet cookies and 56 salty cookies.", "executed": 19.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paco had 97 salty cookies and 34 sweet cookies. He ate 15 sweet cookies and 56 salty cookies. How many sweet cookies did Paco have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    salty_cookies = 97\n    sweet_cookies = 34\n    eaten_sweet_cookies = 15\n    eaten_salty_cookies = 56\n    # Now, we can calculate the answer:\n    sweet_cookies_left = sweet_cookies - eaten_sweet_cookies\n    return sweet_cookies_left\nans = solver()", "answer": 19.0}
{"question": "How many students are in the school?", "passage": "The school is planning a field trip. The school has 84 classrooms. 95 school buses are fully filled with 118 seats on each school bus.", "executed": 941640.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school is planning a field trip. The school has 84 classrooms. 95 school buses are fully filled with 118 seats on each school bus. How many students are in the school?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    classrooms = 84\n    seats = 118\n    buses = 95\n    students = classrooms * seats * buses\n    return students\nans = solver()", "answer": 11210.0}
{"question": "How many pencils does she have?", "passage": "Faye was placing her pencils and crayons into 30 rows with 71 crayons and 24 pencils in each row.", "executed": 720.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Faye was placing her pencils and crayons into 30 rows with 71 crayons and 24 pencils in each row. How many pencils does she have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    pencils_per_row = 24\n    crayons_per_row = 71\n    rows = 30\n    pencils = pencils_per_row * rows\n    return pencils\nans = solver()", "answer": 720.0}
{"question": "How many pencils did she place in each row?", "passage": "Faye was placing 12 pencils equally into 3 rows.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Faye was placing 12 pencils equally into 3 rows. How many pencils did she place in each row?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    pencils = 12\n    rows = 3\n    pencils_per_row = pencils / rows\n    return pencils_per_row\nans = solver()", "answer": 4.0}
{"question": "How many more kids did she play with on monday and tuesday than on wednesday?", "passage": "Julia played tag with 15 kids on monday, 18 kids on tuesday and 7 kids on wednesday.", "executed": 26.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Julia played tag with 15 kids on monday, 18 kids on tuesday and 7 kids on wednesday. How many more kids did she play with on monday and tuesday than on wednesday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 15\n    tuesday = 18\n    wednesday = 7\n    # Now, we can calculate the difference between monday and tuesday and wednesday\n    difference = monday + tuesday - wednesday\n    return difference\nans = solver()", "answer": 26.0}
{"question": "How many more cakes did baker make than those he sold?", "passage": "Baker made 133 cakes. If he sold 51 of them.", "executed": 82.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 133 cakes. If he sold 51 of them. How many more cakes did baker make than those he sold?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cakes_made = 133\n    cakes_sold = 51\n    cakes_left = cakes_made - cakes_sold\n    return cakes_left\nans = solver()", "answer": 82.0}
{"question": "How many groups are there?", "passage": "There are 18 bananas in Philip's banana collection. If the bananas are organized into groups of size 2.", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 18 bananas in Philip's banana collection. If the bananas are organized into groups of size 2. How many groups are there?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bananas = 18\n    group_size = 2\n    # Now we can calculate the number of groups:\n    number_of_groups = bananas / group_size\n    return number_of_groups\nans = solver()", "answer": 9.0}
{"question": "How much money does she have left?", "passage": "Olivia spent 38 dollars at a supermarket. If there were 128 dollars in her wallet initially.", "executed": 90.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Olivia spent 38 dollars at a supermarket. If there were 128 dollars in her wallet initially. How much money does she have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. Olivia spent 38 dollars at a supermarket.\n    spent = 38\n    # 2. If there were 128 dollars in her wallet initially.\n    wallet = 128\n    # 3. How much money does she have left?\n    left = wallet - spent\n    return left\nans = solver()", "answer": 90.0}
{"question": "How many cakes would baker still have?", "passage": "Baker sold 44 cakes. If he had made 48 cakes initially.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker sold 44 cakes. If he had made 48 cakes initially. How many cakes would baker still have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cakes_baked = 48\n    cakes_sold = 44\n    cakes_left = cakes_baked - cakes_sold\n    return cakes_left\nans = solver()", "answer": 4.0}
{"question": "How many hours does he spend on learning english?", "passage": "Every day Ryan spends 5 hours on learning chinese and some more hours on learning english. If he spends 2 hours more on learning english than on learning chinese.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Every day Ryan spends 5 hours on learning chinese and some more hours on learning english. If he spends 2 hours more on learning english than on learning chinese. How many hours does he spend on learning english?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x: the hours Ryan spends on learning chinese\n    # y: the hours Ryan spends on learning english\n    x = Symbol('x')\n    y = Symbol('y')\n    # Then we can define the equation:\n    equation = 5 + x - y\n    # Then we can solve the equation:\n    answer = solve(equation, x)\n    return answer\nans = solver()", "answer": 7.0}
{"question": "How many pages did she have to complete in all?", "passage": "Rachel had to complete 8 pages of math homework. If she had to complete 3 more pages of math homework than reading homework.", "executed": 13.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel had to complete 8 pages of math homework. If she had to complete 3 more pages of math homework than reading homework. How many pages did she have to complete in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    math_homework = 8\n    reading_homework = math_homework - 3\n    total_homework = math_homework + reading_homework\n    return total_homework\nans = solver()", "answer": 13.0}
{"question": "How much money did he spend to buy candy bar than he did to buy chocolate?", "passage": "Dan has $ 5. He bought a chocolate for $ 3 and a candy bar for $ 7.", "executed": 20.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dan has $ 5. He bought a chocolate for $ 3 and a candy bar for $ 7. How much money did he spend to buy candy bar than he did to buy chocolate?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    chocolate = 3\n    candy_bar = 7\n    money = 5\n    # Now, we can calculate the difference between the price of candy bar and chocolate\n    difference = candy_bar - chocolate\n    # Now, we can calculate the money that Dan spent to buy candy bar than he did to buy chocolate\n    money_spent = difference * money\n    return money_spent\nans = solver()", "answer": 4.0}
{"question": "How much did she weigh after the first week of jogging?", "passage": "Jessie weighed 92 kilograms. After she started to go jogging everyday she lost 56 kilograms in the first week and 99 kilograms in the second week.", "executed": 36.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jessie weighed 92 kilograms. After she started to go jogging everyday she lost 56 kilograms in the first week and 99 kilograms in the second week. How much did she weigh after the first week of jogging?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    weight_before_jogging = 92\n    weight_after_first_week = weight_before_jogging - 56\n    weight_after_second_week = weight_after_first_week - 99\n    return weight_after_first_week\nans = solver()", "answer": 36.0}
{"question": "How many kids did she play with on tuesday and wednesday?", "passage": "Julia played tag with 2 kids on monday, 14 kids on tuesday and 16 kids on wednesday.", "executed": 28.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Julia played tag with 2 kids on monday, 14 kids on tuesday and 16 kids on wednesday. How many kids did she play with on tuesday and wednesday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 2\n    tuesday = 14\n    wednesday = 16\n    # Now, we can define the equation:\n    equation = tuesday + wednesday - monday\n    return equation\nans = solver()", "answer": 30.0}
{"question": "How many children got on the bus at the bus stop?", "passage": "21 children were riding on the bus. At the bus stop 10 children got off the bus while some more got on the bus. Then there were 16 children altogether on the bus.", "executed": 11.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 21 children were riding on the bus. At the bus stop 10 children got off the bus while some more got on the bus. Then there were 16 children altogether on the bus. How many children got on the bus at the bus stop?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # children_on_bus = 21\n    # children_off_bus = 10\n    # children_on_bus_after = 16\n    children_on_bus = 21\n    children_off_bus = 10\n    children_on_bus_after = 16\n    children_on_bus_after = children_on_bus - children_off_bus\n    return children_on_bus_after\nans = solver()", "answer": 5.0}
{"question": "How many cakes would baker still have?", "passage": "Baker made 62 cakes. Then he made 149 more cakes. He sold 144 of them.", "executed": 67.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 62 cakes. Then he made 149 more cakes. He sold 144 of them. How many cakes would baker still have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cakes_baked = 62\n    cakes_baked_more = 149\n    cakes_sold = 144\n    cakes_still_have = 0\n    # Now, we can calculate the answer:\n    cakes_still_have = cakes_baked + cakes_baked_more - cakes_sold\n    return cakes_still_have\nans = solver()", "answer": 67.0}
{"question": "How many crayons did he get for his birthday?", "passage": "Paul got a box of some crayons for his birthday. By the end of the school year he only had 291 crayons left since he had either lost or given away 315 of them.", "executed": 606.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul got a box of some crayons for his birthday. By the end of the school year he only had 291 crayons left since he had either lost or given away 315 of them. How many crayons did he get for his birthday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of crayons Paul got for his birthday\n    # y = number of crayons Paul had left by the end of the school year\n    # z = number of crayons Paul lost or gave away\n    # We know that y = x - z\n    # We also know that z = 315\n    # Therefore, y = x - 315\n    # We also know that y = 291\n    # Therefore, 291 = x - 315\n    # We can solve for x by adding 315 to both sides of the equation\n    # x = 606\n    return 606\nans = solver()", "answer": 606.0}
{"question": "How many letters did jack receive in the day?", "passage": "Jack received 5 emails and 6 letters in the morning. He then received 9 emails and 7 letters in the afternoon.", "executed": 13.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jack received 5 emails and 6 letters in the morning. He then received 9 emails and 7 letters in the afternoon. How many letters did jack receive in the day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning_emails = 5\n    morning_letters = 6\n    afternoon_emails = 9\n    afternoon_letters = 7\n    total_emails = morning_emails + afternoon_emails\n    total_letters = morning_letters + afternoon_letters\n    return total_letters\nans = solver()", "answer": 13.0}
{"question": "How much money does he earn during harvest season?", "passage": "Lewis earns $ 403 every week during the 233 weeks of harvest. If he has to pay $ 49 rent every week.", "executed": 82482.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Lewis earns $ 403 every week during the 233 weeks of harvest. If he has to pay $ 49 rent every week. How much money does he earn during harvest season?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    rent = 49\n    salary = 403\n    weeks = 233\n    # Now, we can calculate the total money earned by Lewis during harvest season:\n    total_money = salary * weeks - rent * weeks\n    return total_money\nans = solver()", "answer": 93899.0}
{"question": "How many days will it take to harvest 80 sacks of oranges?", "passage": "He then went to see the oranges being harvested. He found out that they harvest 16 sacks per day and that each sack containes 57 oranges.", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He then went to see the oranges being harvested. He found out that they harvest 16 sacks per day and that each sack containes 57 oranges. How many days will it take to harvest 80 sacks of oranges?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sacks_per_day = 16\n    oranges_per_sack = 57\n    target_sacks = 80\n    days = 0\n    while target_sacks > 0:\n        target_sacks -= sacks_per_day\n        days += 1\n    return days\nans = solver()", "answer": 5.0}
{"question": "How many packages does Robin have?", "passage": "Robin has some packages of gum. There are 3 pieces in each package and a total of 42 pieces of gum.", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Robin has some packages of gum. There are 3 pieces in each package and a total of 42 pieces of gum. How many packages does Robin have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   x: the number of packages\n    #   y: the number of pieces of gum\n    x = 0\n    y = 0\n    # Now, we can write the equation:\n    y = 3 * x\n    # Next, we can write the constraint:\n    y = 42\n    # Finally, we can solve the equation:\n    x = 14\n    return x\nans = solver()", "answer": 14.0}
{"question": "What is the cost of each t-shirt?", "passage": "During the Arkansas and Texas tech game the Razorback t-shirt shop made $ 215 by selling 5 t-shirts.", "executed": 43.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: During the Arkansas and Texas tech game the Razorback t-shirt shop made $ 215 by selling 5 t-shirts. What is the cost of each t-shirt?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # t-shirt price = x\n    # t-shirt sold = 5\n    # total revenue = 215\n    # total revenue = t-shirt price * t-shirt sold\n    # 215 = x * 5\n    # x = 215 / 5\n    return 215 / 5\nans = solver()", "answer": 43.0}
{"question": "How far did the mouse jump?", "passage": "The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped 25 inches. The frog jumped 32 inches farther than the grasshopper and the mouse jumped 26 inches lesser than the frog.", "executed": 31.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped 25 inches. The frog jumped 32 inches farther than the grasshopper and the mouse jumped 26 inches lesser than the frog. How far did the mouse jump?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    grasshopper = 25\n    frog = grasshopper + 32\n    mouse = frog - 26\n    return mouse\nans = solver()", "answer": 31.0}
{"question": "How many oranges do they harvest per day if each sack contains 50 oranges?", "passage": "He then went to see the oranges being harvested. He found out that they harvest 76 sacks per day and discard 64 of them.", "executed": 600.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He then went to see the oranges being harvested. He found out that they harvest 76 sacks per day and discard 64 of them. How many oranges do they harvest per day if each sack contains 50 oranges?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sacks_per_day = 76\n    discarded_sacks = 64\n    oranges_per_sack = 50\n    # Now, we can calculate the number of oranges per day:\n    oranges_per_day = sacks_per_day * oranges_per_sack\n    # Now, we can calculate the number of oranges discarded per day:\n    discarded_oranges = discarded_sacks * oranges_per_sack\n    # Now, we can calculate the number of oranges harvested per day:\n    harvested_oranges = oranges_per_day - discarded_oranges\n    return harvested_oranges\nans = solver()", "answer": 600.0}
{"question": "What is the length of her room?", "passage": "Jesse's room is 7 feet wide. If she needs a carpet of size 14 square feet.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jesse's room is 7 feet wide. If she needs a carpet of size 14 square feet. What is the length of her room?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    width = 7\n    area = 14\n    length = 0\n    length = area / width\n    return length\nans = solver()", "answer": 2.0}
{"question": "How many hours does he spend on learning english in all?", "passage": "Every day Ryan spends 6 hours on learning english and 5 hours on learning chinese. If he learns for 2 days.", "executed": 12.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Every day Ryan spends 6 hours on learning english and 5 hours on learning chinese. If he learns for 2 days. How many hours does he spend on learning english in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. Ryan spends 6 hours on learning english every day\n    english_hours_per_day = 6\n    # 2. Ryan spends 5 hours on learning chinese every day\n    chinese_hours_per_day = 5\n    # 3. Ryan learns for 2 days\n    days = 2\n    # 4. Ryan spends x hours on learning english in all\n    english_hours_in_all = english_hours_per_day * days\n    return english_hours_in_all\nans = solver()", "answer": 12.0}
{"question": "How many more marbles did Ed have than Doug then?", "passage": "Ed had 10 more marbles than Doug. Doug lost 11 of his marbles at the playground. If Ed had 45 marbles.", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Ed had 10 more marbles than Doug. Doug lost 11 of his marbles at the playground. If Ed had 45 marbles. How many more marbles did Ed have than Doug then?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    ed_marbles = 45\n    doug_marbles = ed_marbles - 10\n    doug_marbles_after_lost = doug_marbles - 11\n    ed_marbles_after_lost = ed_marbles - 11\n    ed_marbles_after_lost_more_than_doug = ed_marbles_after_lost - doug_marbles_after_lost\n    return ed_marbles_after_lost_more_than_doug\nans = solver()", "answer": 21.0}
{"question": "How many invitations will be left?", "passage": "Carol was sending out birthday invitations to her friends. Each package of invitations she bought had 10 invitations in it and she bought 7 packs. If she sends invitations to only 2 friends.", "executed": 68.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Carol was sending out birthday invitations to her friends. Each package of invitations she bought had 10 invitations in it and she bought 7 packs. If she sends invitations to only 2 friends. How many invitations will be left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    packs = 7\n    invitations_per_pack = 10\n    invitations_sent = 2\n    invitations_left = 0\n    # Now, we can calculate the invitations_left by using the variables above\n    invitations_left = packs * invitations_per_pack - invitations_sent\n    return invitations_left\nans = solver()", "answer": 68.0}
{"question": "How many apples did rachel pick?", "passage": "Rachel's tree had 4 apples initially. She picked some apples and now there are 2 apples left on the tree.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel's tree had 4 apples initially. She picked some apples and now there are 2 apples left on the tree. How many apples did rachel pick?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # apples_init = 4\n    # apples_left = 2\n    # apples_picked = ?\n    apples_init = 4\n    apples_left = 2\n    apples_picked = apples_init - apples_left\n    return apples_picked\nans = solver()", "answer": 2.0}
{"question": "How many pieces of candy did Bobby eat?", "passage": "Bobby ate 28 pieces of candy. Then he ate 42 more. He also ate 63 pieces of chocolate.", "executed": 70.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bobby ate 28 pieces of candy. Then he ate 42 more. He also ate 63 pieces of chocolate. How many pieces of candy did Bobby eat?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    candy_ate_first = 28\n    candy_ate_second = 42\n    chocolate_ate = 63\n    # Now we can calculate the total number of candy ate by Bobby\n    total_candy_ate = candy_ate_first + candy_ate_second\n    # Now we can return the answer\n    return total_candy_ate\nans = solver()", "answer": 70.0}
{"question": "How much more does a jersey cost than a t-shirt?", "passage": "The Razorback shop makes $ 115 dollars off each jersey and $ 25 off each t-shirt. During the Arkansas and Texas tech game they sold 113 t-shirts and 78 jerseys.", "executed": 90.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The Razorback shop makes $ 115 dollars off each jersey and $ 25 off each t-shirt. During the Arkansas and Texas tech game they sold 113 t-shirts and 78 jerseys. How much more does a jersey cost than a t-shirt?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    jersey_price = 115\n    tshirt_price = 25\n    jersey_sold = 78\n    tshirt_sold = 113\n    jersey_revenue = jersey_price * jersey_sold\n    tshirt_revenue = tshirt_price * tshirt_sold\n    total_revenue = jersey_revenue + tshirt_revenue\n    jersey_cost = jersey_price - tshirt_price\n    return jersey_cost\nans = solver()", "answer": 90.0}
{"question": "How many pieces of candy had he eaten at the start?", "passage": "Bobby had 22 pieces of candy. He ate some pieces of candy. Then he ate 5 more. If he still has 8 pieces of candy left.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bobby had 22 pieces of candy. He ate some pieces of candy. Then he ate 5 more. If he still has 8 pieces of candy left. How many pieces of candy had he eaten at the start?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   x: the number of pieces of candy that Bobby had eaten at the start\n    #   y: the number of pieces of candy that Bobby had left at the start\n    #   z: the number of pieces of candy that Bobby had eaten at the end\n    #   w: the number of pieces of candy that Bobby had left at the end\n    #   a: the number of pieces of candy that Bobby had eaten at the end\n    #   b: the number of pieces of candy that Bobby had left at the end\n    #   c: the number of pieces of candy that Bobby had eaten at the end\n    #   d: the number of pieces of candy that Bobby had left at the end\n    #   e: the number of pieces of candy that Bobby had eaten at the end\n    #   f: the number of pieces of candy that Bobby had left at the end\n    #   g: the number of pieces of candy that Bobby had eaten at the end\n    #   h: the number of pieces of candy that Bobby had left at the end\n    #   i: the number of pieces of candy that Bobby had eaten at the end\n    #   j: the number of pieces of candy that Bobby had left at the end\n    #   k: the number of pieces of candy that Bobby had eaten at the end\n    #   l: the number of pieces of candy that Bobby had left at the end\n    #   m: the number of pieces of candy that Bobby had eaten at the end\n    #   n: the number of pieces of candy that Bobby had left at\nans = solver()", "answer": 9.0}
{"question": "How much will it cost to buy 33 packs of dvds?", "passage": "If each pack costs 81 dollars.", "executed": 2673.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: If each pack costs 81 dollars. How much will it cost to buy 33 packs of dvds?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cost_per_pack = 81\n    number_of_packs = 33\n    total_cost = cost_per_pack * number_of_packs\n    return total_cost\nans = solver()", "answer": 2673.0}
{"question": "How many people were present in the program?", "passage": "There were 61 parents in the program and 177 pupils too. The program could seat 44 people.", "executed": 194.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 61 parents in the program and 177 pupils too. The program could seat 44 people. How many people were present in the program?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    parents = 61\n    pupils = 177\n    seats = 44\n    # Now, we can calculate the total number of people present in the program:\n    total_people = parents + pupils\n    # Now, we can calculate the number of people who were not seated:\n    not_seated = total_people - seats\n    return not_seated\nans = solver()", "answer": 238.0}
{"question": "How many hours does he spend on learning english and chinese each day?", "passage": "Every day Ryan spends 4 hours on learning english and 6 hours on learning chinese. If he learns for 86 days.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Every day Ryan spends 4 hours on learning english and 6 hours on learning chinese. If he learns for 86 days. How many hours does he spend on learning english and chinese each day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. x: the hours Ryan spends on learning english each day\n    # 2. y: the hours Ryan spends on learning chinese each day\n    # 3. t: the days Ryan spends on learning english and chinese\n    x = Variable('x')\n    y = Variable('y')\n    t = Variable('t')\n    # Then we can define the constraints:\n    constraints = [x >= 0, y >= 0, t >= 0]\n    constraints += [x + y == 10, 4 * x + 6 * y == 86 * t]\n    # Finally, we can define the objective function:\n    objective = Maximize(x + y)\n    problem = Problem(objective, constraints)\n    problem.solve()\n    return x.value, y.value, t.value\nans = solver()", "answer": 10.0}
{"question": "How many more cakes than pastries did baker make?", "passage": "Baker made 126 cakes and 48 pastries. If he sold 115 cakes and 81 pastries.", "executed": 44.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 126 cakes and 48 pastries. If he sold 115 cakes and 81 pastries. How many more cakes than pastries did baker make?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cakes_made = 126\n    pastries_made = 48\n    cakes_sold = 115\n    pastries_sold = 81\n    cakes_left = cakes_made - cakes_sold\n    pastries_left = pastries_made - pastries_sold\n    cakes_left_more_than_pastries_left = cakes_left - pastries_left\n    return cakes_left_more_than_pastries_left\nans = solver()", "answer": 78.0}
{"question": "How many more tickets did Dave use to buy toys than he did to buy clothes?", "passage": "At the arcade Dave had won 19 tickets. If he used 12 to buy some toys and 7 more to buy some clothes.", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the arcade Dave had won 19 tickets. If he used 12 to buy some toys and 7 more to buy some clothes. How many more tickets did Dave use to buy toys than he did to buy clothes?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   t = number of tickets Dave used to buy toys\n    #   c = number of tickets Dave used to buy clothes\n    #   t + c = 19\n    #   t - c = 5\n    #   t = 12\n    #   c = 7\n    t = 12\n    c = 7\n    return t - c\nans = solver()", "answer": 5.0}
{"question": "How many bottles did they have total?", "passage": "A grocery store had 30 bottles of regular soda, 8 bottles of diet soda and 41 apples.", "executed": 38.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A grocery store had 30 bottles of regular soda, 8 bottles of diet soda and 41 apples. How many bottles did they have total?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    regular_soda = 30\n    diet_soda = 8\n    apples = 41\n    total_bottles = regular_soda + diet_soda\n    return total_bottles\nans = solver()", "answer": 38.0}
{"question": "How many peaches are in the baskets altogether?", "passage": "There are 11 baskets of peaches. Each basket has 10 red peaches and 18 green peaches.", "executed": 308.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 11 baskets of peaches. Each basket has 10 red peaches and 18 green peaches. How many peaches are in the baskets altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    basket_num = 11\n    red_peach_num = 10\n    green_peach_num = 18\n    peach_num = red_peach_num + green_peach_num\n    total_peach_num = peach_num * basket_num\n    return total_peach_num\nans = solver()", "answer": 308.0}
{"question": "How many crayons did he have left?", "passage": "Paul got a box of 440 crayons for his birthday. During the school year he gave 111 crayons to his friends while he lost 106 crayons.", "executed": 223.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul got a box of 440 crayons for his birthday. During the school year he gave 111 crayons to his friends while he lost 106 crayons. How many crayons did he have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # crayons_received = 440\n    # crayons_given = 111\n    # crayons_lost = 106\n    crayons_received = 440\n    crayons_given = 111\n    crayons_lost = 106\n    # Now, we can calculate the crayons_left by using the formula:\n    crayons_left = crayons_received - crayons_given - crayons_lost\n    return crayons_left\nans = solver()", "answer": 223.0}
{"question": "How many campers went rowing in the morning?", "passage": "Some campers went rowing in the morning while 7 campers went rowing in the afternoon. If a total of 60 campers went rowing that day.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Some campers went rowing in the morning while 7 campers went rowing in the afternoon. If a total of 60 campers went rowing that day. How many campers went rowing in the morning?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning = 7\n    afternoon = 60 - morning\n    return morning\nans = solver()", "answer": 53.0}
{"question": "How many sacks of oranges will they have after 51 days of harvest?", "passage": "He then went to see the oranges being harvested. He found out that they harvest 74 sacks per day and discard 71 of them.", "executed": 153.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He then went to see the oranges being harvested. He found out that they harvest 74 sacks per day and discard 71 of them. How many sacks of oranges will they have after 51 days of harvest?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    harvest_per_day = 74\n    discard_per_day = 71\n    harvest_days = 51\n    # Then we can calculate the total harvest:\n    total_harvest = harvest_per_day * harvest_days\n    # And the total discard:\n    total_discard = discard_per_day * harvest_days\n    # Then we can calculate the total sacks of oranges:\n    total_sacks = total_harvest - total_discard\n    return total_sacks\nans = solver()", "answer": 153.0}
{"question": "Total how many grams of wax do the feathers require?", "passage": "Next on his checklist is wax to stick the feathers together. If he has 557 g of wax and right now he just needs 17 g.", "executed": 540.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Next on his checklist is wax to stick the feathers together. If he has 557 g of wax and right now he just needs 17 g. Total how many grams of wax do the feathers require?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    wax_now = 557\n    wax_needed = 17\n    wax_total = wax_now - wax_needed\n    return wax_total\nans = solver()", "answer": 574.0}
{"question": "How many more books than action figures were on his shelf?", "passage": "Jerry had 7 books and 3 action figures on a shelf in his room. Later he added 2 more action figures to the shelf.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jerry had 7 books and 3 action figures on a shelf in his room. Later he added 2 more action figures to the shelf. How many more books than action figures were on his shelf?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    books = 7\n    action_figures = 3\n    # Later he added 2 more action figures to the shelf.\n    action_figures = action_figures + 2\n    # How many more books than action figures were on his shelf?\n    answer = books - action_figures\n    return answer\nans = solver()", "answer": 2.0}
{"question": "How many friends did he give crackers to?", "passage": "Matthew gave 6 crackers to each his friends. If he had 36 crackers.", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Matthew gave 6 crackers to each his friends. If he had 36 crackers. How many friends did he give crackers to?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   x: the number of friends\n    #   y: the number of crackers\n    x = 0\n    y = 0\n    # Now, we can write the equation:\n    #   y = 6 * x\n    y = 6 * x\n    # We can substitute the value of y into the equation:\n    #   36 = 6 * x\n    y = 36\n    x = 6\n    # We can solve the equation:\n    #   x = 6\n    x = 6\n    # Now, we can return the answer:\n    return x\nans = solver()", "answer": 6.0}
{"question": "How many more games does Katie have than her friends?", "passage": "Katie had 57 new games and 39 old games. Her friends had 34 new games.", "executed": 62.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Katie had 57 new games and 39 old games. Her friends had 34 new games. How many more games does Katie have than her friends?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    new_games_katie = 57\n    old_games_katie = 39\n    new_games_friends = 34\n    # Now, we can calculate the total games of Katie and her friends:\n    total_games_katie = new_games_katie + old_games_katie\n    total_games_friends = new_games_friends\n    # Now, we can calculate the difference between the total games of Katie and her friends:\n    difference = total_games_katie - total_games_friends\n    return difference\nans = solver()", "answer": 62.0}
{"question": "How many children are on the bus now?", "passage": "26 children were riding on the bus. At the bus stop 38 more children got on the bus.", "executed": 64.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 26 children were riding on the bus. At the bus stop 38 more children got on the bus. How many children are on the bus now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    children_on_the_bus = 26\n    children_got_on_the_bus = 38\n    children_on_the_bus_now = children_on_the_bus + children_got_on_the_bus\n    return children_on_the_bus_now\nans = solver()", "answer": 64.0}
{"question": "How many marbles does he have now?", "passage": "Josh had 21 marbles in his collection. He found 7 marbles.", "executed": 28.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Josh had 21 marbles in his collection. He found 7 marbles. How many marbles does he have now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marbles_in_collection = 21\n    marbles_found = 7\n    marbles_now = marbles_in_collection + marbles_found\n    return marbles_now\nans = solver()", "answer": 28.0}
{"question": "How many balloons did Allan bring to the park?", "passage": "Jake brought 6 balloons to the park. If Jake brought 4 more balloons than the number of balloons that Allan brought.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jake brought 6 balloons to the park. If Jake brought 4 more balloons than the number of balloons that Allan brought. How many balloons did Allan bring to the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Jake's balloons = x\n    # Allan's balloons = x - 4\n    # Total balloons = x + x - 4 = 2x - 4\n    # Total balloons = 6\n    # 2x - 4 = 6\n    # 2x = 10\n    # x = 5\n    # Allan's balloons = x - 4 = 5 - 4 = 1\n    return 1\nans = solver()", "answer": 2.0}
{"question": "How many tickets did Dave have left?", "passage": "At the arcade Dave had won 14 tickets and lost 2 tickets. If he used 10 to buy some toys.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the arcade Dave had won 14 tickets and lost 2 tickets. If he used 10 to buy some toys. How many tickets did Dave have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    won = 14\n    lost = 2\n    used = 10\n    # Now we can calculate the answer:\n    left = won - lost - used\n    return left\nans = solver()", "answer": 2.0}
{"question": "About how many kids are in Lawrence county?", "passage": "During summer break 610769 kids from Lawrence county go to camp and the other 590796 kids stay home. An additional 22 kids from outside the county attended the camp.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: During summer break 610769 kids from Lawrence county go to camp and the other 590796 kids stay home. An additional 22 kids from outside the county attended the camp. About how many kids are in Lawrence county?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # kids_in_county = kids_in_camp + kids_not_in_camp\n    # kids_in_camp = kids_in_county + kids_not_in_county\n    # kids_not_in_camp = kids_not_in_county\n    # kids_in_county = kids_in_camp + kids_not_in_camp\n    # kids_in_camp = kids_in_county + kids_not_in_county\n    # kids_not_in_camp = kids_not_in_county\n    # kids_in_county = kids_in_camp + kids_not_in_camp\n    # kids_in_camp = kids_in_county + kids_not_in_county\n    # kids_not_in_camp = kids_not_in_county\n    # kids_in_county = kids_in_camp + kids_not_in_camp\n    # kids_in_camp = kids_in_county + kids_not_in_county\n    # kids_not_in_camp = kids_not_in_county\n    # kids_in_county = kids_in_camp + kids_not_in_camp\n    # kids_in_camp = kids_in_county + kids_not_in_county\n    # kids_not_in_camp = kids_not_in_county\n    # kids_in_county =\nans = solver()", "answer": 1201565.0}
{"question": "How much money does Edward have now?", "passage": "Edward had $ 18. He spent $ 16.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Edward had $ 18. He spent $ 16. How much money does Edward have now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    edward_money = 18\n    edward_spent = 16\n    edward_money_now = edward_money - edward_spent\n    return edward_money_now\nans = solver()", "answer": 2.0}
{"question": "How much more money did she receive from her dad than she did from her mom?", "passage": "For Gwen's birthday she received 5 dollars from her dad. Her mom gave her 2 more dollars. If she spent 6 dollars.", "executed": -3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For Gwen's birthday she received 5 dollars from her dad. Her mom gave her 2 more dollars. If she spent 6 dollars. How much more money did she receive from her dad than she did from her mom?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    dad = 5\n    mom = 2\n    spent = 6\n    # Now, we can calculate the answer:\n    answer = dad - mom - spent\n    return answer\nans = solver()", "answer": 3.0}
{"question": "How long is his hair now?", "passage": "Robin's hair was 14 inches long. It grew by 8 inches. Then he cut off 20 inches.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Robin's hair was 14 inches long. It grew by 8 inches. Then he cut off 20 inches. How long is his hair now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    hair_length = 14\n    hair_growth = 8\n    hair_cut = 20\n    hair_length_now = hair_length + hair_growth - hair_cut\n    return hair_length_now\nans = solver()", "answer": 2.0}
{"question": "How much did Edward have before he spent his money?", "passage": "Edward spent $ 16 to buy 92 books each book costing him the same amount of money. Now he has $ 6.", "executed": 22.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Edward spent $ 16 to buy 92 books each book costing him the same amount of money. Now he has $ 6. How much did Edward have before he spent his money?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x: the amount of money Edward had before he spent his money\n    # y: the amount of money Edward spent\n    # z: the number of books Edward bought\n    # w: the price of each book\n    x = 0\n    y = 16\n    z = 92\n    w = 0\n    # Now we can write the equation:\n    # x - y = 6\n    x = y + 6\n    # y = z * w\n    w = y / z\n    return x, y, z, w\nans = solver()", "answer": 22.0}
{"question": "How many kids in total attended the camp?", "passage": "During summer break 34044 kids from Lawrence county go to camp and the other 134867 kids stay home. An additional 424944 kids from outside the county attended the camp.", "executed": 324121.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: During summer break 34044 kids from Lawrence county go to camp and the other 134867 kids stay home. An additional 424944 kids from outside the county attended the camp. How many kids in total attended the camp?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    kids_from_lawrence_county = 34044\n    kids_from_outside_the_county = 424944\n    kids_from_lawrence_county_stay_home = 134867\n    kids_from_lawrence_county_go_to_camp = kids_from_lawrence_county - kids_from_lawrence_county_stay_home\n    kids_from_outside_the_county_go_to_camp = kids_from_outside_the_county\n    kids_in_total_go_to_camp = kids_from_lawrence_county_go_to_camp + kids_from_outside_the_county_go_to_camp\n    return kids_in_total_go_to_camp\nans = solver()", "answer": 458988.0}
{"question": "How many more cakes than pastries did baker sell?", "passage": "Baker made 14 cakes and 153 pastries. If he sold 8 pastries and 97 cakes.", "executed": -228.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 14 cakes and 153 pastries. If he sold 8 pastries and 97 cakes. How many more cakes than pastries did baker sell?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cakes = 14\n    pastries = 153\n    sold_cakes = 97\n    sold_pastries = 8\n    # Now, we can calculate the number of cakes and pastries that baker sold:\n    sold_cakes = cakes - sold_cakes\n    sold_pastries = pastries - sold_pastries\n    # Now, we can calculate the difference between the number of cakes and pastries that baker sold:\n    difference = sold_cakes - sold_pastries\n    return difference\nans = solver()", "answer": 89.0}
{"question": "How many trees does she have left?", "passage": "After a typhoon, 2 trees in Haley's backyard died. If she had grown 12 trees initially.", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: After a typhoon, 2 trees in Haley's backyard died. If she had grown 12 trees initially. How many trees does she have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. The number of trees in Haley's backyard initially\n    initial_trees = 12\n    # 2. The number of trees in Haley's backyard after the typhoon\n    trees_after_typhoon = initial_trees - 2\n    return trees_after_typhoon\nans = solver()", "answer": 10.0}
{"question": "How many more salty cookies than sweet cookies did he eat?", "passage": "Paco had 8 sweet cookies and 6 salty cookies. He ate 20 sweet cookies and 34 salty cookies.", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paco had 8 sweet cookies and 6 salty cookies. He ate 20 sweet cookies and 34 salty cookies. How many more salty cookies than sweet cookies did he eat?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sweet_cookies = 8\n    salty_cookies = 6\n    sweet_cookies_ate = 20\n    salty_cookies_ate = 34\n    # Now, we can calculate the number of sweet cookies left:\n    sweet_cookies_left = sweet_cookies - sweet_cookies_ate\n    salty_cookies_left = salty_cookies - salty_cookies_ate\n    # Now, we can calculate the number of salty cookies ate:\n    salty_cookies_ate = salty_cookies - salty_cookies_left\n    sweet_cookies_ate = sweet_cookies - sweet_cookies_left\n    # Now, we can calculate the difference between the number of salty cookies ate and sweet cookies ate:\n    difference = salty_cookies_ate - sweet_cookies_ate\n    return difference\nans = solver()", "answer": 14.0}
{"question": "How many more bottles of regular soda than diet soda did they have?", "passage": "A grocery store had 79 bottles of regular soda, 53 bottles of diet soda and 42 apples.", "executed": 26.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A grocery store had 79 bottles of regular soda, 53 bottles of diet soda and 42 apples. How many more bottles of regular soda than diet soda did they have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    regular_soda = 79\n    diet_soda = 53\n    apples = 42\n    # Now, we can calculate the difference between regular soda and diet soda\n    difference = regular_soda - diet_soda\n    return difference\nans = solver()", "answer": 26.0}
{"question": "How many invitations are in each pack?", "passage": "Carol was sending out birthday invitations to 12 friends. She bought 3 packs each one having the same number of invitations.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Carol was sending out birthday invitations to 12 friends. She bought 3 packs each one having the same number of invitations. How many invitations are in each pack?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of invitations in each pack\n    # y = number of packs\n    # z = number of invitations\n    x = Symbol('x')\n    y = Symbol('y')\n    z = Symbol('z')\n    # Now, we can define the equation:\n    equation = Eq(x*y, z)\n    # Now, we can substitute the values of x, y, and z:\n    equation = equation.subs([(x, 3), (y, 3), (z, 12)])\n    # Now, we can solve the equation:\n    answer = solve(equation, x)\n    return answer\nans = solver()", "answer": 4.0}
{"question": "How many apples does Jake have?", "passage": "Jake has 13 fewer peaches and 3 more apples than Steven. Steven has 9 peaches and 8 apples.", "executed": 11.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jake has 13 fewer peaches and 3 more apples than Steven. Steven has 9 peaches and 8 apples. How many apples does Jake have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    jake_peaches = 0\n    jake_apples = 0\n    steven_peaches = 9\n    steven_apples = 8\n    # Now, we can use the given information to derive the answer:\n    jake_peaches = steven_peaches - 13\n    jake_apples = steven_apples + 3\n    return jake_apples\nans = solver()", "answer": 11.0}
{"question": "How many marbles does Josh have now?", "passage": "Josh had 22 marbles in his collection. Jack gave him 20 marbles.", "executed": 42.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Josh had 22 marbles in his collection. Jack gave him 20 marbles. How many marbles does Josh have now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    josh_marbles = 22\n    jack_marbles = 20\n    josh_marbles_after = josh_marbles + jack_marbles\n    return josh_marbles_after\nans = solver()", "answer": 42.0}
{"question": "How many pencils does she have?", "passage": "Faye had 31 packs of pencils each one having 6 pencils. She was placing her pencils into rows with 19 pencils in each row.", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Faye had 31 packs of pencils each one having 6 pencils. She was placing her pencils into rows with 19 pencils in each row. How many pencils does she have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    packs = 31\n    pencils_per_pack = 6\n    pencils_per_row = 19\n    pencils_total = packs * pencils_per_pack\n    rows = math.ceil(pencils_total / pencils_per_row)\n    return rows\nans = solver()", "answer": 186.0}
{"question": "How many peaches does Jake have?", "passage": "Jake has 84 more apples and 10 fewer peaches than Steven. Steven has 13 peaches and 52 apples.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jake has 84 more apples and 10 fewer peaches than Steven. Steven has 13 peaches and 52 apples. How many peaches does Jake have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    jake_apples = 0\n    jake_peaches = 0\n    steven_apples = 0\n    steven_peaches = 0\n    # Now, we can define the equations:\n    jake_apples = steven_apples + 84\n    jake_peaches = steven_peaches - 10\n    steven_peaches = 13\n    steven_apples = 52\n    # Now, we can solve the equations:\n    jake_peaches = steven_peaches - 10\n    jake_peaches = 13 - 10\n    jake_peaches = 3\n    return jake_peaches\nans = solver()", "answer": 3.0}
{"question": "How many eggs will each group have?", "passage": "Rebecca wants to split a collection of eggs into 4 groups. Rebecca has 8 eggs and 6 marbles.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rebecca wants to split a collection of eggs into 4 groups. Rebecca has 8 eggs and 6 marbles. How many eggs will each group have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    eggs = 8\n    marbles = 6\n    groups = 4\n    # Now, we can use the variables to calculate the answer:\n    answer = eggs / groups\n    return answer\nans = solver()", "answer": 2.0}
{"question": "How many emails did Jack send in the day?", "passage": "Jack received 4 emails and sent 2 letters in the morning. He then received 6 emails and sent 8 letters in the afternoon.", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jack received 4 emails and sent 2 letters in the morning. He then received 6 emails and sent 8 letters in the afternoon. How many emails did Jack send in the day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Jack received 4 emails in the morning\n    morning_received = 4\n    # Jack sent 2 letters in the morning\n    morning_sent = 2\n    # Jack received 6 emails in the afternoon\n    afternoon_received = 6\n    # Jack sent 8 letters in the afternoon\n    afternoon_sent = 8\n    # Jack sent emails in the day\n    day_sent = 0\n    # Jack received emails in the day\n    day_received = 0\n    # Jack sent emails in the day = Jack sent emails in the morning + Jack sent emails in the afternoon\n    day_sent = morning_sent + afternoon_sent\n    # Jack received emails in the day = Jack received emails in the morning + Jack received emails in the afternoon\n    day_received = morning_received + afternoon_received\n    return day_sent\nans = solver()", "answer": 10.0}
{"question": "How many more pages of reading homework than biology homework did she have?", "passage": "Rachel had to complete 7 pages of math homework, 11 pages of reading homework and 8 more pages of biology homework.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel had to complete 7 pages of math homework, 11 pages of reading homework and 8 more pages of biology homework. How many more pages of reading homework than biology homework did she have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    math_homework = 7\n    reading_homework = 11\n    biology_homework = 8\n    # Now, we can calculate the difference between reading and biology homework\n    difference = reading_homework - biology_homework\n    return difference\nans = solver()", "answer": 3.0}
{"question": "How many candy bar did he buy?", "passage": "Dan has $ 2. He bought some candy bar for $ 6 each one costing $ 3.", "executed": 0.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dan has $ 2. He bought some candy bar for $ 6 each one costing $ 3. How many candy bar did he buy?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    money = 2\n    candy_price = 6\n    candy_cost = 3\n    # Now, we can calculate the number of candy bar he bought:\n    num_candy = math.floor(money / candy_cost)\n    # Finally, we can return the answer:\n    return num_candy\nans = solver()", "answer": 2.0}
{"question": "How many packs of groceries did she buy in all?", "passage": "Lucy went to the grocery store. She bought 4 packs of cookie, 22 packs of cake and 16 packs of chocolate.", "executed": 42.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Lucy went to the grocery store. She bought 4 packs of cookie, 22 packs of cake and 16 packs of chocolate. How many packs of groceries did she buy in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookie = 4\n    cake = 22\n    chocolate = 16\n    # Now, we can calculate the total number of packs of groceries:\n    total = cookie + cake + chocolate\n    return total\nans = solver()", "answer": 42.0}
{"question": "How many students were there in total?", "passage": "The school has 304 grades and each grade has 75 students.", "executed": 22800.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school has 304 grades and each grade has 75 students. How many students were there in total?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    grades = 304\n    students_per_grade = 75\n    total_students = grades * students_per_grade\n    return total_students\nans = solver()", "answer": 22800.0}
{"question": "How much farther until they reach the end of the cave?", "passage": "The cave is 1218 feet deep and they are already at 849 feet. If they are travelling at speed of 17.", "executed": 21.705882352941178, "generated": "\nimport math\nimport numpy as np\n\n# Question: The cave is 1218 feet deep and they are already at 849 feet. If they are travelling at speed of 17. How much farther until they reach the end of the cave?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    depth = 1218\n    current_depth = 849\n    speed = 17\n    distance_to_go = depth - current_depth\n    time_to_go = distance_to_go / speed\n    return time_to_go\nans = solver()", "answer": 369.0}
{"question": "How many pieces of candy did Bobby eat?", "passage": "Bobby had 32 pieces of candy. He ate some pieces of candy. If he has 20 pieces of candy left.", "executed": 12.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bobby had 32 pieces of candy. He ate some pieces of candy. If he has 20 pieces of candy left. How many pieces of candy did Bobby eat?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   1. The number of pieces of candy Bobby had at first: x\n    #   2. The number of pieces of candy Bobby ate: y\n    #   3. The number of pieces of candy Bobby has left: z\n    #   4. The number of pieces of candy Bobby ate: x - z\n    x = 32\n    z = 20\n    y = x - z\n    return y\nans = solver()", "answer": 12.0}
{"question": "How many more cakes did baker make than those he sold?", "passage": "Baker sold 8 cakes. If he had made 40 cakes initially.", "executed": 32.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker sold 8 cakes. If he had made 40 cakes initially. How many more cakes did baker make than those he sold?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cakes_sold = 8\n    cakes_made = 40\n    cakes_left = cakes_made - cakes_sold\n    return cakes_left\nans = solver()", "answer": 32.0}
{"question": "How many visited the Buckingham palace before that day?", "passage": "After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that 92 visitors came to the Buckingham palace that day. If there were 419 visitors the previous day and 103 visitors the day before that.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that 92 visitors came to the Buckingham palace that day. If there were 419 visitors the previous day and 103 visitors the day before that. How many visited the Buckingham palace before that day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   a = 419\n    #   b = 103\n    #   c = 92\n    a = 419\n    b = 103\n    c = 92\n    # Now, we can define the equation:\n    #   a = b + c\n    #   b = c + d\n    #   c = d + e\n    #   d = e + f\n    #   e = f + g\n    #   f = g + h\n    #   g = h + i\n    #   h = i + j\n    #   i = j + k\n    #   j = k + l\n    #   k = l + m\n    #   l = m + n\n    #   m = n + o\n    #   n = o + p\n    #   o = p + q\n    #   p = q + r\n    #   q = r + s\n    #   r = s + t\n    #   s = t + u\n    #   t = u + v\n    #   u = v + w\n    #   v = w + x\n    #   w = x + y\n    #   x = y + z\n    #   y = z + aa\n    #   z = aa + ab\n    #   aa = ab + ac\n    #   ab = ac + ad\n    #   ac = ad + ae\n    #   ad = ae + af\n    #   ae = af + ag\n    #   af = ag +\nans = solver()", "answer": 522.0}
{"question": "How many more visitors visited the Buckingham palace on that day than on the previous day?", "passage": "After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that 100 visitors came to the Buckingham palace on the previous day. If there were 666 visitors on that day.", "executed": 566.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that 100 visitors came to the Buckingham palace on the previous day. If there were 666 visitors on that day. How many more visitors visited the Buckingham palace on that day than on the previous day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   visitors_previous_day = 100\n    #   visitors_current_day = 666\n    visitors_previous_day = 100\n    visitors_current_day = 666\n    # Now, we can calculate the difference between the two days:\n    difference = visitors_current_day - visitors_previous_day\n    return difference\nans = solver()", "answer": 566.0}
{"question": "How many will each of the boys receive?", "passage": "In Haley's class 4 are boys who love to play marbles. If Haley has 23 marbles and wants to keep 15 marbles for herself.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In Haley's class 4 are boys who love to play marbles. If Haley has 23 marbles and wants to keep 15 marbles for herself. How many will each of the boys receive?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    boys = 4\n    marbles = 23\n    haley = 15\n    # Now, we can calculate the number of marbles each boy will receive:\n    each_boy = (marbles - haley) / boys\n    return each_boy\nans = solver()", "answer": 2.0}
{"question": "How many crackers did each person eat?", "passage": "Matthew had 22 crackers and 34 cakes. If Matthew gave equal numbers of crackers and cakes to his 11 friends.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Matthew had 22 crackers and 34 cakes. If Matthew gave equal numbers of crackers and cakes to his 11 friends. How many crackers did each person eat?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    crackers = 22\n    cakes = 34\n    friends = 11\n    # Now, we can calculate the number of crackers and cakes each person eat:\n    crackers_each = crackers / friends\n    cakes_each = cakes / friends\n    # Finally, we can return the answer:\n    return crackers_each\nans = solver()", "answer": 2.0}
{"question": "How many apples were there on all trees initially?", "passage": "Rachel has 3 apple trees. She picked 8 apples from each of her trees. Now the trees have a total 9 apples still on them.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel has 3 apple trees. She picked 8 apples from each of her trees. Now the trees have a total 9 apples still on them. How many apples were there on all trees initially?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of apples on each tree initially\n    # y = number of apples picked from each tree\n    # z = number of apples left on each tree\n    # We can also define the equations:\n    # x - y = z\n    # x - y = z\n    # x - y = z\n    # x + x + x = 3x = 9 + 3y\n    # 3x - 9 = 3y\n    # x = 3y + 9\n    # x - y = z\n    # 3y + 9 - y = z\n    # 2y + 9 = z\n    # x - y = z\n    # 3y + 9 - y = z\n    # 2y + 9 = z\n    # x - y = z\n    # 3y + 9 - y = z\n    # 2y + 9 = z\n    # x - y = z\n    # 3y + 9 - y = z\n    # 2y + 9 = z\n    # x - y = z\n    # 3y + 9 - y = z\n    # 2y + 9 = z\n    # x - y = z\n    # 3y + 9 - y = z\n    # 2y + 9 = z\n    # x - y = z\n    # 3y + 9 - y = z\n    # 2y + 9 = z\n    # x - y = z\n    # 3y + 9 - y = z\n    # 2y + 9 = z\n    # x - y = z\n    #\nans = solver()", "answer": 33.0}
{"question": "How many more cups of sugar than cups of flour does she need to add now?", "passage": "Mary is baking a cake. The recipe calls for 9 cups of flour and 11 cups of sugar. She already put in 4 cups of flour.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 9 cups of flour and 11 cups of sugar. She already put in 4 cups of flour. How many more cups of sugar than cups of flour does she need to add now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    flour_needed = 9\n    sugar_needed = 11\n    flour_added = 4\n    sugar_added = 0\n    # Now, we can calculate the amount of sugar needed to be added:\n    sugar_added = sugar_needed - flour_added\n    return sugar_added\nans = solver()", "answer": 6.0}
{"question": "How many seats are in each bus?", "passage": "The school is planning a field trip. The school has 17 classrooms. There are 46 school buses and a total of 92 students in the school. If all buses are full.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school is planning a field trip. The school has 17 classrooms. There are 46 school buses and a total of 92 students in the school. If all buses are full. How many seats are in each bus?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    classrooms = 17\n    buses = 46\n    students = 92\n    seats = 0\n    # Now, we can use the variables to calculate the answer:\n    seats = students / buses\n    return seats\nans = solver()", "answer": 2.0}
{"question": "How much money did Gwen receive for her birthday?", "passage": "For Gwen's birthday she received some dollars. She spent 8 dollars and has 6 dollars left with her.", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For Gwen's birthday she received some dollars. She spent 8 dollars and has 6 dollars left with her. How much money did Gwen receive for her birthday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Gwen's birthday money = x\n    # Gwen's money after spending = y\n    # Gwen's money left = z\n    x = 0\n    y = 0\n    z = 0\n    # Now we can write the equations:\n    # x - 8 = y\n    # y - 6 = z\n    # z = 0\n    # We can solve this system of equations using numpy.linalg.solve()\n    A = np.array([[1, -1, 0], [0, 1, -1], [0, 0, 1]])\n    b = np.array([8, 6, 0])\n    x = np.linalg.solve(A, b)\n    return x[0]\nans = solver()", "answer": 14.0}
{"question": "How many bottle caps did danny have at first?", "passage": "Danny collects bottle caps. He lost 66 bottle caps at the park. Now he has 25 bottle caps in his collection.", "executed": 91.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Danny collects bottle caps. He lost 66 bottle caps at the park. Now he has 25 bottle caps in his collection. How many bottle caps did danny have at first?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    lost = 66\n    now = 25\n    # Now we can calculate the answer:\n    first = now + lost\n    return first\nans = solver()", "answer": 91.0}
{"question": "How many peaches does Jake have?", "passage": "Jake has 6 fewer peaches than Steven. Steven has 18 more peaches than Jill. If jill has 5 peaches.", "executed": 17.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jake has 6 fewer peaches than Steven. Steven has 18 more peaches than Jill. If jill has 5 peaches. How many peaches does Jake have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    jake = 0\n    steven = 0\n    jill = 5\n    # Now, we can use the given information to derive the answer:\n    steven = jill + 18\n    jake = steven - 6\n    return jake\nans = solver()", "answer": 17.0}
{"question": "About how many kids are in Lawrence county?", "passage": "During summer break 907611 kids from Lawrence county stay home and the other 455682 kids go to camp.", "executed": 1363293.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: During summer break 907611 kids from Lawrence county stay home and the other 455682 kids go to camp. About how many kids are in Lawrence county?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    kids_at_home = 907611\n    kids_at_camp = 455682\n    total_kids = kids_at_home + kids_at_camp\n    return total_kids\nans = solver()", "answer": 1363293.0}
{"question": "How many books were on his shelf in all?", "passage": "Jerry had 8 action figures and 9 books on a shelf in his room. Later he added 10 more books to the shelf.", "executed": 19.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jerry had 8 action figures and 9 books on a shelf in his room. Later he added 10 more books to the shelf. How many books were on his shelf in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    action_figures = 8\n    books = 9\n    more_books = 10\n    total_books = books + more_books\n    return total_books\nans = solver()", "answer": 19.0}
{"question": "How many storks are sitting on the fence?", "passage": "4 birds and 6 storks were sitting on the fence. 2 more storks came to join them.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 4 birds and 6 storks were sitting on the fence. 2 more storks came to join them. How many storks are sitting on the fence?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    birds = 4\n    storks = 6\n    new_storks = 2\n    total_storks = storks + new_storks\n    return total_storks\nans = solver()", "answer": 8.0}
{"question": "How many more balloons did Allan have than Jake in the park?", "passage": "Allan brought 6 balloons and Jake brought 2 balloons to the park. Jake then bought 3 more balloons at the park.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Allan brought 6 balloons and Jake brought 2 balloons to the park. Jake then bought 3 more balloons at the park. How many more balloons did Allan have than Jake in the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    allan_balloons = 6\n    jake_balloons = 2\n    jake_bought_balloons = 3\n    # Now, we can calculate the number of balloons that Jake had in the park:\n    jake_balloons_in_park = jake_balloons + jake_bought_balloons\n    # Now, we can calculate the number of balloons that Allan had in the park:\n    allan_balloons_in_park = allan_balloons\n    # Now, we can calculate the difference between the number of balloons that Allan had in the park and the number of balloons that Jake had in the park:\n    difference = allan_balloons_in_park - jake_balloons_in_park\n    # Now, we can return the difference:\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many pencils does she have?", "passage": "Faye was placing her pencils and crayons into 19 rows with 4 pencils and 27 crayons in each row.", "executed": 76.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Faye was placing her pencils and crayons into 19 rows with 4 pencils and 27 crayons in each row. How many pencils does she have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    pencils_per_row = 4\n    crayons_per_row = 27\n    rows = 19\n    pencils = pencils_per_row * rows\n    return pencils\nans = solver()", "answer": 76.0}
{"question": "How much money did they make from selling the t-shirts?", "passage": "The Razorback t-shirt shop sells each t-shirt for $ 201 dollars. During the Arkansas and Texas tech game they increased the prices by $ 217 per t-shirt and sold 14 t-shirts.", "executed": 5852.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The Razorback t-shirt shop sells each t-shirt for $ 201 dollars. During the Arkansas and Texas tech game they increased the prices by $ 217 per t-shirt and sold 14 t-shirts. How much money did they make from selling the t-shirts?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    price = 201\n    increase = 217\n    sold = 14\n    # Now, we can calculate the total money made by selling the t-shirts:\n    total = price * sold + increase * sold\n    return total\nans = solver()", "answer": 5852.0}
{"question": "How many marbles does Doug have now?", "passage": "Ed had 12 more marbles than Doug. Ed lost 20 of his marbles at the playground. If Ed had 17 marbles.", "executed": 25.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Ed had 12 more marbles than Doug. Ed lost 20 of his marbles at the playground. If Ed had 17 marbles. How many marbles does Doug have now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    ed_marbles = 17\n    ed_lost = 20\n    ed_marbles_before_lost = ed_marbles + ed_lost\n    ed_marbles_before_lost_more_than_doug = 12\n    doug_marbles = ed_marbles_before_lost - ed_marbles_before_lost_more_than_doug\n    return doug_marbles\nans = solver()", "answer": 5.0}
{"question": "How many kids go to the camp during the break?", "passage": "Lawrence county has 313473 kids. During summer break 274865 kids stay home and the rest go to camp.", "executed": 38608.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Lawrence county has 313473 kids. During summer break 274865 kids stay home and the rest go to camp. How many kids go to the camp during the break?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    kids_at_home = 274865\n    kids_at_camp = 313473 - 274865\n    return kids_at_camp\nans = solver()", "answer": 38608.0}
{"question": "How much more does a t-shirt cost than a jersey?", "passage": "The Razorback shop makes $ 210 dollars off each jersey and $ 240 off each t-shirt. During the Arkansas and Texas tech game they sold 177 t-shirts and 23 jerseys.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: The Razorback shop makes $ 210 dollars off each jersey and $ 240 off each t-shirt. During the Arkansas and Texas tech game they sold 177 t-shirts and 23 jerseys. How much more does a t-shirt cost than a jersey?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # t-shirt price = x\n    # jersey price = y\n    # total revenue = 210y + 240x\n    # total number of t-shirts sold = 177\n    # total number of jerseys sold = 23\n    # total number of t-shirts sold * t-shirt price = 177x\n    # total number of jerseys sold * jersey price = 23y\n    # total revenue = total number of t-shirts sold * t-shirt price + total number of jerseys sold * jersey price\n    # 210y + 240x = 177x + 23y\n    # 13y = 17x\n    # y = 17/13 * x\n    # t-shirt price - jersey price = 17/13 * x - x = 4/13 * x\n    return 4/13 * x\nans = solver()", "answer": 30.0}
{"question": "How much money did he spend buying the candy bar and chocolate?", "passage": "Dan has $ 4. He bought a candy bar for $ 7 and a chocolate for $ 6.", "executed": 13.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dan has $ 4. He bought a candy bar for $ 7 and a chocolate for $ 6. How much money did he spend buying the candy bar and chocolate?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    money_dan = 4\n    candy_bar = 7\n    chocolate = 6\n    # Now, we can calculate the answer:\n    answer = candy_bar + chocolate\n    return answer\nans = solver()", "answer": 13.0}
{"question": "How many action figures were on his shelf in all?", "passage": "Jerry had 4 action figures and 22 books on a shelf in his room. Later he added 6 more action figures to the shelf.", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jerry had 4 action figures and 22 books on a shelf in his room. Later he added 6 more action figures to the shelf. How many action figures were on his shelf in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    action_figures = 4\n    books = 22\n    added_action_figures = 6\n    total_action_figures = action_figures + added_action_figures\n    return total_action_figures\nans = solver()", "answer": 10.0}
{"question": "How many cups of flour did the recipe require?", "passage": "Mary is baking a cake. The recipe calls for 11 cups of sugar and some more cups of flour. She already put in 3 cups of flour. If she still needs to add 6 more cups of flour.", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 11 cups of sugar and some more cups of flour. She already put in 3 cups of flour. If she still needs to add 6 more cups of flour. How many cups of flour did the recipe require?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sugar = 11\n    flour = 3\n    more_flour = 6\n    # Now, we can calculate the total amount of flour required:\n    total_flour = flour + more_flour\n    return total_flour\nans = solver()", "answer": 9.0}
{"question": "How many more pastries than cakes did baker sell?", "passage": "Baker made 54 cakes and 143 pastries. If he sold 68 cakes and 92 pastries.", "executed": 65.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 54 cakes and 143 pastries. If he sold 68 cakes and 92 pastries. How many more pastries than cakes did baker sell?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cakes = 54\n    pastries = 143\n    sold_cakes = 68\n    sold_pastries = 92\n    # Now, we can calculate the number of cakes and pastries that baker sold\n    sold_cakes = cakes - sold_cakes\n    sold_pastries = pastries - sold_pastries\n    # Now, we can calculate the difference between the number of pastries and cakes that baker sold\n    difference = sold_pastries - sold_cakes\n    return difference\nans = solver()", "answer": 24.0}
{"question": "How many birds and storks are sitting on the fence?", "passage": "3 birds and 2 storks were sitting on the fence. 5 more birds came to join them.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 3 birds and 2 storks were sitting on the fence. 5 more birds came to join them. How many birds and storks are sitting on the fence?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    birds = 3\n    storks = 2\n    new_birds = 5\n    total_birds = birds + new_birds\n    total_storks = storks\n    return total_birds, total_storks\nans = solver()", "answer": 10.0}
{"question": "How many kids did she play tag with altogether?", "passage": "Julia played tag with 7 kids on monday and 13 kids on tuesday. She played cards wtih 20 kids on wednesday.", "executed": 20.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Julia played tag with 7 kids on monday and 13 kids on tuesday. She played cards wtih 20 kids on wednesday. How many kids did she play tag with altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 7\n    tuesday = 13\n    wednesday = 20\n    # Now, we can calculate the total number of kids that Julia played tag with:\n    total = monday + tuesday\n    # Finally, we can return the answer:\n    return total\nans = solver()", "answer": 20.0}
{"question": "How many days will it take to fill 240 drums of grapes?", "passage": "Being his favorite, he saved checking on the grapevines for his last stop. He was told by 36 of the pickers that they fill 8 drums of grapes per day.", "executed": 30.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Being his favorite, he saved checking on the grapevines for his last stop. He was told by 36 of the pickers that they fill 8 drums of grapes per day. How many days will it take to fill 240 drums of grapes?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    pickers = 36\n    drums_per_day = 8\n    total_drums = 240\n    days = 0\n    # Now, we can calculate the days by dividing the total drums by the drums per day\n    days = total_drums / drums_per_day\n    return days\nans = solver()", "answer": 30.0}
{"question": "How many pieces of candy does he still have left?", "passage": "Bobby ate 23 pieces of candy. If he initially had 30 pieces of candy.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bobby ate 23 pieces of candy. If he initially had 30 pieces of candy. How many pieces of candy does he still have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    initial_candy = 30\n    eaten_candy = 23\n    remaining_candy = initial_candy - eaten_candy\n    return remaining_candy\nans = solver()", "answer": 7.0}
{"question": "How many people can ride the Ferris wheel at the same time?", "passage": "The Ferris wheel in paradise park has 18 seats. Each seat can hold 15 people. If 10 seats are broken.", "executed": 120.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The Ferris wheel in paradise park has 18 seats. Each seat can hold 15 people. If 10 seats are broken. How many people can ride the Ferris wheel at the same time?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    total_seats = 18\n    total_people = 15\n    broken_seats = 10\n    # Now, we can calculate the number of people can ride the Ferris wheel at the same time:\n    people_can_ride = (total_seats - broken_seats) * total_people\n    return people_can_ride\nans = solver()", "answer": 120.0}
{"question": "How long is his hair now?", "passage": "Robin's hair was 16 inches long. He cut off 11 inches. Then it again grew by 12 inches.", "executed": 17.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Robin's hair was 16 inches long. He cut off 11 inches. Then it again grew by 12 inches. How long is his hair now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    hair_length = 16\n    cut_length = 11\n    grow_length = 12\n    # Now, we can calculate the answer:\n    answer = hair_length - cut_length + grow_length\n    return answer\nans = solver()", "answer": 17.0}
{"question": "How many chapters did he read per day?", "passage": "Frank was reading through his favorite book. The book had 193 pages equally distributed over 15 chapters. It took Frank 660 days to finish the book.", "executed": 0.022727272727272728, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank was reading through his favorite book. The book had 193 pages equally distributed over 15 chapters. It took Frank 660 days to finish the book. How many chapters did he read per day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   pages = 193\n    #   chapters = 15\n    #   days = 660\n    pages = 193\n    chapters = 15\n    days = 660\n    # Now, we can calculate the number of chapters per day:\n    chapters_per_day = chapters / days\n    return chapters_per_day\nans = solver()", "answer": 44.0}
{"question": "How far did the frog jump?", "passage": "The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped 19 inches. The grasshopper jumped 4 inches farther than the frog and the mouse jumped 44 inches lesser than the frog.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped 19 inches. The grasshopper jumped 4 inches farther than the frog and the mouse jumped 44 inches lesser than the frog. How far did the frog jump?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    grasshopper = 19\n    frog = ?\n    mouse = ?\n    # We can also define the relations between the variables:\n    frog = grasshopper - 4\n    mouse = frog - 44\n    return frog\nans = solver()", "answer": 15.0}
{"question": "How many bird families flew away for the winter?", "passage": "Winter is almost here and most animals are migrating to warmer countries. There are 18 bird families living near the mountain. If 38 bird families flew away to africa and 80 bird families flew away to asia.", "executed": 118.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Winter is almost here and most animals are migrating to warmer countries. There are 18 bird families living near the mountain. If 38 bird families flew away to africa and 80 bird families flew away to asia. How many bird families flew away for the winter?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bird_families_near_mountain = 18\n    bird_families_to_africa = 38\n    bird_families_to_asia = 80\n    bird_families_to_winter = bird_families_to_africa + bird_families_to_asia\n    return bird_families_to_winter\nans = solver()", "answer": 118.0}
{"question": "How many crackers did each friend eat?", "passage": "Matthew had 23 crackers. He has 11 crackers left after he gave equal numbers of crackers to his 2 friends.", "executed": 12.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Matthew had 23 crackers. He has 11 crackers left after he gave equal numbers of crackers to his 2 friends. How many crackers did each friend eat?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Matthew's crackers = x\n    # Matthew's friends = y\n    # Each friend's crackers = z\n    x = 23\n    y = 2\n    z = 11\n    return x - z\nans = solver()", "answer": 6.0}
{"question": "How many apples are there on the tree now?", "passage": "Rachel's tree had 4 apples. She picked 2 apples from her tree. Thereafter 3 new apples grew on the tree.", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel's tree had 4 apples. She picked 2 apples from her tree. Thereafter 3 new apples grew on the tree. How many apples are there on the tree now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    apples_on_tree = 4\n    apples_picked = 2\n    apples_grew = 3\n    apples_on_tree_now = apples_on_tree - apples_picked + apples_grew\n    return apples_on_tree_now\nans = solver()", "answer": 1.0}
{"question": "How many bird families live near the mountain now?", "passage": "Summer is almost here and most animals are migrating back to cooler countries. There are 87 bird families living near a mountain. If 18 new bird families joined them.", "executed": 105.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Summer is almost here and most animals are migrating back to cooler countries. There are 87 bird families living near a mountain. If 18 new bird families joined them. How many bird families live near the mountain now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bird_families_before = 87\n    new_bird_families = 18\n    bird_families_after = bird_families_before + new_bird_families\n    return bird_families_after\nans = solver()", "answer": 105.0}
{"question": "How many more wrappers than bottle caps does danny have now?", "passage": "Danny collects bottle caps and wrappers. He found 15 bottle caps and 18 wrappers at the park. Now he has 67 wrappers and 35 bottle caps in his collection.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Danny collects bottle caps and wrappers. He found 15 bottle caps and 18 wrappers at the park. Now he has 67 wrappers and 35 bottle caps in his collection. How many more wrappers than bottle caps does danny have now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bottle_caps = 15\n    wrappers = 18\n    bottle_caps_now = 35\n    wrappers_now = 67\n    # Now we can calculate the difference between the wrappers and bottle caps now and before:\n    wrappers_diff = wrappers_now - wrappers\n    bottle_caps_diff = bottle_caps_now - bottle_caps\n    # Now we can calculate the difference between the wrappers and bottle caps now and before:\n    wrappers_diff = wrappers_now - wrappers\n    bottle_caps_diff = bottle_caps_now - bottle_caps\n    # Now we can calculate the difference between the wrappers and bottle caps now and before:\n    wrappers_diff = wrappers_now - wrappers\n    bottle_caps_diff = bottle_caps_now - bottle_caps\n    # Now we can calculate the difference between the wrappers and bottle caps now and before:\n    wrappers_diff = wrappers_now - wrappers\n    bottle_caps_diff = bottle_caps_now - bottle_caps\n    # Now we can calculate the difference between the wrappers and bottle caps now and before:\n    wrappers_diff = wrappers_now - wrappers\n    bottle_caps_diff = bottle_caps_now - bottle_caps\n    # Now we can calculate the difference between the wrappers and bottle caps now and before:\n    wrappers_diff = wrappers_now - wrappers\n    bottle_caps_diff = bottle_caps_now - bottle_caps\n    # Now\nans = solver()", "answer": 32.0}
{"question": "How many points did she score in each game?", "passage": "Melissa scored a total of 91 points in 13 games scoring the same for each game.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Melissa scored a total of 91 points in 13 games scoring the same for each game. How many points did she score in each game?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    total_points = 91\n    total_games = 13\n    points_per_game = total_points / total_games\n    return points_per_game\nans = solver()", "answer": 7.0}
{"question": "How much of his hair did he cut?", "passage": "Robin's hair was 17 inches long. He cut off some inches of her hair. If his hair is now 13 inches long.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Robin's hair was 17 inches long. He cut off some inches of her hair. If his hair is now 13 inches long. How much of his hair did he cut?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = the length of his hair that he cut\n    # y = the length of his hair that he didn't cut\n    # z = the length of his hair that he cut off\n    x = 17\n    y = 13\n    z = x - y\n    return z\nans = solver()", "answer": 4.0}
{"question": "How many pastries would baker still have?", "passage": "Baker made 56 pastries and 124 cakes. If he sold 104 cakes and 29 pastries.", "executed": 27.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 56 pastries and 124 cakes. If he sold 104 cakes and 29 pastries. How many pastries would baker still have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    pastries = 56\n    cakes = 124\n    sold_pastries = 29\n    sold_cakes = 104\n    # Now, we can calculate the remaining pastries:\n    remaining_pastries = pastries - sold_pastries\n    return remaining_pastries\nans = solver()", "answer": 27.0}
{"question": "How many buses are needed to take the trip?", "passage": "The school is planning a field trip. The school has 67 classrooms. There are 66 students in each classroom in the school. If there are 6 seats on each school bus.", "executed": 737.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school is planning a field trip. The school has 67 classrooms. There are 66 students in each classroom in the school. If there are 6 seats on each school bus. How many buses are needed to take the trip?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    classrooms = 67\n    students_per_classroom = 66\n    seats_per_bus = 6\n    # Now, we can calculate the total number of students in the school:\n    total_students = classrooms * students_per_classroom\n    # Now, we can calculate the total number of buses needed:\n    total_buses = math.ceil(total_students / seats_per_bus)\n    return total_buses\nans = solver()", "answer": 737.0}
{"question": "How much money did they make from selling the t-shirts?", "passage": "The Razorback t-shirt shop makes $ 87 dollars off each t-shirt sold. During the Arkansas game and the Texas tech game they sold a total of 95 t-shirts. If they sold 47 t-shirts during the Arkansas game.", "executed": 8265.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The Razorback t-shirt shop makes $ 87 dollars off each t-shirt sold. During the Arkansas game and the Texas tech game they sold a total of 95 t-shirts. If they sold 47 t-shirts during the Arkansas game. How much money did they make from selling the t-shirts?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of t-shirts sold during the Arkansas game\n    # y = number of t-shirts sold during the Texas tech game\n    # z = total money made from selling the t-shirts\n    x = 47\n    y = 95 - x\n    z = 87 * x + 87 * y\n    return z\nans = solver()", "answer": 8265.0}
{"question": "How many more storks than birds are sitting on the fence?", "passage": "3 birds were sitting on the fence. 2 more birds and 6 more storks came to join them.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 3 birds were sitting on the fence. 2 more birds and 6 more storks came to join them. How many more storks than birds are sitting on the fence?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    birds = 3\n    storks = 0\n    # Now, 2 more birds and 6 more storks came to join them.\n    birds += 2\n    storks += 6\n    # How many more storks than birds are sitting on the fence?\n    return storks - birds\nans = solver()", "answer": 1.0}
{"question": "How many seats are in each bus?", "passage": "The school is planning a field trip. The school has 21 classrooms. There are 98 students in the school and 7 school buses. If all buses are full.", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school is planning a field trip. The school has 21 classrooms. There are 98 students in the school and 7 school buses. If all buses are full. How many seats are in each bus?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    classrooms = 21\n    students = 98\n    buses = 7\n    seats = 0\n    # Now, we can calculate the seats in each bus:\n    seats = students / buses\n    return seats\nans = solver()", "answer": 14.0}
{"question": "How many blocks did he use to build the tower and the house altogether?", "passage": "Randy has 58 blocks. He uses 27 blocks to build a tower and 53 blocks to build a house.", "executed": 80.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Randy has 58 blocks. He uses 27 blocks to build a tower and 53 blocks to build a house. How many blocks did he use to build the tower and the house altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    tower = 27\n    house = 53\n    blocks = 58\n    # Now, we can calculate the answer:\n    answer = tower + house\n    return answer\nans = solver()", "answer": 80.0}
{"question": "How many hours does he spend on learning chinese in all?", "passage": "Every day Ryan spends 5 hours on learning english and 4 hours on learning chinese. If he learns for 6 days.", "executed": 24.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Every day Ryan spends 5 hours on learning english and 4 hours on learning chinese. If he learns for 6 days. How many hours does he spend on learning chinese in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    english_hours = 5\n    chinese_hours = 4\n    days = 6\n    total_chinese_hours = chinese_hours * days\n    return total_chinese_hours\nans = solver()", "answer": 24.0}
{"question": "How much more does a jersey cost than a t-shirt?", "passage": "The Razorback shop makes $ 86 dollars off each t-shirt and $ 232 off each jersey. During the Arkansas and Texas tech game they sold 254 t-shirts and 43 jerseys.", "executed": 146.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The Razorback shop makes $ 86 dollars off each t-shirt and $ 232 off each jersey. During the Arkansas and Texas tech game they sold 254 t-shirts and 43 jerseys. How much more does a jersey cost than a t-shirt?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    t_shirt_price = 86\n    jersey_price = 232\n    t_shirt_sold = 254\n    jersey_sold = 43\n    # Now, we can calculate the total revenue from t-shirts and jerseys:\n    t_shirt_revenue = t_shirt_price * t_shirt_sold\n    jersey_revenue = jersey_price * jersey_sold\n    # Now, we can calculate the total revenue from both t-shirts and jerseys:\n    total_revenue = t_shirt_revenue + jersey_revenue\n    # Now, we can calculate the average price of t-shirts and jerseys:\n    average_t_shirt_price = t_shirt_revenue / t_shirt_sold\n    average_jersey_price = jersey_revenue / jersey_sold\n    # Now, we can calculate the difference between the average price of t-shirts and jerseys:\n    difference = average_jersey_price - average_t_shirt_price\n    return difference\nans = solver()", "answer": 146.0}
{"question": "How many wrappers did danny have at first?", "passage": "Danny collects bottle caps and wrappers. He found 66 wrappers and 39 bottle caps at the park. Now he has 16 bottle caps and 68 wrappers in his collection.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Danny collects bottle caps and wrappers. He found 66 wrappers and 39 bottle caps at the park. Now he has 16 bottle caps and 68 wrappers in his collection. How many wrappers did danny have at first?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # wrappers_at_first = ?\n    # wrappers_at_park = 66\n    # caps_at_park = 39\n    # caps_at_first = ?\n    # caps_at_now = 16\n    # wrappers_at_now = 68\n    # caps_to_wrapper = 4\n    # wrappers_to_cap = 2\n    # caps_at_first = caps_at_now + caps_at_park - caps_to_wrapper * wrappers_at_park\n    # wrappers_at_first = wrappers_at_now + wrappers_at_park - wrappers_to_cap * caps_at_park\n    return wrappers_at_first\nans = solver()", "answer": 2.0}
{"question": "How many more trees died in the typhoon than those that survived?", "passage": "Haley grew 14 trees in her backyard. After a typhoon 9 died.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Haley grew 14 trees in her backyard. After a typhoon 9 died. How many more trees died in the typhoon than those that survived?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    total_trees = 14\n    trees_died = 9\n    trees_survived = total_trees - trees_died\n    trees_died_more = trees_died - trees_survived\n    return trees_died_more\nans = solver()", "answer": 4.0}
{"question": "How many apples does He have?", "passage": "He has 9 apples more than Adam and Jackie together do. Adam and Jackie have 7 apples between them.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: He has 9 apples more than Adam and Jackie together do. Adam and Jackie have 7 apples between them. How many apples does He have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # He = x\n    # Adam = y\n    # Jackie = z\n    # x = y + z + 9\n    # y + z = 7\n    # x = y + z + 9\n    # y + z = 7\n    # x = y + z + 9\n    # y + z = 7\n    # x = y + z + 9\n    # y + z = 7\n    # x = y + z + 9\n    # y + z = 7\n    # x = y + z + 9\n    # y + z = 7\n    # x = y + z + 9\n    # y + z = 7\n    # x = y + z + 9\n    # y + z = 7\n    # x = y + z + 9\n    # y + z = 7\n    # x = y + z + 9\n    # y + z = 7\n    # x = y + z + 9\n    # y + z = 7\n    # x = y + z + 9\n    # y + z = 7\n    # x = y + z + 9\n    # y + z = 7\n    # x = y + z + 9\n    # y + z = 7\n    # x = y + z + 9\n    # y + z = 7\n    # x = y + z + 9\n    # y + z = 7\n    # x = y + z + 9\n    # y + z = 7\n    # x = y + z + 9\n    # y + z\nans = solver()", "answer": 16.0}
{"question": "How many more files than apps does he have left on the phone?", "passage": "Dave had 11 apps and 3 files on his phone. After deleting some apps and files he had 24 files and 2 apps left.", "executed": 22.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dave had 11 apps and 3 files on his phone. After deleting some apps and files he had 24 files and 2 apps left. How many more files than apps does he have left on the phone?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    apps = 11\n    files = 3\n    apps_left = 2\n    files_left = 24\n    # Now we can calculate the number of apps and files deleted:\n    apps_deleted = apps - apps_left\n    files_deleted = files - files_left\n    # Now we can calculate the number of apps and files left:\n    apps_left = apps - apps_deleted\n    files_left = files - files_deleted\n    # Now we can calculate the number of files more than apps:\n    files_more_than_apps = files_left - apps_left\n    return files_more_than_apps\nans = solver()", "answer": 22.0}
{"question": "How many eggs does Rebecca have?", "passage": "Rebecca wants to split a collection of eggs into groups of 11. If each group has 2 eggs.", "executed": 22.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rebecca wants to split a collection of eggs into groups of 11. If each group has 2 eggs. How many eggs does Rebecca have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    eggs = 0\n    group = 0\n    group_size = 0\n    # Now, we can start to solve the problem\n    group_size = 2\n    group = 11\n    eggs = group * group_size\n    return eggs\nans = solver()", "answer": 22.0}
{"question": "How many more emails did Jack receive in the morning than in the afternoon?", "passage": "Jack received 10 emails in the morning, 7 emails in the afternoon and 17 emails in the evening.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jack received 10 emails in the morning, 7 emails in the afternoon and 17 emails in the evening. How many more emails did Jack receive in the morning than in the afternoon?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning_emails = 10\n    afternoon_emails = 7\n    evening_emails = 17\n    # Now, we need to find the difference between morning_emails and afternoon_emails\n    difference = morning_emails - afternoon_emails\n    return difference\nans = solver()", "answer": 3.0}
{"question": "How many total action figures could his shelves hold?", "passage": "Adam could fit 11 action figures on each shelf in his room. His room has 4 shelves and 40 cabinets.", "executed": 1760.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Adam could fit 11 action figures on each shelf in his room. His room has 4 shelves and 40 cabinets. How many total action figures could his shelves hold?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    shelf_per_cabinet = 4\n    action_figures_per_shelf = 11\n    total_cabinets = 40\n    total_shelves = shelf_per_cabinet * total_cabinets\n    total_action_figures = action_figures_per_shelf * total_shelves\n    return total_action_figures\nans = solver()", "answer": 44.0}
{"question": "How many more packs of cookie did she buy over cake?", "passage": "Lucy went to the grocery store. She bought 10 packs of cookie and 4 packs of cake.", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Lucy went to the grocery store. She bought 10 packs of cookie and 4 packs of cake. How many more packs of cookie did she buy over cake?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookie = 10\n    cake = 4\n    # Now, we can calculate the difference between cookie and cake\n    difference = cookie - cake\n    return difference\nans = solver()", "answer": 6.0}
{"question": "How many more hours does he spend on learning english than he does on learning chinese?", "passage": "Every day Ryan spends 6 hours on learning english and 2 hours on learning chinese.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Every day Ryan spends 6 hours on learning english and 2 hours on learning chinese. How many more hours does he spend on learning english than he does on learning chinese?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    english_hours = 6\n    chinese_hours = 2\n    # Then we can calculate the difference between the hours spent on learning english and chinese\n    difference = english_hours - chinese_hours\n    return difference\nans = solver()", "answer": 4.0}
{"question": "How many crunches did David do?", "passage": "David did 40 more push-ups but 17 less crunches than Zachary in gym class today. If Zachary did 34 push-ups and 62 crunches.", "executed": 45.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: David did 40 more push-ups but 17 less crunches than Zachary in gym class today. If Zachary did 34 push-ups and 62 crunches. How many crunches did David do?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    push_ups_zachary = 34\n    crunches_zachary = 62\n    push_ups_david = push_ups_zachary + 40\n    crunches_david = crunches_zachary - 17\n    return crunches_david\nans = solver()", "answer": 45.0}
{"question": "How much farther did the frog jump than the grasshopper?", "passage": "The grasshopper and the frog had a jumping contest. The frog jumped 39 inches and the grasshopper jumped 17 inches.", "executed": 22.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The grasshopper and the frog had a jumping contest. The frog jumped 39 inches and the grasshopper jumped 17 inches. How much farther did the frog jump than the grasshopper?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    frog_jump = 39\n    grasshopper_jump = 17\n    # Now, we can calculate the difference between the frog's jump and the grasshopper's jump:\n    difference = frog_jump - grasshopper_jump\n    # Finally, we can return the difference:\n    return difference\nans = solver()", "answer": 22.0}
{"question": "How many books did he buy?", "passage": "Paul had 50 books. After buying some in a garage sale he had 151 left.", "executed": -101.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul had 50 books. After buying some in a garage sale he had 151 left. How many books did he buy?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   a = number of books Paul had before buying\n    #   b = number of books Paul had after buying\n    #   c = number of books Paul bought\n    a = 50\n    b = 151\n    c = a - b\n    return c\nans = solver()", "answer": 101.0}
{"question": "How much farther until they reach the end of the cave?", "passage": "If they are already at 659 feet and the cave is 762 feet deep.", "executed": 103.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: If they are already at 659 feet and the cave is 762 feet deep. How much farther until they reach the end of the cave?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    current_depth = 659\n    cave_depth = 762\n    distance_to_go = cave_depth - current_depth\n    return distance_to_go\nans = solver()", "answer": 103.0}
{"question": "How many new games do they have together?", "passage": "Katie had 78 new games and 86 old games. Her friends had 48 new games.", "executed": 126.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Katie had 78 new games and 86 old games. Her friends had 48 new games. How many new games do they have together?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    new_games_katie = 78\n    old_games_katie = 86\n    new_games_friends = 48\n    new_games_together = new_games_katie + new_games_friends\n    return new_games_together\nans = solver()", "answer": 126.0}
{"question": "How many marbles does he have now?", "passage": "Josh had 19 marbles in his collection. He lost 11 marbles and found 5 new ones.", "executed": 13.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Josh had 19 marbles in his collection. He lost 11 marbles and found 5 new ones. How many marbles does he have now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marbles_in_collection = 19\n    marbles_lost = 11\n    marbles_found = 5\n    marbles_now = marbles_in_collection - marbles_lost + marbles_found\n    return marbles_now\nans = solver()", "answer": 13.0}
{"question": "How many action figures did he add to the shelf?", "passage": "Jerry had 4 action figures on a shelf in his room. Later he added some more action figures to the shelf. If there are a total of 8 action figures on his shelf now.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jerry had 4 action figures on a shelf in his room. Later he added some more action figures to the shelf. If there are a total of 8 action figures on his shelf now. How many action figures did he add to the shelf?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   a = 4\n    #   b = 8\n    #   c = ?\n    a = 4\n    b = 8\n    c = b - a\n    return c\nans = solver()", "answer": 4.0}
{"question": "How many apples did the tree have to begin with?", "passage": "Rachel has 52 apple trees. She picked 2 apples from 1 of her trees. Now the tree has 7 apples still on it.", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel has 52 apple trees. She picked 2 apples from 1 of her trees. Now the tree has 7 apples still on it. How many apples did the tree have to begin with?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = the number of apples on the tree before Rachel picked 2 apples\n    # y = the number of apples on the tree after Rachel picked 2 apples\n    # z = the number of trees Rachel has\n    x = 0\n    y = 0\n    z = 0\n    # Now we can write the equations:\n    x = y + 2\n    y = x - 2\n    z = 52\n    # We can solve for x:\n    x = y + 2\n    x = (x - 2) + 2\n    x = x\n    x = 7 + 2\n    x = 9\n    return x\nans = solver()", "answer": 9.0}
{"question": "How many slices of pizza does each of us get if distributed equally?", "passage": "We ordered 9 pizzas. Each pizza has 10 slices. If there are 2 of us.", "executed": 45.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: We ordered 9 pizzas. Each pizza has 10 slices. If there are 2 of us. How many slices of pizza does each of us get if distributed equally?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    num_pizzas = 9\n    num_slices = 10\n    num_people = 2\n    num_slices_per_person = num_slices * num_pizzas / num_people\n    return num_slices_per_person\nans = solver()", "answer": 45.0}
{"question": "How many emails did Jack receive in the afternoon?", "passage": "Jack received a total of 9 emails in the day. If he received 7 emails in the morning and some more in the afternoon.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jack received a total of 9 emails in the day. If he received 7 emails in the morning and some more in the afternoon. How many emails did Jack receive in the afternoon?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning_emails = 7\n    total_emails = 9\n    afternoon_emails = total_emails - morning_emails\n    return afternoon_emails\nans = solver()", "answer": 2.0}
{"question": "How many more bottles of regular soda than diet soda did they have?", "passage": "A grocery store had 19 bottles of diet soda and 60 bottles of regular soda.", "executed": 41.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A grocery store had 19 bottles of diet soda and 60 bottles of regular soda. How many more bottles of regular soda than diet soda did they have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    diet_soda = 19\n    regular_soda = 60\n    # Now, we can calculate the difference between the two variables:\n    difference = regular_soda - diet_soda\n    return difference\nans = solver()", "answer": 41.0}
{"question": "How many more pages does the second chapter have than the third chapter?", "passage": "A book has 3 chapters. The first chapter is 35 pages long the second chapter is 18 pages long and the third chapter is 3 pages long.", "executed": 15.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A book has 3 chapters. The first chapter is 35 pages long the second chapter is 18 pages long and the third chapter is 3 pages long. How many more pages does the second chapter have than the third chapter?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    chapter_1 = 35\n    chapter_2 = 18\n    chapter_3 = 3\n    # Now, we can calculate the difference between chapter_2 and chapter_3\n    difference = chapter_2 - chapter_3\n    return difference\nans = solver()", "answer": 15.0}
{"question": "How many blocks did he use to build the tower?", "passage": "Randy has 97 blocks. He uses some blocks to build a tower. If there are 72 blocks left.", "executed": 25.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Randy has 97 blocks. He uses some blocks to build a tower. If there are 72 blocks left. How many blocks did he use to build the tower?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    blocks_left = 72\n    blocks_total = 97\n    blocks_used = blocks_total - blocks_left\n    return blocks_used\nans = solver()", "answer": 25.0}
{"question": "How many students suggested bacon?", "passage": "Because of the decision Sofia asked the students to suggest specific types of food. 182 students suggested adding mashed potatoes while others suggested adding bacon to the menu. If 166 more students suggested adding bacon than those that suggested mashed potatoes.", "executed": 174.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Because of the decision Sofia asked the students to suggest specific types of food. 182 students suggested adding mashed potatoes while others suggested adding bacon to the menu. If 166 more students suggested adding bacon than those that suggested mashed potatoes. How many students suggested bacon?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of students suggested adding mashed potatoes\n    # y = number of students suggested adding bacon\n    # x + y = 182\n    # y - x = 166\n    # We can solve the system of equations to get the answer\n    x = (182 - 166) / 2\n    y = x + 166\n    return y\nans = solver()", "answer": 348.0}
{"question": "How many customers left?", "passage": "A waiter had 13 customers. After some left he got 4 new customers. If he still had 9 customers.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter had 13 customers. After some left he got 4 new customers. If he still had 9 customers. How many customers left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x: the number of customers left\n    # y: the number of customers left after some left\n    # z: the number of customers left after some left and 4 new customers came\n    # We can write the equations:\n    # x + y = 13\n    # y + z = 9\n    # We can solve the equations to get the answer:\n    x = 13 - 9\n    return x\nans = solver()", "answer": 8.0}
{"question": "How many hours does he spend on learning chinese?", "passage": "Every day Ryan spends 3 hours on learning english and some more hours on learning chinese. If he spends a total of 4 hours on learning english and chinese everyday.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Every day Ryan spends 3 hours on learning english and some more hours on learning chinese. If he spends a total of 4 hours on learning english and chinese everyday. How many hours does he spend on learning chinese?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = hours on learning english\n    # y = hours on learning chinese\n    # x + y = 4\n    # 3x + y = 4\n    # x = 3\n    # y = 1\n    return 1\nans = solver()", "answer": 1.0}
{"question": "How many pages are in the second chapter?", "passage": "A book has 2 chapters across 81 pages. The second chapter is 68 pages long.", "executed": 13.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A book has 2 chapters across 81 pages. The second chapter is 68 pages long. How many pages are in the second chapter?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    chapter_1 = 2\n    chapter_2 = 68\n    total_pages = 81\n    # Now, we can calculate the number of pages in the first chapter:\n    chapter_1_pages = total_pages - chapter_2\n    return chapter_1_pages\nans = solver()", "answer": 13.0}
{"question": "How many white t - shirts does each package have?", "passage": "White t - shirts can be purchased in packages. If mom buys 28 packages which contain 56 white t - shirts in total.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: White t - shirts can be purchased in packages. If mom buys 28 packages which contain 56 white t - shirts in total. How many white t - shirts does each package have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # packages = 28\n    # total_shirts = 56\n    # shirts_per_package = ?\n    packages = 28\n    total_shirts = 56\n    shirts_per_package = total_shirts / packages\n    return shirts_per_package\nans = solver()", "answer": 2.0}
{"question": "How many more cakes than pastries did baker make?", "passage": "Baker made 52 pastries and 84 cakes. If he sold 102 cakes and 94 pastries.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 52 pastries and 84 cakes. If he sold 102 cakes and 94 pastries. How many more cakes than pastries did baker make?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   x = number of cakes made\n    #   y = number of pastries made\n    #   z = number of cakes sold\n    #   w = number of pastries sold\n    #   a = number of cakes made - number of pastries made\n    #   b = number of cakes sold - number of pastries sold\n    #   c = number of cakes made - number of cakes sold\n    #   d = number of pastries made - number of pastries sold\n    #   e = number of cakes made - number of cakes sold - number of pastries made + number of pastries sold\n    #   f = number of cakes made - number of cakes sold - number of pastries made + number of pastries sold + number of cakes made - number of pastries made\n    #   g = number of cakes made - number of cakes sold - number of pastries made + number of pastries sold + number of cakes made - number of pastries made + number of cakes made - number of cakes sold\n    #   h = number of cakes made - number of cakes sold - number of pastries made + number of pastries sold + number of cakes made - number of pastries made + number of cakes made - number of cakes sold + number of pastries made - number of pastries sold\n    #   i = number of cakes made - number of cakes sold - number of pastries made + number of pastries sold + number of cakes made - number of pastries made + number of cakes made - number of cakes sold + number of pastries made - number of pastries sold +\nans = solver()", "answer": 32.0}
{"question": "How much does she weigh now?", "passage": "Jessie weighed 71 kilograms. After she started to go jogging everyday she lost 20 kilograms.", "executed": 51.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jessie weighed 71 kilograms. After she started to go jogging everyday she lost 20 kilograms. How much does she weigh now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    weight_before = 71\n    weight_after = weight_before - 20\n    return weight_after\nans = solver()", "answer": 51.0}
{"question": "How many kids stay home?", "passage": "Lawrence county has 898051 kids. During summer break 629424 kids go to camp and the rest stay home.", "executed": 268627.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Lawrence county has 898051 kids. During summer break 629424 kids go to camp and the rest stay home. How many kids stay home?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    kids_in_lawrence_county = 898051\n    kids_go_to_camp = 629424\n    kids_stay_home = kids_in_lawrence_county - kids_go_to_camp\n    return kids_stay_home\nans = solver()", "answer": 268627.0}
{"question": "How many files did he delete?", "passage": "Dave had 17 apps and 21 files on his phone. After deleting some apps and files he had 3 apps and 7 files left.", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dave had 17 apps and 21 files on his phone. After deleting some apps and files he had 3 apps and 7 files left. How many files did he delete?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    apps_before = 17\n    files_before = 21\n    apps_after = 3\n    files_after = 7\n    # Now we can calculate the number of apps and files deleted:\n    apps_deleted = apps_before - apps_after\n    files_deleted = files_before - files_after\n    # Now we can return the answer:\n    return files_deleted\nans = solver()", "answer": 14.0}
{"question": "How many bags of cookies do you have?", "passage": "If you had 33 cookies and each bag has 11 cookies.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: If you had 33 cookies and each bag has 11 cookies. How many bags of cookies do you have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookies = 33\n    bag = 11\n    bags = cookies / bag\n    return bags\nans = solver()", "answer": 3.0}
{"question": "How many oranges will they have after 87 days of harvest?", "passage": "He then went to see the oranges being harvested. He found out that they harvest 66 sacks per day and that each sack containes 25 oranges.", "executed": 143550.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He then went to see the oranges being harvested. He found out that they harvest 66 sacks per day and that each sack containes 25 oranges. How many oranges will they have after 87 days of harvest?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sacks_per_day = 66\n    oranges_per_sack = 25\n    days = 87\n    # Now we can calculate the total number of sacks:\n    total_sacks = sacks_per_day * days\n    # And the total number of oranges:\n    total_oranges = total_sacks * oranges_per_sack\n    return total_oranges\nans = solver()", "answer": 143550.0}
{"question": "How many cards does Nell have left?", "passage": "Nell collects baseball cards. She had 242 cards. She gave 136 of her cards to Jeff.", "executed": 106.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Nell collects baseball cards. She had 242 cards. She gave 136 of her cards to Jeff. How many cards does Nell have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Nell's cards: n\n    # Jeff's cards: j\n    # Nell's cards after giving: n_after\n    n = 242\n    j = 136\n    n_after = n - j\n    return n_after\nans = solver()", "answer": 106.0}
{"question": "How many chocolate chip cookies did Helen bake?", "passage": "Helen the hippo and her friends are preparing for thanksgiving at Helen's house. Helen baked 90 chocolate chip cookies yesterday and 51 raisin cookies and 484 chocolate chip cookies this morning.", "executed": 574.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Helen the hippo and her friends are preparing for thanksgiving at Helen's house. Helen baked 90 chocolate chip cookies yesterday and 51 raisin cookies and 484 chocolate chip cookies this morning. How many chocolate chip cookies did Helen bake?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Helen_baked_yesterday = 90\n    # Helen_baked_this_morning = 484\n    # Helen_baked_total = ?\n    Helen_baked_yesterday = 90\n    Helen_baked_this_morning = 484\n    Helen_baked_total = Helen_baked_yesterday + Helen_baked_this_morning\n    return Helen_baked_total\nans = solver()", "answer": 574.0}
{"question": "How many roses are left in the garden?", "passage": "There were 13 roses in the vase. Jessica cut some more roses from her flower garden which had a total of 12 roses. There are now 21 roses in the vase.", "executed": 13.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 13 roses in the vase. Jessica cut some more roses from her flower garden which had a total of 12 roses. There are now 21 roses in the vase. How many roses are left in the garden?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of roses in the garden\n    # y = number of roses in the vase\n    # z = number of roses cut from the garden\n    # We can also define the equations:\n    # y = x + z\n    # y = 13 + z\n    # y = 21\n    # We can solve for z:\n    z = 21 - 13\n    # We can solve for x:\n    x = 21 - z\n    return x\nans = solver()", "answer": 4.0}
{"question": "How many action figures did he have initially on the shelf?", "passage": "Jerry had some action figures on a shelf in his room. Later he added 2 more action figures to the shelf and removed 7 of the old ones. If there are 10 action figures on his shelf now.", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jerry had some action figures on a shelf in his room. Later he added 2 more action figures to the shelf and removed 7 of the old ones. If there are 10 action figures on his shelf now. How many action figures did he have initially on the shelf?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x: the number of action figures initially on the shelf\n    # y: the number of action figures on the shelf now\n    x = 10\n    y = 10\n    return x\nans = solver()", "answer": 15.0}
{"question": "How many pages are in the first chapter?", "passage": "A book has 2 chapters across 23 pages. The first chapter is 10 pages long.", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A book has 2 chapters across 23 pages. The first chapter is 10 pages long. How many pages are in the first chapter?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    chapter_1 = 10\n    chapter_2 = 23 - chapter_1\n    return chapter_1\nans = solver()", "answer": 13.0}
{"question": "How many more books did he sell than he bought?", "passage": "Paul had 21 books. After selling some in a garage sale he bought 42 new ones. If he has 15 books now.", "executed": 48.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul had 21 books. After selling some in a garage sale he bought 42 new ones. If he has 15 books now. How many more books did he sell than he bought?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   a = number of books Paul had before the garage sale\n    #   b = number of books Paul sold in the garage sale\n    #   c = number of books Paul bought after the garage sale\n    #   d = number of books Paul has now\n    a = 21\n    d = 15\n    c = 42\n    b = a - d + c\n    return b\nans = solver()", "answer": 6.0}
{"question": "How many balloons did Jake bring to the park?", "passage": "Allan and Jake brought 3 balloons to the park. If Allan brought 2 balloons.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Allan and Jake brought 3 balloons to the park. If Allan brought 2 balloons. How many balloons did Jake bring to the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    allan_balloons = 2\n    jake_balloons = ?\n    total_balloons = 3\n    # Now we can use the variables to derive the answer:\n    jake_balloons = total_balloons - allan_balloons\n    return jake_balloons\nans = solver()", "answer": 1.0}
{"question": "How many grades are there in total?", "passage": "There are 270 students in a school. If the school has 5 students in each grades and each grade has the same number of students.", "executed": 54.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 270 students in a school. If the school has 5 students in each grades and each grade has the same number of students. How many grades are there in total?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. The number of students in each grade: num_students_per_grade\n    num_students_per_grade = 5\n    # 2. The total number of students in the school: num_students_total\n    num_students_total = 270\n    # 3. The number of grades in the school: num_grades_total\n    num_grades_total = num_students_total / num_students_per_grade\n    return num_grades_total\nans = solver()", "answer": 54.0}
{"question": "How many bottle caps did he find at the park?", "passage": "After finding some bottle caps at the park danny has 32 bottle caps in his collection. If he had 25 bottle caps in his collection earlier.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: After finding some bottle caps at the park danny has 32 bottle caps in his collection. If he had 25 bottle caps in his collection earlier. How many bottle caps did he find at the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. Danny's bottle caps in his collection before he found some bottle caps at the park\n    bottle_caps_before = 25\n    # 2. Danny's bottle caps in his collection after he found some bottle caps at the park\n    bottle_caps_after = 32\n    # 3. Danny's bottle caps he found at the park\n    bottle_caps_found = bottle_caps_after - bottle_caps_before\n    return bottle_caps_found\nans = solver()", "answer": 7.0}
{"question": "How many houses are there in a block?", "passage": "A mailman has to give 32 pieces of junk mail to each of the 55 blocks. If he gives 8 mails to each house in a block.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A mailman has to give 32 pieces of junk mail to each of the 55 blocks. If he gives 8 mails to each house in a block. How many houses are there in a block?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # mails_per_block = 32\n    # mails_per_house = 8\n    # blocks = 55\n    # houses_per_block = ?\n    mails_per_block = 32\n    mails_per_house = 8\n    blocks = 55\n    houses_per_block = mails_per_block / mails_per_house\n    return houses_per_block\nans = solver()", "answer": 4.0}
{"question": "How many more bird families flew away to africa than those that flew away to asia?", "passage": "Winter is almost here and most animals are migrating to warmer countries. There are 41 bird families living near the mountain. If 35 bird families flew away to asia and 62 bird families flew away to africa.", "executed": 27.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Winter is almost here and most animals are migrating to warmer countries. There are 41 bird families living near the mountain. If 35 bird families flew away to asia and 62 bird families flew away to africa. How many more bird families flew away to africa than those that flew away to asia?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bird_families_near_mountain = 41\n    bird_families_to_asia = 35\n    bird_families_to_africa = 62\n    # Now, we can calculate the number of bird families that flew away to africa than those that flew away to asia\n    bird_families_to_africa_than_asia = bird_families_to_africa - bird_families_to_asia\n    return bird_families_to_africa_than_asia\nans = solver()", "answer": 27.0}
{"question": "How many crayons had been lost or given away?", "passage": "Paul got a box of 65 crayons for his birthday. During the school year he gave 213 crayons to his friends while he lost 16 crayons.", "executed": 262.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul got a box of 65 crayons for his birthday. During the school year he gave 213 crayons to his friends while he lost 16 crayons. How many crayons had been lost or given away?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   crayons_received = 65\n    #   crayons_given = 213\n    #   crayons_lost = 16\n    crayons_received = 65\n    crayons_given = 213\n    crayons_lost = 16\n    # Now, we can calculate the total number of crayons Paul had:\n    crayons_total = crayons_received + crayons_given - crayons_lost\n    return crayons_total\nans = solver()", "answer": 229.0}
{"question": "How many pages of reading homework did she have to complete?", "passage": "Rachel had to complete 5 pages of math homework and yet more pages of reading homework. If she had to complete a total of 7 pages of homework.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel had to complete 5 pages of math homework and yet more pages of reading homework. If she had to complete a total of 7 pages of homework. How many pages of reading homework did she have to complete?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    math_pages = 5\n    total_pages = 7\n    reading_pages = total_pages - math_pages\n    return reading_pages\nans = solver()", "answer": 2.0}
{"question": "How many did each of them have?", "passage": "Brenda's mother made cookies for 5. She prepared 22 cookies but had to throw away 17 cookies. If each of them had the same number of cookies.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Brenda's mother made cookies for 5. She prepared 22 cookies but had to throw away 17 cookies. If each of them had the same number of cookies. How many did each of them have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. Brenda's mother made cookies for 5 people\n    people = 5\n    # 2. She prepared 22 cookies\n    prepared = 22\n    # 3. She had to throw away 17 cookies\n    throw_away = 17\n    # 4. Each of them had the same number of cookies\n    each_of_them = prepared - throw_away\n    # 5. How many did each of them have?\n    each_of_them = each_of_them / people\n    return each_of_them\nans = solver()", "answer": 1.0}
{"question": "How many more roses than orchids are there in the vase now?", "passage": "There were 6 roses and 20 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now 21 orchids and 22 roses in the vase.", "executed": 16.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 6 roses and 20 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now 21 orchids and 22 roses in the vase. How many more roses than orchids are there in the vase now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of roses cut from the flower garden\n    # y = number of orchids cut from the flower garden\n    # Then, we can write the equations:\n    # x + 6 = 22\n    # y + 20 = 21\n    # Solving the equations, we get:\n    # x = 16\n    # y = 1\n    # So, the answer is 16.\n    return 16\nans = solver()", "answer": 1.0}
{"question": "How many aquariums did he have?", "passage": "He had a total of 40 saltwater animals in different aquariums. Each aquarium has 2 animals in it.", "executed": 20.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He had a total of 40 saltwater animals in different aquariums. Each aquarium has 2 animals in it. How many aquariums did he have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    total_animals = 40\n    animals_per_aquarium = 2\n    total_aquariums = total_animals / animals_per_aquarium\n    return total_aquariums\nans = solver()", "answer": 20.0}
{"question": "How many hours does he spend on learning english and chinese in all?", "passage": "Every day Ryan spends 6 hours on learning english and 7 hours on learning chinese. If he learns for 5 days.", "executed": 65.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Every day Ryan spends 6 hours on learning english and 7 hours on learning chinese. If he learns for 5 days. How many hours does he spend on learning english and chinese in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. The number of hours Ryan spends on learning english every day\n    hours_english_per_day = 6\n    # 2. The number of hours Ryan spends on learning chinese every day\n    hours_chinese_per_day = 7\n    # 3. The number of days Ryan learns\n    days = 5\n    # 4. The number of hours Ryan spends on learning english in all\n    hours_english_in_all = hours_english_per_day * days\n    # 5. The number of hours Ryan spends on learning chinese in all\n    hours_chinese_in_all = hours_chinese_per_day * days\n    # 6. The number of hours Ryan spends on learning english and chinese in all\n    hours_in_all = hours_english_in_all + hours_chinese_in_all\n    return hours_in_all\nans = solver()", "answer": 65.0}
{"question": "How many apples did the tree have to begin with?", "passage": "Rachel picked 7 apples from her tree. Thereafter 2 new apples grew on the tree. Now the tree has 6 apples still on it.", "executed": 15.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel picked 7 apples from her tree. Thereafter 2 new apples grew on the tree. Now the tree has 6 apples still on it. How many apples did the tree have to begin with?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = the number of apples on the tree to begin with\n    # y = the number of apples picked from the tree\n    # z = the number of apples on the tree after the picking\n    # w = the number of apples grew on the tree after the picking\n    # Then we can define the equations:\n    # x = y + z + w\n    # y = 7\n    # z = 6\n    # w = 2\n    # Solve the equations, we can get the answer:\n    x = 7 + 6 + 2\n    return x\nans = solver()", "answer": 11.0}
{"question": "How many people are there on the bus now?", "passage": "There were 8 people on the bus. At the next stop 12 more people got on the bus and 3 people got off.", "executed": 17.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 8 people on the bus. At the next stop 12 more people got on the bus and 3 people got off. How many people are there on the bus now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    people_on_bus = 8\n    people_got_on = 12\n    people_got_off = 3\n    people_on_bus_now = people_on_bus + people_got_on - people_got_off\n    return people_on_bus_now\nans = solver()", "answer": 17.0}
{"question": "How many more apps than files does he have left on the phone?", "passage": "Dave had 15 apps and 24 files on his phone. After deleting some apps and files he had 21 apps and 4 files left.", "executed": 26.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dave had 15 apps and 24 files on his phone. After deleting some apps and files he had 21 apps and 4 files left. How many more apps than files does he have left on the phone?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    apps_before = 15\n    files_before = 24\n    apps_after = 21\n    files_after = 4\n    # Now we can calculate the difference between the apps and files before and after\n    apps_diff = apps_after - apps_before\n    files_diff = files_after - files_before\n    # Now we can calculate the difference between the apps and files difference\n    diff_diff = apps_diff - files_diff\n    return diff_diff\nans = solver()", "answer": 17.0}
{"question": "How many cakes does baker still have?", "passage": "Baker made 173 cakes. He bought 103 new cakes and sold 86 cakes.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 173 cakes. He bought 103 new cakes and sold 86 cakes. How many cakes does baker still have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   cakes_baker_had = ?\n    #   cakes_baker_bought = 103\n    #   cakes_baker_sold = 86\n    #   cakes_baker_has = ?\n    #   cakes_baker_made = 173\n    #   cakes_baker_bought_and_sold = cakes_baker_bought + cakes_baker_sold\n    #   cakes_baker_made_and_has = cakes_baker_made + cakes_baker_has\n    #   cakes_baker_had_and_has = cakes_baker_had + cakes_baker_has\n    #   cakes_baker_had_and_made = cakes_baker_had + cakes_baker_made\n    #   cakes_baker_had_and_bought = cakes_baker_had + cakes_baker_bought\n    #   cakes_baker_had_and_sold = cakes_baker_had + cakes_baker_sold\n    #   cakes_baker_has_and_made = cakes_baker_has + cakes_baker_made\n    #   cakes_baker_has_and_bought = cakes_baker_has + cakes_baker_bought\n    #   cakes_baker_has_and_sold = cakes_baker_has + cakes_baker_sold\n    #   cakes_baker_made_and_bought = cakes_baker_\nans = solver()", "answer": 190.0}
{"question": "How many more cups of sugar than cups of salt does she need to add now?", "passage": "Mary is baking a cake. The recipe calls for 11 cups of sugar 6 cups of flour and 9 cups of salt. She already put in 12 cups of flour.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 11 cups of sugar 6 cups of flour and 9 cups of salt. She already put in 12 cups of flour. How many more cups of sugar than cups of salt does she need to add now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sugar = 11\n    flour = 6\n    salt = 9\n    flour_added = 12\n    # Now, we can calculate the amount of sugar and salt needed:\n    sugar_needed = sugar - flour_added\n    salt_needed = salt - flour_added\n    # Finally, we can calculate the difference between the amount of sugar and salt needed:\n    sugar_salt_difference = sugar_needed - salt_needed\n    return sugar_salt_difference\nans = solver()", "answer": 2.0}
{"question": "How many hours does he spend on learning english and chinese in all?", "passage": "Ryan learns english and chinese for 7 days. Every day he spends 4 hours on learning english and 5 hours on learning chinese.", "executed": 63.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Ryan learns english and chinese for 7 days. Every day he spends 4 hours on learning english and 5 hours on learning chinese. How many hours does he spend on learning english and chinese in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    days = 7\n    hours_english = 4\n    hours_chinese = 5\n    # Now we can calculate the total hours:\n    total_hours = days * (hours_english + hours_chinese)\n    return total_hours\nans = solver()", "answer": 63.0}
{"question": "How much money is left?", "passage": "Dan has $ 7. He bought a candy bar for $ 2 and a chocolate for $ 3.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dan has $ 7. He bought a candy bar for $ 2 and a chocolate for $ 3. How much money is left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    money = 7\n    candy_bar = 2\n    chocolate = 3\n    # Now, we can calculate the answer:\n    money_left = money - candy_bar - chocolate\n    return money_left\nans = solver()", "answer": 2.0}
{"question": "About how many kids in Lawrence county went to camp?", "passage": "During summer break 61619 kids from Lawrence county stayed home and the rest went to camp. The total number of kids in Lawrence county is 91676.", "executed": 30057.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: During summer break 61619 kids from Lawrence county stayed home and the rest went to camp. The total number of kids in Lawrence county is 91676. About how many kids in Lawrence county went to camp?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    kids_at_home = 61619\n    kids_at_camp = None\n    total_kids = 91676\n    # Now we can calculate the number of kids at camp:\n    kids_at_camp = total_kids - kids_at_home\n    return kids_at_camp\nans = solver()", "answer": 30057.0}
{"question": "How much did she weigh before starting to jog?", "passage": "After Jessie started to go jogging everyday she lost 126 kilograms. She currently weighs 66 kilograms.", "executed": 192.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: After Jessie started to go jogging everyday she lost 126 kilograms. She currently weighs 66 kilograms. How much did she weigh before starting to jog?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Jessie's weight before starting to jog = x\n    # Jessie's weight after starting to jog = y\n    # Jessie's weight loss = z\n    # Jessie's current weight = 66\n    # Jessie's weight loss = 126\n    x = 66 + 126\n    return x\nans = solver()", "answer": 192.0}
{"question": "How many more marbles did he find than those he lost?", "passage": "Josh had 7 marbles in his collection. He lost 8 marbles and found 10 new ones.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Josh had 7 marbles in his collection. He lost 8 marbles and found 10 new ones. How many more marbles did he find than those he lost?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marbles_in_collection = 7\n    marbles_lost = 8\n    marbles_found = 10\n    marbles_found_more_than_lost = marbles_found - marbles_lost\n    return marbles_found_more_than_lost\nans = solver()", "answer": 2.0}
{"question": "How many more Ace cards than baseball cards does Nell have?", "passage": "Nell collects cards. She had 239 baseball cards and 38 Ace cards. She gave some of her cards to Jeff and now has 376 Ace cards and 111 baseball cards left.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Nell collects cards. She had 239 baseball cards and 38 Ace cards. She gave some of her cards to Jeff and now has 376 Ace cards and 111 baseball cards left. How many more Ace cards than baseball cards does Nell have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Nell's original baseball cards: x\n    # Nell's original Ace cards: y\n    # Nell's remaining baseball cards: a\n    # Nell's remaining Ace cards: b\n    # Jeff's baseball cards: c\n    # Jeff's Ace cards: d\n    # Then we can get the following equations:\n    # x + y = 239 + 38 = 277\n    # a + b = 111 + 376 = 487\n    # x - a = c\n    # y - b = d\n    # x - a = c\n    # y - b = d\n    # x - a = c\n    # y - b = d\n    # x - a = c\n    # y - b = d\n    # x - a = c\n    # y - b = d\n    # x - a = c\n    # y - b = d\n    # x - a = c\n    # y - b = d\n    # x - a = c\n    # y - b = d\n    # x - a = c\n    # y - b = d\n    # x - a = c\n    # y - b = d\n    # x - a = c\n    # y - b = d\n    # x - a = c\n    # y - b = d\n    # x - a = c\n    # y - b = d\n    # x - a = c\n    # y - b = d\n    # x - a = c\n    # y - b = d\nans = solver()", "answer": 265.0}
{"question": "How many more girls than boys does the school have?", "passage": "In a school there are 362 boys and 257 girls. 403 more girls joined the school.", "executed": 298.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In a school there are 362 boys and 257 girls. 403 more girls joined the school. How many more girls than boys does the school have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    boys = 362\n    girls = 257\n    girls_joined = 403\n    # Now, we can calculate the total number of girls in the school:\n    girls_total = girls + girls_joined\n    # Now, we can calculate the total number of students in the school:\n    total = boys + girls_total\n    # Now, we can calculate the total number of boys in the school:\n    boys_total = total - girls_total\n    # Now, we can calculate the difference between the number of girls and boys in the school:\n    difference = girls_total - boys_total\n    return difference\nans = solver()", "answer": 298.0}
{"question": "How many crayons did he get for his birthday?", "passage": "Paul got a box of some crayons for his birthday. By the end of the school year he had either lost or given away 551 of them and only had 177 left.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul got a box of some crayons for his birthday. By the end of the school year he had either lost or given away 551 of them and only had 177 left. How many crayons did he get for his birthday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # crayons_got = ?\n    # crayons_left = 177\n    # crayons_lost = 551\n    crayons_got = crayons_left + crayons_lost\n    return crayons_got\nans = solver()", "answer": 728.0}
{"question": "How many bookshelves does he have?", "passage": "Bryan took a look at his books as well. If he has a total of 42 books and each bookshelf contains 2 books.", "executed": 21.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bryan took a look at his books as well. If he has a total of 42 books and each bookshelf contains 2 books. How many bookshelves does he have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    total_books = 42\n    books_per_shelf = 2\n    # Now, we can calculate the number of bookshelves by dividing the total number of books by the number of books per shelf\n    num_bookshelves = total_books / books_per_shelf\n    return num_bookshelves\nans = solver()", "answer": 21.0}
{"question": "How many kids did she play with on tuesday?", "passage": "Julia played tag with 16 kids on monday. If she played tag with 12 more kids on monday than on tuesday.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Julia played tag with 16 kids on monday. If she played tag with 12 more kids on monday than on tuesday. How many kids did she play with on tuesday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 16\n    tuesday = monday - 12\n    return tuesday\nans = solver()", "answer": 4.0}
{"question": "How many more sacks of ripe oranges than unripe oranges are harvested per day?", "passage": "He then went to see the oranges being harvested. He found out that they harvest 41 sacks of unripe oranges and 86 sacks of ripe oranges per day.", "executed": 45.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He then went to see the oranges being harvested. He found out that they harvest 41 sacks of unripe oranges and 86 sacks of ripe oranges per day. How many more sacks of ripe oranges than unripe oranges are harvested per day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    unripe_oranges = 41\n    ripe_oranges = 86\n    # Now, we can calculate the difference between the two variables:\n    difference = ripe_oranges - unripe_oranges\n    return difference\nans = solver()", "answer": 45.0}
{"question": "How many balloons did Jake bring to the park?", "passage": "Allan brought 5 balloons. If Allan and Jake brought total of 6 balloons to the park.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Allan brought 5 balloons. If Allan and Jake brought total of 6 balloons to the park. How many balloons did Jake bring to the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    allan_balloons = 5\n    total_balloons = 6\n    jake_balloons = total_balloons - allan_balloons\n    return jake_balloons\nans = solver()", "answer": 1.0}
{"question": "How much money did they make?", "passage": "The ring toss game at the carnival made 144 dollars per day. They were at the carnival for 22 days.", "executed": 3168.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The ring toss game at the carnival made 144 dollars per day. They were at the carnival for 22 days. How much money did they make?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    days = 22\n    money_per_day = 144\n    # Now, we can calculate the total money by multiplying the days and money_per_day\n    total_money = days * money_per_day\n    return total_money\nans = solver()", "answer": 3168.0}
{"question": "How many peaches are in the baskets altogether?", "passage": "Each basket of peaches has 19 red peaches and 4 green peaches. If there are 15 such baskets.", "executed": 345.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Each basket of peaches has 19 red peaches and 4 green peaches. If there are 15 such baskets. How many peaches are in the baskets altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    red_peaches = 19\n    green_peaches = 4\n    baskets = 15\n    total_peaches = red_peaches * baskets + green_peaches * baskets\n    return total_peaches\nans = solver()", "answer": 345.0}
{"question": "How many more sweet cookies than salty cookies did he eat?", "passage": "Paco had 37 sweet cookies and 11 salty cookies. He ate 5 sweet cookies and 2 salty cookies.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paco had 37 sweet cookies and 11 salty cookies. He ate 5 sweet cookies and 2 salty cookies. How many more sweet cookies than salty cookies did he eat?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sweet_cookies = 37\n    salty_cookies = 11\n    sweet_cookies_eaten = 5\n    salty_cookies_eaten = 2\n    sweet_cookies_left = sweet_cookies - sweet_cookies_eaten\n    salty_cookies_left = salty_cookies - salty_cookies_eaten\n    sweet_cookies_eaten_more = sweet_cookies_eaten - salty_cookies_eaten\n    return sweet_cookies_eaten_more\nans = solver()", "answer": 3.0}
{"question": "How many peaches does Steven have?", "passage": "Jake has 11 fewer peaches than Steven. If Jake has 17 peaches.", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jake has 11 fewer peaches than Steven. If Jake has 17 peaches. How many peaches does Steven have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    jake = 17\n    steven = jake - 11\n    return steven\nans = solver()", "answer": 28.0}
{"question": "How many more crayons did he give to his friends than those he lost?", "passage": "Paul got a box of 267 crayons for his birthday. During the school year he lost 231 crayons while he gave away 308 crayons to his friends.", "executed": 77.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul got a box of 267 crayons for his birthday. During the school year he lost 231 crayons while he gave away 308 crayons to his friends. How many more crayons did he give to his friends than those he lost?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # crayons_got = 267\n    # crayons_lost = 231\n    # crayons_given = 308\n    crayons_got = 267\n    crayons_lost = 231\n    crayons_given = 308\n    # Now, we can calculate the difference between crayons_given and crayons_lost\n    crayons_diff = crayons_given - crayons_lost\n    return crayons_diff\nans = solver()", "answer": 77.0}
{"question": "How far is the end of the cave?", "passage": "If the cave is 919 feet deep and they need to travel 1307 feet.", "executed": 388.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: If the cave is 919 feet deep and they need to travel 1307 feet. How far is the end of the cave?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cave_depth = 919\n    distance_to_travel = 1307\n    # Now, we need to find the distance from the end of the cave to the surface.\n    distance_to_surface = distance_to_travel - cave_depth\n    return distance_to_surface\nans = solver()", "answer": 2226.0}
{"question": "How big is each group of bananas?", "passage": "There are 203 bananas and 63 oranges in Philip's collection. If the bananas are organized into 7 groups and oranges are organized into 95 groups.", "executed": 29.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 203 bananas and 63 oranges in Philip's collection. If the bananas are organized into 7 groups and oranges are organized into 95 groups. How big is each group of bananas?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bananas = 203\n    oranges = 63\n    banana_groups = 7\n    orange_groups = 95\n    banana_group_size = bananas / banana_groups\n    orange_group_size = oranges / orange_groups\n    return banana_group_size\nans = solver()", "answer": 29.0}
{"question": "How many more eggs does Rebecca have than marbles?", "passage": "Rebecca wants to split a collection of eggs into groups of 5. Rebecca has 20 eggs and 6 marbles.", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rebecca wants to split a collection of eggs into groups of 5. Rebecca has 20 eggs and 6 marbles. How many more eggs does Rebecca have than marbles?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    eggs = 20\n    marbles = 6\n    # Now, we can calculate the difference between the eggs and marbles:\n    difference = eggs - marbles\n    return difference\nans = solver()", "answer": 14.0}
{"question": "How many goldfish remained?", "passage": "Paige raised 15 goldfish in the pond but stray cats loved eating them. 5 were eaten.", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paige raised 15 goldfish in the pond but stray cats loved eating them. 5 were eaten. How many goldfish remained?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # goldfish_raised = 15\n    # goldfish_eaten = 5\n    goldfish_raised = 15\n    goldfish_eaten = 5\n    # Now, we can calculate the number of goldfish remained:\n    goldfish_remained = goldfish_raised - goldfish_eaten\n    return goldfish_remained\nans = solver()", "answer": 10.0}
{"question": "How many push-ups did David do?", "passage": "Zachary did 59 push-ups and 44 crunches in gym class today. David did 19 more push-ups but 27 less crunches than zachary.", "executed": 78.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Zachary did 59 push-ups and 44 crunches in gym class today. David did 19 more push-ups but 27 less crunches than zachary. How many push-ups did David do?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    zachary_push_ups = 59\n    zachary_crunches = 44\n    david_push_ups = zachary_push_ups + 19\n    david_crunches = zachary_crunches - 27\n    return david_push_ups\nans = solver()", "answer": 78.0}
{"question": "How many apps are left on his phone?", "passage": "Dave had 19 apps on his phone. He deleted 5 apps.", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dave had 19 apps on his phone. He deleted 5 apps. How many apps are left on his phone?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    apps_on_phone = 19\n    apps_deleted = 5\n    apps_left = apps_on_phone - apps_deleted\n    return apps_left\nans = solver()", "answer": 14.0}
{"question": "How many more cups of flour than cups of sugar does she need to add now?", "passage": "Mary is baking a cake. The recipe calls for 9 cups of sugar 14 cups of flour and 40 cups of salt. She already put in 4 cups of flour.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 9 cups of sugar 14 cups of flour and 40 cups of salt. She already put in 4 cups of flour. How many more cups of flour than cups of sugar does she need to add now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sugar = 9\n    flour = 14\n    salt = 40\n    flour_added = 4\n    # Now, we need to calculate the number of cups of flour that Mary needs to add now.\n    flour_to_add = flour - flour_added\n    # Now, we need to calculate the number of cups of sugar that Mary needs to add now.\n    sugar_to_add = sugar\n    # Now, we need to calculate the number of cups of salt that Mary needs to add now.\n    salt_to_add = salt\n    # Now, we need to calculate the difference between the number of cups of flour and the number of cups of sugar that Mary needs to add now.\n    difference = flour_to_add - sugar_to_add\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many sacks of ripe oranges will they have after 25 days of harvest?", "passage": "He then went to see the oranges being harvested. He found out that they harvest 82 sacks of ripe oranges and 61 sacks of unripe oranges per day.", "executed": 2050.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He then went to see the oranges being harvested. He found out that they harvest 82 sacks of ripe oranges and 61 sacks of unripe oranges per day. How many sacks of ripe oranges will they have after 25 days of harvest?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    ripe_oranges = 82\n    unripe_oranges = 61\n    days = 25\n    # Now, we can calculate the total number of ripe oranges after 25 days of harvest:\n    total_ripe_oranges = ripe_oranges * days\n    return total_ripe_oranges\nans = solver()", "answer": 2050.0}
{"question": "How many more emails did Jack receive in the morning than in the afternoon?", "passage": "Jack received 10 emails and 12 letters in the morning. He then received 3 emails and 44 letters in the afternoon.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jack received 10 emails and 12 letters in the morning. He then received 3 emails and 44 letters in the afternoon. How many more emails did Jack receive in the morning than in the afternoon?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning_emails = 10\n    morning_letters = 12\n    afternoon_emails = 3\n    afternoon_letters = 44\n    # Now, we can calculate the difference between the number of emails received in the morning and in the afternoon:\n    difference = morning_emails - afternoon_emails\n    return difference\nans = solver()", "answer": 7.0}
{"question": "How many old games do they have 3", "passage": "Katie had 62 new games and 80 old games. Her friends had 73 new games and 41 old games.", "executed": 121.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Katie had 62 new games and 80 old games. Her friends had 73 new games and 41 old games. How many old games do they have 3\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    new_games_katie = 62\n    old_games_katie = 80\n    new_games_friends = 73\n    old_games_friends = 41\n    total_old_games = old_games_katie + old_games_friends\n    return total_old_games\nans = solver()", "answer": 121.0}
{"question": "How many apples does He have?", "passage": "Together Adam and Jackie have 12 apples. He has 9 apples more than Adam and Jackie together do. Adam has 8 more apples than Jackie.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Together Adam and Jackie have 12 apples. He has 9 apples more than Adam and Jackie together do. Adam has 8 more apples than Jackie. How many apples does He have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # He = x\n    # Adam = y\n    # Jackie = z\n    # x = y + z + 9\n    # y = z + 8\n    # z = ?\n    # We can solve this question by using the following formula:\n    # x = y + z + 9\n    # y = z + 8\n    # z = ?\n    # z = (x - 9 - y) / 2\n    # z = (x - 9 - (z + 8)) / 2\n    # z = (x - 9 - z - 8) / 2\n    # z = (x - 17 - z) / 2\n    # z = (x - 17) / 2 - z\n    # 2z = (x - 17) / 2\n    # 2z = x / 2 - 17 / 2\n    # 2z = x / 2 - 17 / 2\n    # 2z = x / 2 - 17 / 2\n    # 2z = x / 2 - 17 / 2\n    # 2z = x / 2 - 17 / 2\n    # 2z = x / 2 - 17 / 2\n    # 2z = x / 2 - 17 / 2\n    # 2z = x / 2 - 17 / 2\n    # 2z = x / 2 - 17 / 2\n    # 2z = x / 2 - 17 / 2\n    # 2z = x / 2 - 17 / 2\n    # 2z = x / 2 - 17 / 2\n    # 2z = x / 2 - 17 / 2\n    #\nans = solver()", "answer": 21.0}
{"question": "How many oranges are harvested if they harvest a total of 35 sacks of oranges?", "passage": "He then went to see the oranges being harvested. He found out that they harvest 67 sacks per day and that each sack containes 12 oranges.", "executed": 420.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He then went to see the oranges being harvested. He found out that they harvest 67 sacks per day and that each sack containes 12 oranges. How many oranges are harvested if they harvest a total of 35 sacks of oranges?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sacks_per_day = 67\n    oranges_per_sack = 12\n    total_sacks = 35\n    # Now, we can calculate the total number of oranges harvested:\n    total_oranges = total_sacks * oranges_per_sack\n    return total_oranges\nans = solver()", "answer": 420.0}
{"question": "How big is each group of bananas?", "passage": "There are 87 oranges and 290 bananas in Philip's collection. If the bananas are organized into 2 groups and oranges are organized into 93 groups.", "executed": 145.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 87 oranges and 290 bananas in Philip's collection. If the bananas are organized into 2 groups and oranges are organized into 93 groups. How big is each group of bananas?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    oranges = 87\n    bananas = 290\n    banana_groups = 2\n    orange_groups = 93\n    # Now, we can calculate the size of each group of bananas:\n    banana_group_size = bananas / banana_groups\n    # We can also calculate the size of each group of oranges:\n    orange_group_size = oranges / orange_groups\n    # Now, we can return the answer:\n    return banana_group_size\nans = solver()", "answer": 145.0}
{"question": "How big is each group of oranges?", "passage": "There are 384 oranges and 192 bananas in Philip's collection. If the bananas are organized into 345 groups and oranges are organized into 16 groups.", "executed": 24.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 384 oranges and 192 bananas in Philip's collection. If the bananas are organized into 345 groups and oranges are organized into 16 groups. How big is each group of oranges?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    oranges = 384\n    bananas = 192\n    orange_groups = 16\n    banana_groups = 345\n    # Now we can calculate the size of each group of oranges:\n    orange_group_size = oranges / orange_groups\n    banana_group_size = bananas / banana_groups\n    return orange_group_size\nans = solver()", "answer": 24.0}
{"question": "How many more crunches than push-ups did Zachary do?", "passage": "David did 27 more push-ups but 7 less crunches than Zachary in gym class today. If Zachary did 5 push-ups and 17 crunches.", "executed": 12.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: David did 27 more push-ups but 7 less crunches than Zachary in gym class today. If Zachary did 5 push-ups and 17 crunches. How many more crunches than push-ups did Zachary do?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    push_ups_zachary = 5\n    crunches_zachary = 17\n    push_ups_david = push_ups_zachary + 27\n    crunches_david = crunches_zachary - 7\n    # Now we can calculate the difference between crunches and push-ups for Zachary\n    crunches_push_ups_difference_zachary = crunches_zachary - push_ups_zachary\n    return crunches_push_ups_difference_zachary\nans = solver()", "answer": 12.0}
{"question": "How many saltwater animals does Tyler have?", "passage": "He also had 74 aquariums for freshwater animals and 22 aquariums for saltwater animals. Each aquarium has 46 animals in it.", "executed": 3404.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He also had 74 aquariums for freshwater animals and 22 aquariums for saltwater animals. Each aquarium has 46 animals in it. How many saltwater animals does Tyler have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    freshwater_aquariums = 74\n    saltwater_aquariums = 22\n    animals_per_aquarium = 46\n    saltwater_animals = freshwater_aquariums * animals_per_aquarium\n    return saltwater_animals\nans = solver()", "answer": 1012.0}
{"question": "How much did she spend at the supermarket?", "passage": "There were 106 dollars in Olivia's wallet. After she visited a supermarket and a showroom there were 26 dollars left. If she spent 49 dollars at the showroom.", "executed": 80.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 106 dollars in Olivia's wallet. After she visited a supermarket and a showroom there were 26 dollars left. If she spent 49 dollars at the showroom. How much did she spend at the supermarket?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Olivia's wallet = 106\n    # Olivia's wallet after visiting a supermarket and a showroom = 26\n    # Olivia's wallet after visiting a supermarket = 26 + 49\n    # Olivia's wallet after visiting a supermarket = Olivia's wallet - Olivia's wallet after visiting a supermarket and a showroom\n    # Olivia's wallet after visiting a supermarket = 106 - 26\n    # Olivia's wallet after visiting a supermarket = 80\n    return 80\nans = solver()", "answer": 31.0}
{"question": "How much farther did the mouse jump than the grasshopper?", "passage": "The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped 24 inches. The frog jumped 33 inches farther than the grasshopper and the mouse jumped 5 inches lesser than the frog.", "executed": 28.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped 24 inches. The frog jumped 33 inches farther than the grasshopper and the mouse jumped 5 inches lesser than the frog. How much farther did the mouse jump than the grasshopper?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    grasshopper = 24\n    frog = grasshopper + 33\n    mouse = frog - 5\n    return mouse - grasshopper\nans = solver()", "answer": 28.0}
{"question": "How many apples did the tree have to begin with?", "passage": "Rachel picked 6 ripe apples from her tree. Now the tree has 2 ripe apples and 4 unripe apples.", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel picked 6 ripe apples from her tree. Now the tree has 2 ripe apples and 4 unripe apples. How many apples did the tree have to begin with?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = the number of apples on the tree to begin with\n    # y = the number of ripe apples on the tree to begin with\n    # z = the number of unripe apples on the tree to begin with\n    # We can also define the following equations:\n    # x = y + z\n    # y = 2\n    # z = 4\n    # We can then solve for x:\n    x = 2 + 4\n    return x\nans = solver()", "answer": 12.0}
{"question": "How many days did he take to finish the book?", "passage": "Frank was reading through his favorite book. The book had 392 pages and he read 14 pages per day.", "executed": 28.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank was reading through his favorite book. The book had 392 pages and he read 14 pages per day. How many days did he take to finish the book?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    pages = 392\n    pages_per_day = 14\n    days = 0\n    # Now, we can calculate the number of days by dividing the total number of pages by the number of pages read per day\n    days = pages / pages_per_day\n    return days\nans = solver()", "answer": 28.0}
{"question": "How many more marbles did Ed have than Doug then?", "passage": "Ed had 24 more marbles than Doug. Doug lost 27 of his marbles at the playground while Ed found 9 more marbles.", "executed": 60.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Ed had 24 more marbles than Doug. Doug lost 27 of his marbles at the playground while Ed found 9 more marbles. How many more marbles did Ed have than Doug then?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    ed_marbles = 0\n    doug_marbles = 0\n    # Ed had 24 more marbles than Doug.\n    ed_marbles = doug_marbles + 24\n    # Doug lost 27 of his marbles at the playground\n    doug_marbles = doug_marbles - 27\n    # Ed found 9 more marbles\n    ed_marbles = ed_marbles + 9\n    # How many more marbles did Ed have than Doug then?\n    return ed_marbles - doug_marbles\nans = solver()", "answer": 60.0}
{"question": "How many rows could she make?", "passage": "Faye was placing her pencils into rows with 5 pencils in each row. If she had 35 pencils and 7 crayons.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Faye was placing her pencils into rows with 5 pencils in each row. If she had 35 pencils and 7 crayons. How many rows could she make?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    pencils = 35\n    crayons = 7\n    pencils_per_row = 5\n    rows = 0\n    # Now, we can calculate the number of rows by dividing the number of pencils by the number of pencils per row\n    rows = pencils / pencils_per_row\n    return rows\nans = solver()", "answer": 7.0}
{"question": "How many children were riding on the bus before the bus stop?", "passage": "Some children were riding on the bus. At the bus stop 2 more children got on the bus. Then there were 41 children altogether on the bus.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Some children were riding on the bus. At the bus stop 2 more children got on the bus. Then there were 41 children altogether on the bus. How many children were riding on the bus before the bus stop?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # children_on_bus_before_bus_stop = ?\n    # children_on_bus_after_bus_stop = ?\n    # children_got_on_bus = ?\n    # children_on_bus_before_bus_stop + children_got_on_bus = children_on_bus_after_bus_stop\n    # children_on_bus_before_bus_stop + children_got_on_bus = 41\n    # children_got_on_bus = 41 - children_on_bus_before_bus_stop\n    children_got_on_bus = 41 - children_on_bus_before_bus_stop\n    return children_on_bus_before_bus_stop\nans = solver()", "answer": 39.0}
{"question": "How many bottle caps does he have now?", "passage": "Danny has 12 bottle caps in his collection. He found 53 bottle caps at the park.", "executed": 65.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Danny has 12 bottle caps in his collection. He found 53 bottle caps at the park. How many bottle caps does he have now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bottle_caps_in_collection = 12\n    bottle_caps_found_at_park = 53\n    bottle_caps_now = bottle_caps_in_collection + bottle_caps_found_at_park\n    return bottle_caps_now\nans = solver()", "answer": 65.0}
{"question": "How many more balloons did Allan have than Jake in the park?", "passage": "Allan brought 5 balloons and Jake brought 3 balloons to the park.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Allan brought 5 balloons and Jake brought 3 balloons to the park. How many more balloons did Allan have than Jake in the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    allan_balloons = 5\n    jake_balloons = 3\n    # Now, we can calculate the difference between the number of balloons that Allan and Jake have:\n    difference = allan_balloons - jake_balloons\n    # Finally, we can return the difference:\n    return difference\nans = solver()", "answer": 2.0}
{"question": "How many more bird families flew away to africa than those that flew away to asia?", "passage": "Winter is almost here and most animals are migrating to warmer countries. There are 8 bird families living near the mountain. If 42 bird families flew away to africa and 31 bird families flew away to asia.", "executed": 11.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Winter is almost here and most animals are migrating to warmer countries. There are 8 bird families living near the mountain. If 42 bird families flew away to africa and 31 bird families flew away to asia. How many more bird families flew away to africa than those that flew away to asia?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bird_families_africa = 42\n    bird_families_asia = 31\n    bird_families_near_mountain = 8\n    bird_families_migrated = bird_families_africa + bird_families_asia\n    bird_families_remained = bird_families_near_mountain - bird_families_migrated\n    bird_families_africa_more = bird_families_africa - bird_families_asia\n    return bird_families_africa_more\nans = solver()", "answer": 11.0}
{"question": "How many more crunches than push-ups did Zachary do?", "passage": "Zachary did 46 push-ups and 58 crunches in gym class today. David did 38 more push-ups but 62 less crunches than zachary.", "executed": -12.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Zachary did 46 push-ups and 58 crunches in gym class today. David did 38 more push-ups but 62 less crunches than zachary. How many more crunches than push-ups did Zachary do?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    zachary_push_ups = 46\n    zachary_crunches = 58\n    david_push_ups = zachary_push_ups + 38\n    david_crunches = zachary_crunches - 62\n    zachary_push_ups_more_than_crunches = zachary_push_ups - zachary_crunches\n    return zachary_push_ups_more_than_crunches\nans = solver()", "answer": 12.0}
{"question": "How many people can each seat hold?", "passage": "The Ferris wheel in paradise park has 4 seats. If 20 people can ride the wheel at the same time.", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The Ferris wheel in paradise park has 4 seats. If 20 people can ride the wheel at the same time. How many people can each seat hold?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # seats = 4\n    # people = 20\n    seats = 4\n    people = 20\n    # Now, we can calculate the answer:\n    answer = people / seats\n    return answer\nans = solver()", "answer": 5.0}
{"question": "How many pages did she have to complete in all?", "passage": "Rachel had to complete 2 pages of math homework, 3 pages of reading homework and 10 more pages of biology homework.", "executed": 15.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel had to complete 2 pages of math homework, 3 pages of reading homework and 10 more pages of biology homework. How many pages did she have to complete in all?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    math_pages = 2\n    reading_pages = 3\n    biology_pages = 10\n    total_pages = math_pages + reading_pages + biology_pages\n    return total_pages\nans = solver()", "answer": 15.0}
{"question": "How much more money did she receive from her dad than she did from her mom?", "passage": "For Gwen's birthday she received 3 dollars from her mom. Her dad gave her 6 more dollars. If she spent 4 dollars.", "executed": -1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For Gwen's birthday she received 3 dollars from her mom. Her dad gave her 6 more dollars. If she spent 4 dollars. How much more money did she receive from her dad than she did from her mom?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    mom = 3\n    dad = 6\n    spent = 4\n    # Now, we can calculate the answer:\n    answer = dad - mom - spent\n    return answer\nans = solver()", "answer": 3.0}
{"question": "How many cakes would baker still have?", "passage": "Baker made 110 cakes. He sold 75 of them. Then he made 76 more cakes.", "executed": 111.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 110 cakes. He sold 75 of them. Then he made 76 more cakes. How many cakes would baker still have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cakes_baked = 110\n    cakes_sold = 75\n    cakes_baked_more = 76\n    cakes_left = 0\n    cakes_left = cakes_baked - cakes_sold + cakes_baked_more\n    return cakes_left\nans = solver()", "answer": 111.0}
{"question": "How many cakes would baker still have?", "passage": "Baker made 61 pastries and 167 cakes. If he sold 108 cakes and 44 pastries.", "executed": 59.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 61 pastries and 167 cakes. If he sold 108 cakes and 44 pastries. How many cakes would baker still have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # cakes = 167\n    # pastries = 61\n    # sold_cakes = 108\n    # sold_pastries = 44\n    # still_have_cakes = ?\n    cakes = 167\n    pastries = 61\n    sold_cakes = 108\n    sold_pastries = 44\n    still_have_cakes = cakes - sold_cakes\n    return still_have_cakes\nans = solver()", "answer": 59.0}
{"question": "How many more movies than books have you read?", "passage": "There are 11 different books and 17 different movies in the ' crazy silly school ' series. If you read 7 of the books and watched 21 of the movies.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 11 different books and 17 different movies in the ' crazy silly school ' series. If you read 7 of the books and watched 21 of the movies. How many more movies than books have you read?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    books = 11\n    movies = 17\n    read_books = 7\n    watched_movies = 21\n    # Now, we can calculate the number of books and movies that we haven't read or watched:\n    unread_books = books - read_books\n    unwatched_movies = movies - watched_movies\n    # Now, we can calculate the difference between the number of books and movies that we haven't read or watched:\n    difference = unread_books - unwatched_movies\n    # Now, we can return the answer:\n    return difference\nans = solver()", "answer": 14.0}
{"question": "How many houses are there in a block?", "passage": "A mailman gives 2 junk mails to each house in a block. If the mailman has to give 14 pieces of junk mail to each block.", "executed": 0.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A mailman gives 2 junk mails to each house in a block. If the mailman has to give 14 pieces of junk mail to each block. How many houses are there in a block?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x: the number of houses in a block\n    # y: the number of blocks\n    # z: the number of junk mails\n    x = 0\n    y = 0\n    z = 0\n    # Now, we can define the equation:\n    # 2x = 14y\n    # x = 7y\n    # z = 2x\n    # z = 14y\n    # z = 14 * 7y\n    # z = 98y\n    z = 98 * y\n    return z\nans = solver()", "answer": 7.0}
{"question": "How many marbles does Doug have now?", "passage": "Ed had 6 more marbles than Doug. Doug lost 7 of his marbles at the playground. If Ed had 22 marbles.", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Ed had 6 more marbles than Doug. Doug lost 7 of his marbles at the playground. If Ed had 22 marbles. How many marbles does Doug have now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    ed_marbles = 22\n    doug_marbles = 0\n    marbles_diff = 6\n    marbles_lost = 7\n    # Now, we can use the variables to derive the answer:\n    doug_marbles = ed_marbles - marbles_diff - marbles_lost\n    return doug_marbles\nans = solver()", "answer": 9.0}
{"question": "How much money did he spend to buy candy bar than he did to buy chocolate?", "passage": "Dan has $ 2. He bought a candy bar for $ 6 and a chocolate for $ 3.", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dan has $ 2. He bought a candy bar for $ 6 and a chocolate for $ 3. How much money did he spend to buy candy bar than he did to buy chocolate?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    money = 2\n    candy_bar = 6\n    chocolate = 3\n    # Now, we can calculate the difference between the price of candy bar and chocolate\n    difference = candy_bar - chocolate\n    # Now, we can calculate the money that Dan spent to buy candy bar than he did to buy chocolate\n    money_spent = difference * money\n    return money_spent\nans = solver()", "answer": 3.0}
{"question": "How many more customers stayed behind than those that left?", "passage": "A waiter had 3 customers. After some left he still had 4 customers.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter had 3 customers. After some left he still had 4 customers. How many more customers stayed behind than those that left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of customers that left\n    # y = number of customers that stayed behind\n    # z = number of customers that the waiter had at the beginning\n    # We can then write the following equations:\n    # z = x + y\n    # z - x = 4\n    # We can then solve for x and y:\n    x = (z - 4)\n    y = (z - x)\n    return y - x\nans = solver()", "answer": 5.0}
{"question": "How many kids did she play with on monday?", "passage": "Julia played tag with 14 kids on tuesday. If she played tag with 8 more kids on monday than on tuesday.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Julia played tag with 14 kids on tuesday. If she played tag with 8 more kids on monday than on tuesday. How many kids did she play with on monday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 0\n    tuesday = 0\n    # We know that monday = tuesday + 8\n    monday = tuesday + 8\n    # We also know that monday + tuesday = 14\n    monday + tuesday = 14\n    # Now we have two equations with two unknowns, we can solve for monday and tuesday\n    monday = 14 - tuesday\n    monday = 14 - (14 - monday)\n    monday = 14 - 14 + monday\n    monday = monday\n    monday = 14 - tuesday\n    monday = 14 - (14 - monday)\n    monday = 14 - 14 + monday\n    monday = monday\n    monday = 14 - tuesday\n    monday = 14 - (14 - monday)\n    monday = 14 - 14 + monday\n    monday = monday\n    monday = 14 - tuesday\n    monday = 14 - (14 - monday)\n    monday = 14 - 14 + monday\n    monday = monday\n    monday = 14 - tuesday\n    monday = 14 - (14 - monday)\n    monday = 14 - 14 + monday\n    monday = monday\n    monday = 14 - tuesday\n    monday = 14 - (14 - monday)\n    monday = 14 - 14 + monday\n    monday = monday\n    monday = 14 - tuesday\n    monday = 14 - (14 - monday\nans = solver()", "answer": 22.0}
{"question": "How many balloons did Jake bring to the park?", "passage": "Allan brought 5 balloons to the park. If Jake brought 6 more balloons than the number of balloons that Allan brought.", "executed": 11.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Allan brought 5 balloons to the park. If Jake brought 6 more balloons than the number of balloons that Allan brought. How many balloons did Jake bring to the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    allan_balloons = 5\n    jake_balloons = allan_balloons + 6\n    return jake_balloons\nans = solver()", "answer": 11.0}
{"question": "How many more apples does Jackie have than Adam?", "passage": "Jackie has 10 apples. Adam has 8 apples.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jackie has 10 apples. Adam has 8 apples. How many more apples does Jackie have than Adam?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    jackie_apples = 10\n    adam_apples = 8\n    # Now, we can calculate the difference between the number of apples that Jackie and Adam have:\n    difference = jackie_apples - adam_apples\n    # Finally, we can return the difference:\n    return difference\nans = solver()", "answer": 2.0}
{"question": "How many more pastries than cakes did baker make?", "passage": "Baker made 19 cakes and 131 pastries. If he sold 70 cakes and 88 pastries.", "executed": 94.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 19 cakes and 131 pastries. If he sold 70 cakes and 88 pastries. How many more pastries than cakes did baker make?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cakes = 19\n    pastries = 131\n    sold_cakes = 70\n    sold_pastries = 88\n    # Now, we can calculate the number of cakes and pastries that baker made:\n    made_cakes = cakes - sold_cakes\n    made_pastries = pastries - sold_pastries\n    # Now, we can calculate the number of pastries that baker made more than cakes:\n    more_pastries = made_pastries - made_cakes\n    return more_pastries\nans = solver()", "answer": 112.0}
{"question": "How much money did she spend?", "passage": "For Gwen's birthday she received 7 dollars. She spent some money and has 5 dollars left with her.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: For Gwen's birthday she received 7 dollars. She spent some money and has 5 dollars left with her. How much money did she spend?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Gwen's birthday money: 7 dollars\n    # Gwen's money left: 5 dollars\n    # Gwen's money spent: ? dollars\n    # We can define the variables as:\n    birthday_money = 7\n    money_left = 5\n    money_spent = ?\n    # Now we can use the information to derive the answer:\n    money_spent = birthday_money - money_left\n    return money_spent\nans = solver()", "answer": 2.0}
{"question": "How many red and yellow peaches are in the basket?", "passage": "18 red peaches, 14 yellow peaches and 17 green peaches are in the basket.", "executed": 32.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 18 red peaches, 14 yellow peaches and 17 green peaches are in the basket. How many red and yellow peaches are in the basket?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    red_peaches = 18\n    yellow_peaches = 14\n    green_peaches = 17\n    total_peaches = red_peaches + yellow_peaches + green_peaches\n    red_and_yellow_peaches = red_peaches + yellow_peaches\n    return red_and_yellow_peaches\nans = solver()", "answer": 32.0}
{"question": "How many crackers did each person eat?", "passage": "Matthew gave equal numbers of crackers and cakes to his 4 friends. If he had 32 crackers and 98 cakes initially.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Matthew gave equal numbers of crackers and cakes to his 4 friends. If he had 32 crackers and 98 cakes initially. How many crackers did each person eat?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   x: the number of crackers each person ate\n    #   y: the number of cakes each person ate\n    #   z: the number of crackers Matthew had initially\n    #   w: the number of cakes Matthew had initially\n    x = 0\n    y = 0\n    z = 32\n    w = 98\n    # According to the question, we can derive the following equations:\n    #   x + y = 4\n    #   z - x = 0\n    #   w - y = 0\n    #   z = 32\n    #   w = 98\n    # We can solve the above equations to get the answer:\n    x = 8\n    y = 4\n    return x, y\nans = solver()", "answer": 8.0}
{"question": "How many sacks did they harvest per day if they harvested for a total of 14 days?", "passage": "He then went to see the oranges being harvested. He found out that they harvested 56 sacks of oranges.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He then went to see the oranges being harvested. He found out that they harvested 56 sacks of oranges. How many sacks did they harvest per day if they harvested for a total of 14 days?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    total_sacks = 56\n    total_days = 14\n    # Now, we can calculate the sacks per day:\n    sacks_per_day = total_sacks / total_days\n    return sacks_per_day\nans = solver()", "answer": 4.0}
{"question": "How many apples does Bob have?", "passage": "Adam has 4 more apples than Jackie. Together Adam and Jackie have 14 apples. Bob has 6 apples more than Adam and Jackie together do.", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Adam has 4 more apples than Jackie. Together Adam and Jackie have 14 apples. Bob has 6 apples more than Adam and Jackie together do. How many apples does Bob have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Adam's apples = a\n    # Jackie's apples = j\n    # Bob's apples = b\n    # Then we can write the equations:\n    # a + j = 14\n    # a - j = 4\n    # a + j + b = 20\n    # a + j = 14\n    # b = 20 - 14 = 6\n    return 6\nans = solver()", "answer": 20.0}
{"question": "How many more cups of flour does she need to add?", "passage": "Mary is baking a cake. The recipe calls for 6 cups of flour and 13 cups of sugar. She already put in some cups of flour. If she still needs 8 more cups of flour than sugar.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 6 cups of flour and 13 cups of sugar. She already put in some cups of flour. If she still needs 8 more cups of flour than sugar. How many more cups of flour does she need to add?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    flour = 6\n    sugar = 13\n    flour_added = ?\n    flour_needed = ?\n    sugar_needed = ?\n    return flour_needed\nans = solver()", "answer": 21.0}
{"question": "How many bird families were left near the mountain?", "passage": "Winter is almost here and most animals are migrating to warmer countries. 27 bird families flew away for the winter from near a mountain. If there were 41 bird families living near the mountain initially.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Winter is almost here and most animals are migrating to warmer countries. 27 bird families flew away for the winter from near a mountain. If there were 41 bird families living near the mountain initially. How many bird families were left near the mountain?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # bird_families_left = ?\n    # bird_families_migrated = 27\n    # bird_families_initially = 41\n    bird_families_left = bird_families_initially - bird_families_migrated\n    return bird_families_left\nans = solver()", "answer": 14.0}
{"question": "How many more peaches does Jill have than Jake?", "passage": "Jake has 16 fewer peaches than Steven. Steven has 15 more peaches than Jill. If Jill has 12 peaches.", "executed": 11.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jake has 16 fewer peaches than Steven. Steven has 15 more peaches than Jill. If Jill has 12 peaches. How many more peaches does Jill have than Jake?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    jake = 0\n    steven = 0\n    jill = 0\n    # Now, we can define the equations:\n    jake = steven - 16\n    steven = jill + 15\n    jill = 12\n    # Now, we can solve the equations:\n    jake = steven - 16\n    steven = jill + 15\n    jill = 12\n    jake = jill + 15 - 16\n    jake = jill - 1\n    jake = 12 - 1\n    jake = 11\n    # Now, we can return the answer:\n    return jake\nans = solver()", "answer": 1.0}
{"question": "How many pages are in the second chapter?", "passage": "A book has 2 chapters. The first chapter is 60 pages long. If there are a total of 93 pages in the book.", "executed": 33.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A book has 2 chapters. The first chapter is 60 pages long. If there are a total of 93 pages in the book. How many pages are in the second chapter?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    chapter1 = 60\n    chapter2 = 93 - chapter1\n    return chapter2\nans = solver()", "answer": 33.0}
{"question": "How many crayons did he get for his birthday?", "passage": "Paul got a box of some crayons for his birthday. During the school year he gave 563 crayons to his friends while he lost 558 crayons. If he only had 332 crayons left.", "executed": 337.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul got a box of some crayons for his birthday. During the school year he gave 563 crayons to his friends while he lost 558 crayons. If he only had 332 crayons left. How many crayons did he get for his birthday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # crayons_got = ?\n    # crayons_given = 563\n    # crayons_lost = 558\n    # crayons_left = 332\n    crayons_got = 0\n    crayons_given = 563\n    crayons_lost = 558\n    crayons_left = 332\n    # Now we can write the equation:\n    # crayons_got - crayons_given + crayons_lost = crayons_left\n    crayons_got = crayons_left + crayons_given - crayons_lost\n    return crayons_got\nans = solver()", "answer": 1453.0}
{"question": "How many people are there on the bus now?", "passage": "At the stop 13 more people got on the bus. Initially there were 4 people on the bus.", "executed": 17.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the stop 13 more people got on the bus. Initially there were 4 people on the bus. How many people are there on the bus now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # people_on_bus = 4\n    # people_got_on_bus = 13\n    people_on_bus = 4\n    people_got_on_bus = 13\n    # Now, we can calculate the total number of people on the bus:\n    total_people_on_bus = people_on_bus + people_got_on_bus\n    return total_people_on_bus\nans = solver()", "answer": 17.0}
{"question": "How many kids did she play with on monday?", "passage": "Julia played tag with some kids on monday. She played tag with 14 kids on tuesday. If she played with a total of 16 kids.", "executed": 30.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Julia played tag with some kids on monday. She played tag with 14 kids on tuesday. If she played with a total of 16 kids. How many kids did she play with on monday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 14\n    tuesday = 16\n    total = monday + tuesday\n    return total\nans = solver()", "answer": 2.0}
{"question": "How many cakes would baker still have?", "passage": "Baker's friend bought 137 cakes from him. If he had made 169 cakes initially.", "executed": 32.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker's friend bought 137 cakes from him. If he had made 169 cakes initially. How many cakes would baker still have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cakes_bought = 137\n    cakes_initially = 169\n    cakes_left = cakes_initially - cakes_bought\n    return cakes_left\nans = solver()", "answer": 32.0}
{"question": "How many more action figures than books were on his shelf?", "passage": "Jerry had 5 action figures and 9 books on a shelf in his room. Later he added 7 more action figures to the shelf.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jerry had 5 action figures and 9 books on a shelf in his room. Later he added 7 more action figures to the shelf. How many more action figures than books were on his shelf?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    action_figures = 5\n    books = 9\n    more_action_figures = 7\n    # Now, we can calculate the answer:\n    answer = action_figures + more_action_figures - books\n    return answer\nans = solver()", "answer": 3.0}
{"question": "How much money does he earn each week?", "passage": "For 19 weeks of harvest Lewis earns a total of $ 133.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For 19 weeks of harvest Lewis earns a total of $ 133. How much money does he earn each week?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Lewis's weekly income: x\n    # Lewis's total income: 133\n    # Lewis's total weeks: 19\n    x = 133 / 19\n    return x\nans = solver()", "answer": 7.0}
{"question": "How many books did he have at the start?", "passage": "Paul had some books. After selling 137 in a garage sale he had 105 left.", "executed": 347.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul had some books. After selling 137 in a garage sale he had 105 left. How many books did he have at the start?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = the number of books Paul had at the start\n    # y = the number of books Paul had after selling 137 in a garage sale\n    # z = the number of books Paul had left after selling 137 in a garage sale\n    # We can also define the equation:\n    # x - 137 = y\n    # y - 105 = z\n    # z = 105\n    # x - 137 = y\n    # x - 137 - 105 = z\n    # x - 137 - 105 = 105\n    # x - 137 - 105 = 105\n    # x - 242 = 105\n    # x = 105 + 242\n    # x = 347\n    return 347\nans = solver()", "answer": 242.0}
{"question": "How much money did Fred earn over the weekend?", "passage": "Last week Fred had 33 dollars and Jason had 95 dollars. Over the weekend Fred delivered newspapers earning 16 dollars and washed cars earning 74 dollars.", "executed": 90.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Last week Fred had 33 dollars and Jason had 95 dollars. Over the weekend Fred delivered newspapers earning 16 dollars and washed cars earning 74 dollars. How much money did Fred earn over the weekend?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    fred_before = 33\n    jason_before = 95\n    fred_newspaper = 16\n    fred_car = 74\n    fred_after = fred_before + fred_newspaper + fred_car\n    jason_after = jason_before\n    return fred_after - fred_before\nans = solver()", "answer": 90.0}
{"question": "How many cookies does each bag have?", "passage": "If you have 14 cookies in total and 7 bags having equal number of cookies.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: If you have 14 cookies in total and 7 bags having equal number of cookies. How many cookies does each bag have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    total_cookies = 14\n    total_bags = 7\n    cookies_per_bag = total_cookies / total_bags\n    return cookies_per_bag\nans = solver()", "answer": 2.0}
{"question": "How many crackers did each person eat?", "passage": "Matthew gave equal numbers of crackers to his 18 friends. If he had 36 crackers.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Matthew gave equal numbers of crackers to his 18 friends. If he had 36 crackers. How many crackers did each person eat?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   1. The number of crackers Matthew gave to his friends\n    #   2. The number of crackers Matthew had\n    #   3. The number of friends Matthew had\n    #   4. The number of crackers each person ate\n    #   5. The number of crackers Matthew ate\n    #   6. The number of crackers Matthew had left\n    crackers_given = 0\n    crackers_had = 36\n    friends = 18\n    crackers_each = 0\n    crackers_matthew = 0\n    crackers_left = 0\nans = solver()", "answer": 2.0}
{"question": "How many does she need to give away so that she will have 6 games left?", "passage": "Kelly has 80 nintendo games. She found 31 more nintendo games.", "executed": 105.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Kelly has 80 nintendo games. She found 31 more nintendo games. How many does she need to give away so that she will have 6 games left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of nintendo games she has\n    # y = number of nintendo games she found\n    # z = number of nintendo games she needs to give away\n    x = 80\n    y = 31\n    z = 6\n    # Now, we can define the equation:\n    # x + y - z = 6\n    # We can solve for z:\n    z = x + y - 6\n    return z\nans = solver()", "answer": 105.0}
{"question": "How many more movies do you still have to watch?", "passage": "There are 4 different books and 17 different movies in the ' crazy silly school ' series. If you read 19 of the books and watched 7 of the movies.", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 4 different books and 17 different movies in the ' crazy silly school ' series. If you read 19 of the books and watched 7 of the movies. How many more movies do you still have to watch?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    books = 4\n    movies = 17\n    read_books = 19\n    watched_movies = 7\n    # Now, we can calculate the number of movies we still have to watch:\n    movies_to_watch = movies - watched_movies\n    return movies_to_watch\nans = solver()", "answer": 10.0}
{"question": "How many more sacks of unripe oranges than ripe oranges are harvested per day?", "passage": "He then went to see the oranges being harvested. He found out that they harvest 5 sacks of ripe oranges and 74 sacks of unripe oranges per day.", "executed": 69.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He then went to see the oranges being harvested. He found out that they harvest 5 sacks of ripe oranges and 74 sacks of unripe oranges per day. How many more sacks of unripe oranges than ripe oranges are harvested per day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    ripe_oranges = 5\n    unripe_oranges = 74\n    # Now, we can calculate the difference between the two variables:\n    difference = unripe_oranges - ripe_oranges\n    return difference\nans = solver()", "answer": 69.0}
{"question": "How much money does he pay as rent during the harvest season?", "passage": "Lewis earns $ 368 every week during the 1359 weeks of harvest. If he has to pay $ 388 rent every week.", "executed": -27180.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Lewis earns $ 368 every week during the 1359 weeks of harvest. If he has to pay $ 388 rent every week. How much money does he pay as rent during the harvest season?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    rent = 388\n    salary = 368\n    weeks = 1359\n    # Now we can calculate the total rent:\n    total_rent = rent * weeks\n    # Now we can calculate the total salary:\n    total_salary = salary * weeks\n    # Now we can calculate the total money he paid as rent during the harvest season:\n    total_money_paid_as_rent = total_salary - total_rent\n    return total_money_paid_as_rent\nans = solver()", "answer": 527292.0}
{"question": "How many planks does John need for the house wall?", "passage": "For the walls of the house he would use 11 nails in all to secure large planks of wood. If each plank needs 3 pieces of nails to be secured and an additional 8 nails were used.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: For the walls of the house he would use 11 nails in all to secure large planks of wood. If each plank needs 3 pieces of nails to be secured and an additional 8 nails were used. How many planks does John need for the house wall?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   n: the number of planks\n    #   x: the number of nails used to secure each plank\n    #   y: the number of nails used to secure the planks\n    #   z: the number of nails used to secure the planks and the additional nails\n    #   w: the number of nails used to secure the planks and the additional nails\n    #   a: the number of nails used to secure the planks and the additional nails\n    #   b: the number of nails used to secure the planks and the additional nails\n    #   c: the number of nails used to secure the planks and the additional nails\n    #   d: the number of nails used to secure the planks and the additional nails\n    #   e: the number of nails used to secure the planks and the additional nails\n    #   f: the number of nails used to secure the planks and the additional nails\n    #   g: the number of nails used to secure the planks and the additional nails\n    #   h: the number of nails used to secure the planks and the additional nails\n    #   i: the number of nails used to secure the planks and the additional nails\n    #   j: the number of nails used to secure the planks and the additional nails\n    #   k: the number of nails used to secure the planks and the additional nails\n    #   l: the number of nails used to secure the planks and the additional nails\n    #   m: the number of nails used to secure the planks and the\nans = solver()", "answer": 1.0}
{"question": "How many more red peaches than green peaches are in the basket?", "passage": "17 red peaches and 16 green peaches are in the basket.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 17 red peaches and 16 green peaches are in the basket. How many more red peaches than green peaches are in the basket?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    red_peaches = 17\n    green_peaches = 16\n    # Now, we can calculate the difference between red peaches and green peaches\n    difference = red_peaches - green_peaches\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many students participated in the suggestion of new food items?", "passage": "Because of the decision Sofia asked the students to suggest specific types of food. If 324 students suggested adding mashed potatoes 374 suggested adding bacon to the menu and 128 suggested adding tomatoes.", "executed": 826.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Because of the decision Sofia asked the students to suggest specific types of food. If 324 students suggested adding mashed potatoes 374 suggested adding bacon to the menu and 128 suggested adding tomatoes. How many students participated in the suggestion of new food items?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of students who suggested adding mashed potatoes\n    # y = number of students who suggested adding bacon to the menu\n    # z = number of students who suggested adding tomatoes\n    # We can also define the equation:\n    # x + y + z = total number of students who participated in the suggestion of new food items\n    # We can also define the equation:\n    # x + y + z = 324 + 374 + 128\n    # x + y + z = 826\n    # x + y + z = total number of students who participated in the suggestion of new food items\n    return 826\nans = solver()", "answer": 826.0}
{"question": "How many more kids stayed home compared to those who went to the camp?", "passage": "During summer break 202958 kids from Lawrence county go to camp and the other 777622 kids stay home.", "executed": 574664.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: During summer break 202958 kids from Lawrence county go to camp and the other 777622 kids stay home. How many more kids stayed home compared to those who went to the camp?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    kids_at_camp = 202958\n    kids_at_home = 777622\n    # Now, we can calculate the difference between the two variables:\n    difference = kids_at_home - kids_at_camp\n    return difference\nans = solver()", "answer": 574664.0}
{"question": "How many more birds than storks are sitting on the fence?", "passage": "6 birds and 3 storks were sitting on the fence. 2 more storks came to join them.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 6 birds and 3 storks were sitting on the fence. 2 more storks came to join them. How many more birds than storks are sitting on the fence?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    birds = 6\n    storks = 3\n    more_storks = 2\n    # Now, we can calculate the total number of storks:\n    total_storks = storks + more_storks\n    # Now, we can calculate the total number of birds:\n    total_birds = birds\n    # Now, we can calculate the difference between the total number of birds and the total number of storks:\n    difference = total_birds - total_storks\n    # Now, we can return the difference:\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many more books do you still have to read?", "passage": "There are 22 different books and 10 different movies in the ' crazy silly school ' series. If you read 12 of the books and watched 56 of the movies.", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 22 different books and 10 different movies in the ' crazy silly school ' series. If you read 12 of the books and watched 56 of the movies. How many more books do you still have to read?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    books = 22\n    movies = 10\n    read_books = 12\n    watched_movies = 56\n    # Now, we can calculate the number of books that we still have to read:\n    books_to_read = books - read_books\n    return books_to_read\nans = solver()", "answer": 10.0}
{"question": "How many people are there on the bus now?", "passage": "There were 12 people on the bus. At the next stop 4 more people got on the bus. Each bus can not have more than 36 people.", "executed": 16.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 12 people on the bus. At the next stop 4 more people got on the bus. Each bus can not have more than 36 people. How many people are there on the bus now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    people_on_bus = 12\n    people_got_on = 4\n    max_people = 36\n    # Now we can calculate the number of people on the bus now:\n    people_on_bus_now = people_on_bus + people_got_on\n    return people_on_bus_now\nans = solver()", "answer": 16.0}
{"question": "How many bottles did they have total?", "passage": "A grocery store had 57 bottles of regular soda, 26 bottles of diet soda and 27 bottles of lite soda.", "executed": 110.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A grocery store had 57 bottles of regular soda, 26 bottles of diet soda and 27 bottles of lite soda. How many bottles did they have total?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    regular_soda = 57\n    diet_soda = 26\n    lite_soda = 27\n    total_bottles = regular_soda + diet_soda + lite_soda\n    return total_bottles\nans = solver()", "answer": 110.0}
{"question": "How many students suggested mashed potatoes?", "passage": "Because of the decision Sofia asked 288 students to suggest specific types of food. 264 students suggested adding bacon while others suggested adding mashed potatoes to the menu.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Because of the decision Sofia asked 288 students to suggest specific types of food. 264 students suggested adding bacon while others suggested adding mashed potatoes to the menu. How many students suggested mashed potatoes?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bacon = 264\n    mashed_potatoes = ?\n    total_students = 288\n    # We know that the total number of students is 288, so we can write the equation:\n    total_students = bacon + mashed_potatoes\n    # Now we can solve for mashed_potatoes:\n    mashed_potatoes = total_students - bacon\n    return mashed_potatoes\nans = solver()", "answer": 24.0}
{"question": "How much did Edward have before he spent his money?", "passage": "Edward spent $ 9. Then he spent $ 8 more. Now he has $ 17.", "executed": 24.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Edward spent $ 9. Then he spent $ 8 more. Now he has $ 17. How much did Edward have before he spent his money?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Edward's money before he spent his money: x\n    # Edward's money after he spent his money: y\n    # Edward's money after he spent his money again: z\n    # Then we can get the equations:\n    # x - 9 = y\n    # y - 8 = z\n    # z = 17\n    # Solve the equations, we can get the answer: x = 24\n    return 24\nans = solver()", "answer": 34.0}
{"question": "How many bird families were left near the mountain?", "passage": "Winter is almost here and most animals are migrating to warmer countries. There are 85 bird families living near the mountain. If 23 bird families flew away to africa and 37 bird families flew away to asia.", "executed": 25.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Winter is almost here and most animals are migrating to warmer countries. There are 85 bird families living near the mountain. If 23 bird families flew away to africa and 37 bird families flew away to asia. How many bird families were left near the mountain?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bird_families_near_mountain = 85\n    bird_families_to_africa = 23\n    bird_families_to_asia = 37\n    bird_families_left_near_mountain = bird_families_near_mountain - bird_families_to_africa - bird_families_to_asia\n    return bird_families_left_near_mountain\nans = solver()", "answer": 25.0}
{"question": "How many girls are there in the school now?", "passage": "In a school there are 902 girls and 811 boys. 44 more girls joined the school.", "executed": 946.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In a school there are 902 girls and 811 boys. 44 more girls joined the school. How many girls are there in the school now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    girls = 902\n    boys = 811\n    girls_joined = 44\n    # Now, we can calculate the total number of girls in the school now:\n    girls_now = girls + girls_joined\n    return girls_now\nans = solver()", "answer": 946.0}
{"question": "How much money did he spend to buy chocolate than he did to buy candy bar?", "passage": "Dan has $ 4. He bought a chocolate for $ 7 and a candy bar for $ 2.", "executed": -4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dan has $ 4. He bought a chocolate for $ 7 and a candy bar for $ 2. How much money did he spend to buy chocolate than he did to buy candy bar?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    money_dan = 4\n    price_chocolate = 7\n    price_candy_bar = 2\n    # Now, we can calculate the number of chocolate and candy bar that Dan can buy\n    num_chocolate = math.floor(money_dan / price_chocolate)\n    num_candy_bar = math.floor(money_dan / price_candy_bar)\n    # Now, we can calculate the money that Dan spent to buy chocolate and candy bar\n    money_spent_chocolate = num_chocolate * price_chocolate\n    money_spent_candy_bar = num_candy_bar * price_candy_bar\n    # Now, we can calculate the difference between the money that Dan spent to buy chocolate and the money that Dan spent to buy candy bar\n    money_diff = money_spent_chocolate - money_spent_candy_bar\n    return money_diff\nans = solver()", "answer": 5.0}
{"question": "How many tickets did Dave have left?", "passage": "At the arcade Dave had won 18 tickets. If he used 5 to buy some toys and 11 more to buy some clothes.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the arcade Dave had won 18 tickets. If he used 5 to buy some toys and 11 more to buy some clothes. How many tickets did Dave have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    tickets_won = 18\n    tickets_used_for_toys = 5\n    tickets_used_for_clothes = 11\n    tickets_left = tickets_won - tickets_used_for_toys - tickets_used_for_clothes\n    return tickets_left\nans = solver()", "answer": 2.0}
{"question": "How many students are in each class?", "passage": "The school is planning a field trip. The school has 24 classrooms. There are 120 students in the school with each classroom having the same number of students. There are 84 seats on each school bus.", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school is planning a field trip. The school has 24 classrooms. There are 120 students in the school with each classroom having the same number of students. There are 84 seats on each school bus. How many students are in each class?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. Number of students in each class: x\n    # 2. Number of students in the school: 120\n    # 3. Number of classrooms: 24\n    # 4. Number of seats on each school bus: 84\n    # 5. Number of school buses: y\n    x = 120 / 24\n    y = 120 / 84\n    return x, y\nans = solver()", "answer": 5.0}
{"question": "How many sacks do they harvest per day if they harvested a total of 56 sacks of oranges?", "passage": "He then went to see the oranges being harvested. He found out that the harvest will go on for 4 days.", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He then went to see the oranges being harvested. He found out that the harvest will go on for 4 days. How many sacks do they harvest per day if they harvested a total of 56 sacks of oranges?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    total_sacks = 56\n    total_days = 4\n    # Now, we can calculate the sacks per day:\n    sacks_per_day = total_sacks / total_days\n    return sacks_per_day\nans = solver()", "answer": 14.0}
{"question": "How many more roses did she throw away than those she cut from her garden?", "passage": "There were 21 roses in the vase. Jessica threw away 34 roses from the vase and cut some more new roses from her flower garden to put in the vase. There are now 15 roses in the vase.", "executed": -19.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 21 roses in the vase. Jessica threw away 34 roses from the vase and cut some more new roses from her flower garden to put in the vase. There are now 15 roses in the vase. How many more roses did she throw away than those she cut from her garden?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of roses Jessica cut from her garden\n    # y = number of roses Jessica threw away\n    # z = number of roses in the vase\n    # We can also define the equations:\n    # x + y = 15\n    # x + y + 34 = 21\n    # x + y = z\n    # We can solve the equations to get the answer:\n    x = 15 - 34\n    y = 21 - 15\n    z = 15\n    return x, y, z\nans = solver()", "answer": 6.0}
{"question": "How many more balloons did Jake have than Allan in the park?", "passage": "Allan brought 2 balloons and Jake brought 6 balloons to the park. Allan then bought 3 more balloons at the park.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Allan brought 2 balloons and Jake brought 6 balloons to the park. Allan then bought 3 more balloons at the park. How many more balloons did Jake have than Allan in the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    allan_balloons = 2\n    jake_balloons = 6\n    allan_bought = 3\n    # Now, we can calculate the number of balloons that Allan had in the park:\n    allan_balloons_in_park = allan_balloons + allan_bought\n    # Now, we can calculate the number of balloons that Jake had in the park:\n    jake_balloons_in_park = jake_balloons\n    # Now, we can calculate the difference between the number of balloons that Jake had in the park and the number of balloons that Allan had in the park:\n    difference = jake_balloons_in_park - allan_balloons_in_park\n    # Now, we can return the difference:\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many sacks of oranges will they have after 26 days of harvest?", "passage": "He then went to see the oranges being harvested. He found out that they harvest 28 sacks of ripe oranges and 52 sacks of unripe oranges per day.", "executed": 2080.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He then went to see the oranges being harvested. He found out that they harvest 28 sacks of ripe oranges and 52 sacks of unripe oranges per day. How many sacks of oranges will they have after 26 days of harvest?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    ripe_oranges = 28\n    unripe_oranges = 52\n    days = 26\n    total_oranges = ripe_oranges + unripe_oranges\n    total_sacks = total_oranges * days\n    return total_sacks\nans = solver()", "answer": 2080.0}
{"question": "How many apples does he have?", "passage": "Together Adam and Jackie have 6 apples. He has 4 apples more than adam and jackie together do.", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Together Adam and Jackie have 6 apples. He has 4 apples more than adam and jackie together do. How many apples does he have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # adam = x\n    # jackie = y\n    # he = z\n    # x + y = 6\n    # z = x + y + 4\n    # z = 10\n    return 10\nans = solver()", "answer": 10.0}
{"question": "How many more trees survived the typhoon than those that died?", "passage": "After a typhoon, 2 trees in Haley's backyard died. If she had grown 11 trees initially.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: After a typhoon, 2 trees in Haley's backyard died. If she had grown 11 trees initially. How many more trees survived the typhoon than those that died?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. The number of trees that survived the typhoon: survived\n    # 2. The number of trees that died: died\n    # 3. The number of trees that Haley had grown initially: grown\n    survived = 0\n    died = 0\n    grown = 11\n    # Now, we can use the information given in the question to derive the answer\n    # We know that the number of trees that survived the typhoon is 2 less than the number of trees that died\n    survived = died - 2\n    # We also know that the number of trees that survived the typhoon is 9 more than the number of trees that Haley had grown initially\n    survived = grown + 9\n    # We can combine the two equations to get the answer\n    died = grown + 11\n    # We can also use the information given in the question to derive the answer\n    survived = grown - died\n    survived = grown - (grown + 11)\n    survived = grown - grown - 11\n    survived = -11\n    # We can also use the information given in the question to derive the answer\n    survived = grown - died\n    survived = grown - (grown - 9)\n    survived = grown - grown + 9\n    survived = 9\n    # We can also use the information given in the question to derive the answer\n    survived = grown - died\n    survived = grown - (grown + 2)\n    survived = grown - grown - 2\n    survived = -2\n    # We can also use the information given in the question to derive the answer\n    survived = grown - died\nans = solver()", "answer": 7.0}
{"question": "How many balloons did Jake bring to the park?", "passage": "Allan brought 5 balloons and Jake brought 6 balloons to the park. Jake then bought 3 more balloons at the park.", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Allan brought 5 balloons and Jake brought 6 balloons to the park. Jake then bought 3 more balloons at the park. How many balloons did Jake bring to the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    allan_balloons = 5\n    jake_balloons = 6\n    bought_balloons = 3\n    jake_balloons_at_park = jake_balloons + bought_balloons\n    return jake_balloons_at_park\nans = solver()", "answer": 9.0}
{"question": "How much money did they make from selling the t-shirts?", "passage": "The Razorback shop makes $ 62 dollars off each t-shirt and $ 99 off each jersey. During the Arkansas and Texas tech game they sold 183 t-shirts and 31 jerseys.", "executed": 11346.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The Razorback shop makes $ 62 dollars off each t-shirt and $ 99 off each jersey. During the Arkansas and Texas tech game they sold 183 t-shirts and 31 jerseys. How much money did they make from selling the t-shirts?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    t_shirt_price = 62\n    jersey_price = 99\n    t_shirt_sold = 183\n    jersey_sold = 31\n    # Now we can calculate the total money made from selling t-shirts:\n    total_money_made_from_t_shirts = t_shirt_price * t_shirt_sold\n    return total_money_made_from_t_shirts\nans = solver()", "answer": 11346.0}
{"question": "How many push-ups did Zachary do?", "passage": "David did 30 more push-ups than Zachary in gym class today. If David did 37 push-ups.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: David did 30 more push-ups than Zachary in gym class today. If David did 37 push-ups. How many push-ups did Zachary do?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # David's push-ups: d\n    # Zachary's push-ups: z\n    # David did 30 more push-ups than Zachary: d - z = 30\n    # David did 37 push-ups: d = 37\n    # We can combine the above two equations to get:\n    # d - z = 30\n    # d = 37\n    # We can solve the above two equations to get:\n    # z = 7\n    return 7\nans = solver()", "answer": 7.0}
{"question": "How much more did his strawberries weigh than his dad's?", "passage": "Marco and his dad went strawberry picking. Marco's strawberries weighed 30 pounds. If together their strawberries weighed 47 pounds.", "executed": 13.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Marco and his dad went strawberry picking. Marco's strawberries weighed 30 pounds. If together their strawberries weighed 47 pounds. How much more did his strawberries weigh than his dad's?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marco_strawberries = 30\n    total_strawberries = 47\n    # We can also define the unknown variable:\n    dad_strawberries = 0\n    # Now we can use the given information to derive the answer:\n    dad_strawberries = total_strawberries - marco_strawberries\n    return marco_strawberries - dad_strawberries\nans = solver()", "answer": 13.0}
{"question": "How many crayons does she have?", "passage": "Faye was placing her pencils and crayons into 16 rows with 6 crayons and 21 pencils in each row.", "executed": 96.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Faye was placing her pencils and crayons into 16 rows with 6 crayons and 21 pencils in each row. How many crayons does she have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    crayons = 0\n    pencils = 0\n    rows = 16\n    crayons_per_row = 6\n    pencils_per_row = 21\n    crayons = rows * crayons_per_row\n    pencils = rows * pencils_per_row\n    return crayons\nans = solver()", "answer": 96.0}
{"question": "How many emails did Jack receive in the morning and evening?", "passage": "Jack received 3 emails in the morning, 4 emails in the afternoon and 8 emails in the evening.", "executed": 11.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jack received 3 emails in the morning, 4 emails in the afternoon and 8 emails in the evening. How many emails did Jack receive in the morning and evening?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning = 3\n    afternoon = 4\n    evening = 8\n    # Now, we can calculate the answer:\n    answer = morning + evening\n    return answer\nans = solver()", "answer": 11.0}
{"question": "What is the width of her room?", "passage": "Jesse's room is 7 feet long. If she needs a carpet of size 14 square feet.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jesse's room is 7 feet long. If she needs a carpet of size 14 square feet. What is the width of her room?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    length = 7\n    area = 14\n    width = 0\n    # Now, we can calculate the width by using the formula:\n    width = area / length\n    return width\nans = solver()", "answer": 2.0}
{"question": "How many bottles does she have left?", "passage": "Debby bought 264 water bottles when they were on sale. If she drank 15 bottles a day for 11 days.", "executed": 99.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Debby bought 264 water bottles when they were on sale. If she drank 15 bottles a day for 11 days. How many bottles does she have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bottles_bought = 264\n    bottles_drank = 15\n    days = 11\n    bottles_left = bottles_bought - bottles_drank * days\n    return bottles_left\nans = solver()", "answer": 99.0}
{"question": "How many more campers went rowing in the afternoon than in the evening?", "passage": "33 campers went rowing in the morning 34 campers went rowing in the afternoon and 10 campers went rowing in the evening.", "executed": 24.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 33 campers went rowing in the morning 34 campers went rowing in the afternoon and 10 campers went rowing in the evening. How many more campers went rowing in the afternoon than in the evening?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning = 33\n    afternoon = 34\n    evening = 10\n    # Now, we can calculate the difference between afternoon and evening\n    difference = afternoon - evening\n    return difference\nans = solver()", "answer": 24.0}
{"question": "How many books and magazines does he have in total?", "passage": "Bryan took a look at his books and magazines. If he has 23 books and 61 magazines in each of his 29 bookshelves.", "executed": 2436.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bryan took a look at his books and magazines. If he has 23 books and 61 magazines in each of his 29 bookshelves. How many books and magazines does he have in total?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bookshelf = 29\n    books = 23\n    magazines = 61\n    total_books = bookshelf * books\n    total_magazines = bookshelf * magazines\n    total = total_books + total_magazines\n    return total\nans = solver()", "answer": 2436.0}
{"question": "How many crayons does she have?", "passage": "Faye was placing her pencils and crayons into 7 rows with 36 pencils and 30 crayons in each row.", "executed": 210.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Faye was placing her pencils and crayons into 7 rows with 36 pencils and 30 crayons in each row. How many crayons does she have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    pencils_per_row = 36\n    crayons_per_row = 30\n    rows = 7\n    pencils = pencils_per_row * rows\n    crayons = crayons_per_row * rows\n    return crayons\nans = solver()", "answer": 210.0}
{"question": "How many pastries would baker still have?", "passage": "Baker made 7 cakes and 148 pastries. If he sold 15 cakes and 103 pastries.", "executed": 45.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 7 cakes and 148 pastries. If he sold 15 cakes and 103 pastries. How many pastries would baker still have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cakes = 7\n    pastries = 148\n    sold_cakes = 15\n    sold_pastries = 103\n    # Now, we can calculate the remaining pastries:\n    remaining_pastries = pastries - sold_pastries\n    return remaining_pastries\nans = solver()", "answer": 45.0}
{"question": "How long is his hair now?", "passage": "Robin cut off 13 inches of his hair. If his hair was 14 inches long initially.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Robin cut off 13 inches of his hair. If his hair was 14 inches long initially. How long is his hair now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # hair_length_initial = 14\n    # hair_length_cut_off = 13\n    hair_length_initial = 14\n    hair_length_cut_off = 13\n    hair_length_now = hair_length_initial - hair_length_cut_off\n    return hair_length_now\nans = solver()", "answer": 1.0}
{"question": "How many chairs are there for each table?", "passage": "They decided to hold the party in their backyard. They have 2 sets of tables, each having the same number of chairs. If there are a total of 12 chairs in the backyard.", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: They decided to hold the party in their backyard. They have 2 sets of tables, each having the same number of chairs. If there are a total of 12 chairs in the backyard. How many chairs are there for each table?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    total_chairs = 12\n    num_tables = 2\n    chairs_per_table = total_chairs / num_tables\n    return chairs_per_table\nans = solver()", "answer": 6.0}
{"question": "How many days would the water bottles last?", "passage": "Debby bought 88 water bottles and 13 soda bottles when they were on sale. If she drank 4 water bottles and 87 soda bottles a day.", "executed": 0.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Debby bought 88 water bottles and 13 soda bottles when they were on sale. If she drank 4 water bottles and 87 soda bottles a day. How many days would the water bottles last?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    water_bottles = 88\n    soda_bottles = 13\n    water_drank = 4\n    soda_drank = 87\n    days = 0\n    while water_bottles > 0:\n        water_bottles -= water_drank\n        soda_bottles -= soda_drank\n        days += 1\n        if soda_bottles < 0:\n            soda_bottles += soda_drank\n            days -= 1\n            break\n    return days\nans = solver()", "answer": 22.0}
{"question": "How much money did Jason make washing cars?", "passage": "Last week Fred had 60 dollars and Jason had 19 dollars. Jason washed cars over the weekend and now has 33 dollars.", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Last week Fred had 60 dollars and Jason had 19 dollars. Jason washed cars over the weekend and now has 33 dollars. How much money did Jason make washing cars?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    fred = 60\n    jason = 19\n    jason_after = 33\n    # Now we can calculate the answer:\n    jason_made = jason_after - jason\n    return jason_made\nans = solver()", "answer": 14.0}
{"question": "How many books did he sell?", "passage": "Paul sold some books in a garage sale leaving him with 27 books. If he had 136 books initially.", "executed": 109.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul sold some books in a garage sale leaving him with 27 books. If he had 136 books initially. How many books did he sell?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   x = number of books sold\n    #   y = number of books left\n    #   z = number of books initially\n    #   x + y = z\n    #   x = z - y\n    #   x = 136 - 27\n    #   x = 109\n    return 109\nans = solver()", "answer": 109.0}
{"question": "How many more grams of wax does he need?", "passage": "Next on his checklist is wax to stick the feathers together. If the feathers require 166 g of wax and right now he has 20 g.", "executed": 146.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Next on his checklist is wax to stick the feathers together. If the feathers require 166 g of wax and right now he has 20 g. How many more grams of wax does he need?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    wax_required = 166\n    wax_available = 20\n    wax_needed = wax_required - wax_available\n    return wax_needed\nans = solver()", "answer": 146.0}
{"question": "How big is each group?", "passage": "The bananas in Philip's collection are organized into 196 groups. If there are a total of 392 bananas in Philip's banana collection.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The bananas in Philip's collection are organized into 196 groups. If there are a total of 392 bananas in Philip's banana collection. How big is each group?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # total_bananas = 392\n    # total_groups = 196\n    # bananas_per_group = ?\n    total_bananas = 392\n    total_groups = 196\n    bananas_per_group = total_bananas / total_groups\n    return bananas_per_group\nans = solver()", "answer": 2.0}
{"question": "How much farther did the frog jump than the grasshopper?", "passage": "The grasshopper and the frog had a jumping contest. The grasshopper jumped 9 inches and the frog jumped 12 inches.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The grasshopper and the frog had a jumping contest. The grasshopper jumped 9 inches and the frog jumped 12 inches. How much farther did the frog jump than the grasshopper?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    grasshopper_jump = 9\n    frog_jump = 12\n    # Now, we can calculate the difference between the frog and the grasshopper\n    difference = frog_jump - grasshopper_jump\n    return difference\nans = solver()", "answer": 3.0}
{"question": "How many will each of the boys receive?", "passage": "In Haley's class 13 boys love to play marbles and 50 boys love to play cards. If Haley has 26 marbles.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In Haley's class 13 boys love to play marbles and 50 boys love to play cards. If Haley has 26 marbles. How many will each of the boys receive?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    boys_love_marbles = 13\n    boys_love_cards = 50\n    marbles = 26\n    # Now, we can calculate the number of marbles each boy will receive:\n    marbles_each_boy = marbles / boys_love_marbles\n    return marbles_each_boy\nans = solver()", "answer": 2.0}
{"question": "How many peaches does Jill have?", "passage": "Steven has 18 peaches. Jake has 12 fewer peaches than Steven who has 8 more peaches than Jill.", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Steven has 18 peaches. Jake has 12 fewer peaches than Steven who has 8 more peaches than Jill. How many peaches does Jill have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    steven = 18\n    jake = steven - 12\n    jill = jake + 8\n    return jill\nans = solver()", "answer": 10.0}
{"question": "How many marbles did she have?", "passage": "In Haley's class 11 are boys who love to play marbles. If Haley gives 9 marbles to each boy.", "executed": 99.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In Haley's class 11 are boys who love to play marbles. If Haley gives 9 marbles to each boy. How many marbles did she have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    boys = 11\n    marbles_per_boy = 9\n    marbles_total = boys * marbles_per_boy\n    return marbles_total\nans = solver()", "answer": 99.0}
{"question": "How many more marbles did Ed have than Doug then?", "passage": "Ed had 30 more marbles than Doug. Ed lost 21 of his marbles at the playground. If Ed had 91 marbles.", "executed": 121.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Ed had 30 more marbles than Doug. Ed lost 21 of his marbles at the playground. If Ed had 91 marbles. How many more marbles did Ed have than Doug then?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    ed_marbles = 91\n    ed_lost = 21\n    ed_marbles_after_lost = ed_marbles - ed_lost\n    ed_marbles_before_lost = ed_marbles_after_lost + ed_lost\n    ed_marbles_before_lost_more = ed_marbles_before_lost + 30\n    return ed_marbles_before_lost_more\nans = solver()", "answer": 9.0}
{"question": "How many tomatoes are left?", "passage": "A farmer had 105 green tomatoes and 71 red tomatoes in his garden. If he picked 137 tomatoes.", "executed": 39.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A farmer had 105 green tomatoes and 71 red tomatoes in his garden. If he picked 137 tomatoes. How many tomatoes are left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    green_tomatoes = 105\n    red_tomatoes = 71\n    picked_tomatoes = 137\n    left_tomatoes = 0\n    # Now, we can calculate the left_tomatoes by using the variables above\n    left_tomatoes = green_tomatoes + red_tomatoes - picked_tomatoes\n    return left_tomatoes\nans = solver()", "answer": 39.0}
{"question": "How much money will have at the end of the harvest season?", "passage": "Lewis earns $ 21 every week during the 216 weeks of harvest. If he has to pay $ 702 tax.", "executed": 3834.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Lewis earns $ 21 every week during the 216 weeks of harvest. If he has to pay $ 702 tax. How much money will have at the end of the harvest season?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. Earnings per week: earn\n    # 2. Tax: tax\n    # 3. Number of weeks: weeks\n    # 4. Total earnings: total_earn\n    earn = 21\n    tax = 702\n    weeks = 216\n    total_earn = earn * weeks\n    return total_earn - tax\nans = solver()", "answer": 3834.0}
{"question": "How many cards does Jeff have now?", "passage": "Nell collects baseball cards. She had 566 cards while Jeff had 234 cards. She gave some of her cards to Jeff and now has 535 cards left.", "executed": 31.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Nell collects baseball cards. She had 566 cards while Jeff had 234 cards. She gave some of her cards to Jeff and now has 535 cards left. How many cards does Jeff have now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    Nell_cards = 566\n    Jeff_cards = 234\n    Nell_cards_left = 535\n    # We can also define the unknown variable:\n    Jeff_cards_now = 0\n    # Now we can use the given information to derive the answer:\n    Jeff_cards_now = Nell_cards - Nell_cards_left\n    return Jeff_cards_now\nans = solver()", "answer": 265.0}
{"question": "How many groups will be created?", "passage": "Rebecca wants to split a collection of marbles into groups of 4. Rebecca has 10 eggs and 20 marbles.", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rebecca wants to split a collection of marbles into groups of 4. Rebecca has 10 eggs and 20 marbles. How many groups will be created?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    eggs = 10\n    marbles = 20\n    group_size = 4\n    # Now, we can calculate the number of groups:\n    groups = marbles / group_size\n    return groups\nans = solver()", "answer": 5.0}
{"question": "How many crackers did Matthew give to his friends?", "passage": "Matthew had 31 crackers. He has 23 crackers left after he gave equal numbers of crackers to his 5 friends.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Matthew had 31 crackers. He has 23 crackers left after he gave equal numbers of crackers to his 5 friends. How many crackers did Matthew give to his friends?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   x: the number of crackers Matthew gave to his friends\n    #   y: the number of crackers Matthew has left\n    x = 0\n    y = 23\n    # We can also define the constant:\n    #   z: the number of crackers Matthew had\n    z = 31\n    # Now, we can write the equation:\n    #   z = x + y\n    #   z - y = x\n    x = z - y\n    return x\nans = solver()", "answer": 8.0}
{"question": "How many shirts did machine make today?", "passage": "An industrial machine can make 6 shirts a minute. It worked for 5 minutes yesterday and for 12 minutes today.", "executed": 72.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: An industrial machine can make 6 shirts a minute. It worked for 5 minutes yesterday and for 12 minutes today. How many shirts did machine make today?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    shirts_per_minute = 6\n    minutes_yesterday = 5\n    minutes_today = 12\n    shirts_yesterday = shirts_per_minute * minutes_yesterday\n    shirts_today = shirts_per_minute * minutes_today\n    return shirts_today\nans = solver()", "answer": 72.0}
{"question": "How much more did his dad's strawberries weigh than his?", "passage": "Marco and his dad went strawberry picking. Marco's strawberries weighed 10 pounds. If together their strawberries weighed 26 pounds.", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Marco and his dad went strawberry picking. Marco's strawberries weighed 10 pounds. If together their strawberries weighed 26 pounds. How much more did his dad's strawberries weigh than his?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marco_strawberries = 10\n    total_strawberries = 26\n    dad_strawberries = total_strawberries - marco_strawberries\n    return dad_strawberries - marco_strawberries\nans = solver()", "answer": 6.0}
{"question": "How many apples are still there on the tree?", "passage": "Rachel picked 4 apples from her tree. If the tree had 7 apples initially.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel picked 4 apples from her tree. If the tree had 7 apples initially. How many apples are still there on the tree?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # apples_picked = 4\n    # apples_initially = 7\n    apples_picked = 4\n    apples_initially = 7\n    # Now, we can calculate the apples_still_there by using the formula:\n    apples_still_there = apples_initially - apples_picked\n    return apples_still_there\nans = solver()", "answer": 3.0}
{"question": "How many apples did he use?", "passage": "After making some pies, chef had 2 apples left. Initially he had 43 apples.", "executed": 41.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: After making some pies, chef had 2 apples left. Initially he had 43 apples. How many apples did he use?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    apples_initially = 43\n    apples_left = 2\n    apples_used = apples_initially - apples_left\n    return apples_used\nans = solver()", "answer": 41.0}
{"question": "How many balloons did Allan and Jake have in the park?", "passage": "Allan brought 3 balloons and 20 balls while Jake brought 5 balloons and 59 balls to the park.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Allan brought 3 balloons and 20 balls while Jake brought 5 balloons and 59 balls to the park. How many balloons did Allan and Jake have in the park?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    allan_balloons = 3\n    allan_balls = 20\n    jake_balloons = 5\n    jake_balls = 59\n    total_balloons = allan_balloons + jake_balloons\n    total_balls = allan_balls + jake_balls\n    return total_balloons, total_balls\nans = solver()", "answer": 8.0}
{"question": "How much more money did she spend at the supermarket than she collected at the atm?", "passage": "There were 53 dollars in Olivia's wallet. She collected 91 more dollars from an atm. After she visited a supermarket there were 14 dollars left.", "executed": -77.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 53 dollars in Olivia's wallet. She collected 91 more dollars from an atm. After she visited a supermarket there were 14 dollars left. How much more money did she spend at the supermarket than she collected at the atm?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Olivia's wallet = 53\n    wallet = 53\n    # Collected from atm = 91\n    atm = 91\n    # Supermarket = 14\n    supermarket = 14\n    # The question is asking how much more money did she spend at the supermarket than she collected at the atm?\n    # So we can define the answer as:\n    answer = supermarket - atm\n    return answer\nans = solver()", "answer": 39.0}
{"question": "How many pencils did she place in each row?", "passage": "Faye was placing some pencils equally into 2 rows. If she had 6 pencils.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Faye was placing some pencils equally into 2 rows. If she had 6 pencils. How many pencils did she place in each row?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # pencils = 6\n    pencils = 6\n    # rows = 2\n    rows = 2\n    # pencils_in_each_row = ?\n    pencils_in_each_row = pencils / rows\n    return pencils_in_each_row\nans = solver()", "answer": 3.0}
{"question": "How many kids did she play with on tuesday?", "passage": "Julia played tag with 5 kids on monday. She played tag with some more kids on tuesday. If she played with a total of 15 kids.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Julia played tag with 5 kids on monday. She played tag with some more kids on tuesday. If she played with a total of 15 kids. How many kids did she play with on tuesday?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 5\n    tuesday = ?\n    total = 15\n    # Now, we can write the equation:\n    tuesday = total - monday\n    return tuesday\nans = solver()", "answer": 10.0}
{"question": "How many more bottle caps did danny find at the park than those he threw away?", "passage": "Danny collects bottle caps. He threw away 6 of the old ones at the park while he found 50 bottle caps new ones. Now he has 60 bottle caps in his collection.", "executed": 44.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Danny collects bottle caps. He threw away 6 of the old ones at the park while he found 50 bottle caps new ones. Now he has 60 bottle caps in his collection. How many more bottle caps did danny find at the park than those he threw away?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    old_caps = 6\n    new_caps = 50\n    total_caps = 60\n    # Now we can calculate the answer:\n    answer = new_caps - old_caps\n    return answer\nans = solver()", "answer": 44.0}
{"question": "How many cookies did Paco have left?", "passage": "Paco had 36 cookies. He gave 14 cookies to his friend and ate 10 cookies.", "executed": 12.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paco had 36 cookies. He gave 14 cookies to his friend and ate 10 cookies. How many cookies did Paco have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookies_paco_had = 36\n    cookies_paco_gave = 14\n    cookies_paco_ate = 10\n    cookies_paco_left = cookies_paco_had - cookies_paco_gave - cookies_paco_ate\n    return cookies_paco_left\nans = solver()", "answer": 12.0}
{"question": "How many more chairs than tables do they have?", "passage": "They decided to hold the party in their backyard. If they have 5 sets of tables and each set has 10 chairs.", "executed": 0.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: They decided to hold the party in their backyard. If they have 5 sets of tables and each set has 10 chairs. How many more chairs than tables do they have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    num_of_sets = 5\n    num_of_chairs_per_set = 10\n    num_of_tables_per_set = 10\n    num_of_chairs = num_of_sets * num_of_chairs_per_set\n    num_of_tables = num_of_sets * num_of_tables_per_set\n    num_of_extra_chairs = num_of_chairs - num_of_tables\n    return num_of_extra_chairs\nans = solver()", "answer": 45.0}
{"question": "How deep was the water?", "passage": "After resting they decided to go for a swim. The depth of the water is 16 times Ron's height. Dean is 9 feet taller than Ron. If Ron stands at 13 feet.", "executed": 208.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: After resting they decided to go for a swim. The depth of the water is 16 times Ron's height. Dean is 9 feet taller than Ron. If Ron stands at 13 feet. How deep was the water?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    ron_height = 13\n    dean_height = ron_height + 9\n    water_depth = 16 * ron_height\n    return water_depth\nans = solver()", "answer": 208.0}
{"question": "How many tomatoes and potatoes does he have left?", "passage": "A farmer had 177 tomatoes and 12 potatoes in his garden. If he picked 53 tomatoes.", "executed": 124.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A farmer had 177 tomatoes and 12 potatoes in his garden. If he picked 53 tomatoes. How many tomatoes and potatoes does he have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    tomatoes = 177\n    potatoes = 12\n    picked_tomatoes = 53\n    # Now, we can calculate the answer:\n    left_tomatoes = tomatoes - picked_tomatoes\n    left_potatoes = potatoes\n    return left_tomatoes, left_potatoes\nans = solver()", "answer": 136.0}
{"question": "How many more green peaches than red peaches are in the basket?", "passage": "7 red peaches, 71 yellow peaches and 8 green peaches are in the basket.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 7 red peaches, 71 yellow peaches and 8 green peaches are in the basket. How many more green peaches than red peaches are in the basket?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    red_peaches = 7\n    yellow_peaches = 71\n    green_peaches = 8\n    # Now, we can calculate the difference between green peaches and red peaches\n    difference = green_peaches - red_peaches\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many more campers went rowing in the afternoon than in the morning?", "passage": "52 campers went rowing in the morning. 61 campers went rowing in the afternoon.", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 52 campers went rowing in the morning. 61 campers went rowing in the afternoon. How many more campers went rowing in the afternoon than in the morning?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning_campers = 52\n    afternoon_campers = 61\n    # Now, we can calculate the difference between the two variables:\n    difference = afternoon_campers - morning_campers\n    return difference\nans = solver()", "answer": 9.0}
{"question": "How many roses did she cut?", "passage": "There were 13 roses and 84 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now 91 orchids and 14 roses in the vase.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 13 roses and 84 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now 91 orchids and 14 roses in the vase. How many roses did she cut?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    roses_before = 13\n    orchids_before = 84\n    roses_after = 14\n    orchids_after = 91\n    roses_cut = 0\n    orchids_cut = 0\n    # Now, we can calculate the number of roses and orchids cut by Jessica\n    roses_cut = roses_after - roses_before\n    orchids_cut = orchids_after - orchids_before\n    return roses_cut\nans = solver()", "answer": 1.0}
{"question": "How many bottles had she bought?", "passage": "Debby bought some water bottles when they were on sale. She drank 109 bottles a day. If the bottles lasted for 74 days.", "executed": 8066.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Debby bought some water bottles when they were on sale. She drank 109 bottles a day. If the bottles lasted for 74 days. How many bottles had she bought?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bottles_per_day = 109\n    days = 74\n    # We can also define the unknown variable:\n    bottles_bought = 0\n    # Now, we can calculate the answer:\n    bottles_bought = bottles_per_day * days\n    return bottles_bought\nans = solver()", "answer": 8066.0}
{"question": "How much did each book cost?", "passage": "Edward spent $ 6 to buy 2 books each book costing him the same amount of money. Now he has $ 12.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Edward spent $ 6 to buy 2 books each book costing him the same amount of money. Now he has $ 12. How much did each book cost?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x: the price of each book\n    # y: the number of books\n    # z: the amount of money Edward has\n    x = 0\n    y = 0\n    z = 0\n    # Now we can define the equations:\n    # x * y = 6\n    # x * 2 = 12\n    # z = 12\n    # We can solve the equations by using the following code:\n    x = 6 / 2\n    y = 6 / x\n    z = 12\n    return x, y, z\nans = solver()", "answer": 3.0}
{"question": "How many pieces does Robin have?", "passage": "Robin has 28 packages of gum and 14 packages of candy. There are 6 pieces in each package.", "executed": 252.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Robin has 28 packages of gum and 14 packages of candy. There are 6 pieces in each package. How many pieces does Robin have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    gum_package = 28\n    candy_package = 14\n    pieces_per_package = 6\n    # Now, we can calculate the total pieces of gum and candy:\n    gum_pieces = gum_package * pieces_per_package\n    candy_pieces = candy_package * pieces_per_package\n    # Finally, we can calculate the total pieces:\n    total_pieces = gum_pieces + candy_pieces\n    return total_pieces\nans = solver()", "answer": 7.0}
{"question": "How many more movies than books are there in the ' crazy silly school ' series?", "passage": "There are 17 different movies and 11 different books in the ' crazy silly school ' series. If you read 13 of the books and watched 63 of the movies.", "executed": 56.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 17 different movies and 11 different books in the ' crazy silly school ' series. If you read 13 of the books and watched 63 of the movies. How many more movies than books are there in the ' crazy silly school ' series?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    movies = 17\n    books = 11\n    watched_movies = 63\n    read_books = 13\n    # Now, we can calculate the number of movies and books in the ' crazy silly school ' series:\n    total_movies = movies + watched_movies\n    total_books = books + read_books\n    # Now, we can calculate the difference between the number of movies and books in the ' crazy silly school ' series:\n    difference = total_movies - total_books\n    return difference\nans = solver()", "answer": 6.0}
{"question": "How many emails did Jack receive in the morning and afternoon?", "passage": "Jack received 5 emails in the morning, 8 emails in the afternoon and 72 emails in the evening.", "executed": 13.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jack received 5 emails in the morning, 8 emails in the afternoon and 72 emails in the evening. How many emails did Jack receive in the morning and afternoon?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning = 5\n    afternoon = 8\n    evening = 72\n    # Now, we can calculate the answer:\n    answer = morning + afternoon\n    return answer\nans = solver()", "answer": 13.0}
{"question": "How many blocks are left?", "passage": "Randy uses 36 blocks to build a tower. If he had 59 blocks.", "executed": 23.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Randy uses 36 blocks to build a tower. If he had 59 blocks. How many blocks are left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    blocks_used = 36\n    blocks_total = 59\n    blocks_left = blocks_total - blocks_used\n    return blocks_left\nans = solver()", "answer": 23.0}
{"question": "How much did marco's strawberries weigh?", "passage": "Marco and his dad went strawberry picking. Together their strawberries weighed 20 pounds. His dad's strawberries weighed 17 pounds.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Marco and his dad went strawberry picking. Together their strawberries weighed 20 pounds. His dad's strawberries weighed 17 pounds. How much did marco's strawberries weigh?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marco_strawberries = 0\n    dad_strawberries = 0\n    total_strawberries = 20\n    dad_strawberries = 17\n    marco_strawberries = total_strawberries - dad_strawberries\n    return marco_strawberries\nans = solver()", "answer": 3.0}
{"question": "How many trees does she have left?", "passage": "Haley grew 9 trees in her backyard. After a typhoon 4 died. Then she grew 5 more trees.", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Haley grew 9 trees in her backyard. After a typhoon 4 died. Then she grew 5 more trees. How many trees does she have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    num_trees_grown = 9\n    num_trees_died = 4\n    num_trees_grown_again = 5\n    num_trees_left = num_trees_grown - num_trees_died + num_trees_grown_again\n    return num_trees_left\nans = solver()", "answer": 10.0}
{"question": "How many goldfish disappeared?", "passage": "Stray cats loved eating goldfish in the pond leaving 6 goldfish. Paige had raised 8 goldfish in the pond initially.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Stray cats loved eating goldfish in the pond leaving 6 goldfish. Paige had raised 8 goldfish in the pond initially. How many goldfish disappeared?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   x: the number of goldfish disappeared\n    #   y: the number of goldfish left\n    x = 0\n    y = 0\n    # Now, we can write the equations:\n    #   x + y = 8\n    #   y = 6\n    x = 8 - 6\n    y = 6\n    return x\nans = solver()", "answer": 2.0}
{"question": "How many more bottle caps than wrappers does danny have now?", "passage": "Danny collects bottle caps and wrappers. He found 58 bottle caps and 25 wrappers at the park. Now he has 11 wrappers and 12 bottle caps in his collection.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Danny collects bottle caps and wrappers. He found 58 bottle caps and 25 wrappers at the park. Now he has 11 wrappers and 12 bottle caps in his collection. How many more bottle caps than wrappers does danny have now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bottle_caps = 58\n    wrappers = 25\n    bottle_caps_now = 12\n    wrappers_now = 11\n    # Now we can calculate the difference between the bottle caps and wrappers\n    bottle_caps_diff = bottle_caps - bottle_caps_now\n    wrappers_diff = wrappers - wrappers_now\n    # Now we can calculate the difference between the bottle caps and wrappers\n    bottle_caps_diff = bottle_caps - bottle_caps_now\n    wrappers_diff = wrappers - wrappers_now\n    # Now we can calculate the difference between the bottle caps and wrappers\n    bottle_caps_diff = bottle_caps - bottle_caps_now\n    wrappers_diff = wrappers - wrappers_now\n    # Now we can calculate the difference between the bottle caps and wrappers\n    bottle_caps_diff = bottle_caps - bottle_caps_now\n    wrappers_diff = wrappers - wrappers_now\n    # Now we can calculate the difference between the bottle caps and wrappers\n    bottle_caps_diff = bottle_caps - bottle_caps_now\n    wrappers_diff = wrappers - wrappers_now\n    # Now we can calculate the difference between the bottle caps and wrappers\n    bottle_caps_diff = bottle_caps - bottle_caps_now\n    wrappers_diff = wrappers - wrappers_now\n    # Now we can calculate the difference between the bottle caps and wrappers\n    bottle_caps_diff = bottle_caps -\nans = solver()", "answer": 1.0}
{"question": "How many more cups of flour than cups of sugar does she need to add now?", "passage": "Mary is baking a cake. The recipe calls for 9 cups of flour and 6 cups of sugar. She already put in 4 cups of sugar.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 9 cups of flour and 6 cups of sugar. She already put in 4 cups of sugar. How many more cups of flour than cups of sugar does she need to add now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    flour = 9\n    sugar = 6\n    sugar_added = 4\n    # Now, we can calculate the answer:\n    flour_added = flour - sugar_added\n    sugar_needed = sugar - sugar_added\n    answer = flour_added - sugar_needed\n    return answer\nans = solver()", "answer": 7.0}
{"question": "How many tiles does she need to cover the whole floor?", "passage": "Jesse's room is 2 feet long and 12 feet wide. If each tile is of size 4 square feet.", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jesse's room is 2 feet long and 12 feet wide. If each tile is of size 4 square feet. How many tiles does she need to cover the whole floor?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    length = 2\n    width = 12\n    tile_size = 4\n    # Now, we can calculate the area of the room:\n    area = length * width\n    # Now, we can calculate the number of tiles needed:\n    num_tiles = area / tile_size\n    return num_tiles\nans = solver()", "answer": 6.0}
{"question": "How many shirts did machine make altogether?", "passage": "An industrial machine can make 6 shirts a minute. It worked for 12 minutes yesterday and for 14 shirts today.", "executed": 86.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: An industrial machine can make 6 shirts a minute. It worked for 12 minutes yesterday and for 14 shirts today. How many shirts did machine make altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    shirts_per_minute = 6\n    minutes_yesterday = 12\n    shirts_today = 14\n    # Now, we can calculate the total shirts made by the machine:\n    total_shirts = shirts_per_minute * minutes_yesterday + shirts_today\n    return total_shirts\nans = solver()", "answer": 156.0}
{"question": "How many salty cookies did Paco have left?", "passage": "Paco had 9 sweet cookies and 6 salty cookies. He ate 36 sweet cookies and 3 salty cookies.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paco had 9 sweet cookies and 6 salty cookies. He ate 36 sweet cookies and 3 salty cookies. How many salty cookies did Paco have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sweet_cookies = 9\n    salty_cookies = 6\n    eaten_sweet_cookies = 36\n    eaten_salty_cookies = 3\n    # Now, we can calculate the answer:\n    left_salty_cookies = salty_cookies - eaten_salty_cookies\n    return left_salty_cookies\nans = solver()", "answer": 3.0}
{"question": "How long was his hair before he cut?", "passage": "Robin cut off 20 inches of his hair. If his hair is now 10 inches long.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Robin cut off 20 inches of his hair. If his hair is now 10 inches long. How long was his hair before he cut?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # hair_before_cut = ?\n    # hair_after_cut = 10\n    # hair_cut = 20\n    hair_before_cut = hair_after_cut + hair_cut\n    return hair_before_cut\nans = solver()", "answer": 30.0}
{"question": "How far did the frog jump?", "passage": "The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped 36 inches. The frog jumped 17 inches farther than the grasshopper and the mouse jumped 15 inches farther than the frog.", "executed": 53.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped 36 inches. The frog jumped 17 inches farther than the grasshopper and the mouse jumped 15 inches farther than the frog. How far did the frog jump?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    grasshopper = 36\n    frog = grasshopper + 17\n    mouse = frog + 15\n    return frog\nans = solver()", "answer": 53.0}
{"question": "How many pieces of gum does Robin have?", "passage": "Robin has 28 packages of gum and 13 packages of candy. There are 4 pieces in each package.", "executed": 164.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Robin has 28 packages of gum and 13 packages of candy. There are 4 pieces in each package. How many pieces of gum does Robin have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    gum_package = 28\n    candy_package = 13\n    pieces_per_package = 4\n    # Now, we can calculate the total pieces of gum and candy:\n    gum_pieces = gum_package * pieces_per_package\n    candy_pieces = candy_package * pieces_per_package\n    # Finally, we can calculate the total pieces of gum:\n    total_pieces = gum_pieces + candy_pieces\n    return total_pieces\nans = solver()", "answer": 112.0}
{"question": "How many more cakes than pastries did baker sell?", "passage": "Baker made 157 cakes and 169 pastries. If he sold 158 cakes and 147 pastries.", "executed": 23.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 157 cakes and 169 pastries. If he sold 158 cakes and 147 pastries. How many more cakes than pastries did baker sell?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cakes = 157\n    pastries = 169\n    sold_cakes = 158\n    sold_pastries = 147\n    # Now, we can calculate the difference between the cakes and pastries sold:\n    cakes_sold = sold_cakes - cakes\n    pastries_sold = sold_pastries - pastries\n    # Finally, we can calculate the difference between the cakes and pastries sold:\n    difference = cakes_sold - pastries_sold\n    return difference\nans = solver()", "answer": 11.0}
{"question": "How many pupils are there in that school?", "passage": "In a school there are 868 girls and the rest are boys. If there are 281 more girls than boys.", "executed": 1455.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In a school there are 868 girls and the rest are boys. If there are 281 more girls than boys. How many pupils are there in that school?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    girls = 868\n    boys = 0\n    total = 0\n    # Now we can use the given information to derive the answer\n    boys = girls - 281\n    total = girls + boys\n    return total\nans = solver()", "answer": 1455.0}
{"question": "How many push-ups did Zachary and David do altogether?", "passage": "David did 51 push-ups in gym class today. David did 49 more push-ups than Zachary.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: David did 51 push-ups in gym class today. David did 49 more push-ups than Zachary. How many push-ups did Zachary and David do altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    zachary = 0\n    david = 51\n    # We can also define the equation:\n    equation = zachary + david == 100\n    # Now, we can use the equation to solve for zachary:\n    zachary = sympy.solve(equation, zachary)[0]\n    return zachary\nans = solver()", "answer": 53.0}
{"question": "How many more bird families stayed behind than those that flew away for the winter?", "passage": "Winter is almost here and most animals are migrating to warmer countries. There were 87 bird families living near the mountain. If 7 bird families flew away for winter.", "executed": 80.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Winter is almost here and most animals are migrating to warmer countries. There were 87 bird families living near the mountain. If 7 bird families flew away for winter. How many more bird families stayed behind than those that flew away for the winter?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    bird_families_living_near_mountain = 87\n    bird_families_flew_away_for_winter = 7\n    bird_families_stayed_behind = bird_families_living_near_mountain - bird_families_flew_away_for_winter\n    return bird_families_stayed_behind\nans = solver()", "answer": 73.0}
{"question": "How many boys are there in that school?", "passage": "A school has 485 pupils. There are 232 girls and the rest are boys.", "executed": 253.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A school has 485 pupils. There are 232 girls and the rest are boys. How many boys are there in that school?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    girls = 232\n    pupils = 485\n    boys = pupils - girls\n    return boys\nans = solver()", "answer": 253.0}
{"question": "How many more pastries than cakes did baker make?", "passage": "Baker made 134 pastries and 11 cakes. If he sold 140 cakes and 92 pastries.", "executed": 92.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 134 pastries and 11 cakes. If he sold 140 cakes and 92 pastries. How many more pastries than cakes did baker make?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # p = pastries, c = cakes\n    # p + c = 134\n    # p - c = 92\n    # We can solve the above two equations to get the answer\n    p = (134 + 92) / 2\n    c = (134 - 92) / 2\n    return p - c\nans = solver()", "answer": 123.0}
{"question": "How many cards did Nell give to Jeff?", "passage": "Nell collects baseball cards. She had 528 cards while Jeff had 11 cards. She gave some of her cards to jeff and now has 252 cards left.", "executed": 276.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Nell collects baseball cards. She had 528 cards while Jeff had 11 cards. She gave some of her cards to jeff and now has 252 cards left. How many cards did Nell give to Jeff?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    Nell_cards = 528\n    Jeff_cards = 11\n    Nell_cards_left = 252\n    # Now we can calculate the number of cards Nell gave to Jeff:\n    Jeff_cards_gained = Nell_cards - Nell_cards_left\n    return Jeff_cards_gained\nans = solver()", "answer": 276.0}
{"question": "How many buses are needed to take the trip?", "passage": "The school is planning a field trip. The school has 66 classrooms. There are 102 students in the school and 8 seats on each school bus. If 22 students do n't want to go for the trip.", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school is planning a field trip. The school has 66 classrooms. There are 102 students in the school and 8 seats on each school bus. If 22 students do n't want to go for the trip. How many buses are needed to take the trip?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    classrooms = 66\n    students = 102\n    seats = 8\n    not_going = 22\n    # Now, we can calculate the number of students going for the trip:\n    going = students - not_going\n    # Now, we can calculate the number of buses needed:\n    buses = math.ceil(going / seats)\n    return buses\nans = solver()", "answer": 10.0}
{"question": "How many seats does the Ferris wheel have?", "passage": "4 people can ride the Ferris wheel in paradise park at the same time. If each seat on the Ferris wheel can hold 2 people.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 4 people can ride the Ferris wheel in paradise park at the same time. If each seat on the Ferris wheel can hold 2 people. How many seats does the Ferris wheel have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    people = 4\n    seat_capacity = 2\n    seats = people / seat_capacity\n    return seats\nans = solver()", "answer": 2.0}
{"question": "How many more apps than files does he have left on the phone?", "passage": "Dave had 24 apps and 9 files on his phone. After deleting some apps and files he had 5 files and 12 apps left.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dave had 24 apps and 9 files on his phone. After deleting some apps and files he had 5 files and 12 apps left. How many more apps than files does he have left on the phone?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    apps = 24\n    files = 9\n    apps_left = 12\n    files_left = 5\n    apps_deleted = apps - apps_left\n    files_deleted = files - files_left\n    apps_more = apps_left - files_left\n    return apps_more\nans = solver()", "answer": 7.0}
{"question": "How many more campers went rowing in the morning than in the afternoon?", "passage": "44 campers went rowing in the morning 39 campers went rowing in the afternoon and 31 campers went rowing in the evening.", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 44 campers went rowing in the morning 39 campers went rowing in the afternoon and 31 campers went rowing in the evening. How many more campers went rowing in the morning than in the afternoon?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning = 44\n    afternoon = 39\n    evening = 31\n    # Now, we can calculate the difference between the morning and the afternoon\n    difference = morning - afternoon\n    return difference\nans = solver()", "answer": 5.0}
{"question": "How many pages are in each chapter?", "passage": "Frank was reading through his favorite book. The book had 3 chapters, each with the same number of pages. It has a total of 594 pages. It took Frank 607 days to finish the book.", "executed": 198.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank was reading through his favorite book. The book had 3 chapters, each with the same number of pages. It has a total of 594 pages. It took Frank 607 days to finish the book. How many pages are in each chapter?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   - number of chapters: n_chapters\n    #   - number of pages in each chapter: n_pages\n    #   - number of days to finish the book: n_days\n    #   - total number of pages: n_total_pages\n    n_chapters = 3\n    n_pages = None\n    n_days = 607\n    n_total_pages = 594\n    # Now, we can use the information to derive the answer\n    n_pages = n_total_pages / n_chapters\n    return n_pages\nans = solver()", "answer": 198.0}
{"question": "How much more carpet does she need to cover the whole floor?", "passage": "Jesse has 18 square feet of carpet. If her room is 4 feet long and 20 feet wide.", "executed": 62.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jesse has 18 square feet of carpet. If her room is 4 feet long and 20 feet wide. How much more carpet does she need to cover the whole floor?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    carpet_area = 18\n    room_length = 4\n    room_width = 20\n    # Now, we can calculate the area of the room:\n    room_area = room_length * room_width\n    # Now, we can calculate the difference between the room area and the carpet area:\n    area_difference = room_area - carpet_area\n    return area_difference\nans = solver()", "answer": 62.0}
{"question": "How many books are there in the ' crazy silly school ' series?", "passage": "There are many different books in the ' crazy silly school ' series. If you have read 13 of the books and are yet to read 8 books.", "executed": 21.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are many different books in the ' crazy silly school ' series. If you have read 13 of the books and are yet to read 8 books. How many books are there in the ' crazy silly school ' series?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    read = 13\n    unread = 8\n    total = read + unread\n    return total\nans = solver()", "answer": 21.0}
{"question": "How many more baseball cards than Ace cards does Nell have?", "passage": "Nell collects cards. She had 438 baseball cards and 18 Ace cards. She gave some of her cards to Jeff and now has 55 Ace cards and 178 baseball cards left.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Nell collects cards. She had 438 baseball cards and 18 Ace cards. She gave some of her cards to Jeff and now has 55 Ace cards and 178 baseball cards left. How many more baseball cards than Ace cards does Nell have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Nell's baseball cards: x\n    # Nell's Ace cards: y\n    # Jeff's baseball cards: z\n    # Jeff's Ace cards: w\n    # Then we can get the equations:\n    # x + z = 438\n    # y + w = 18\n    # x - y = 178\n    # y - w = 55\n    # We can solve the equations by using the Gaussian elimination method.\n    # First, we can get the equation:\n    # x + z = 438\n    # y + w = 18\n    # x - y = 178\n    # y - w = 55\n    # Then we can get the equation:\n    # x + z = 438\n    # y + w = 18\n    # x - y = 178\n    # y - w = 55\n    # Then we can get the equation:\n    # x + z = 438\n    # y + w = 18\n    # x - y = 178\n    # y - w = 55\n    # Then we can get the equation:\n    # x + z = 438\n    # y + w = 18\n    # x - y = 178\n    # y - w = 55\n    # Then we can get the equation:\n    # x + z = 438\n    # y + w = 18\n    # x - y = 178\n    # y - w = 55\n    # Then we can get the equation:\n    # x + z = 438\n    # y + w = 18\nans = solver()", "answer": 123.0}
{"question": "How many crackers did Matthew give to his friends?", "passage": "Matthew had 24 crackers. If Matthew gave equal numbers of crackers to his 3 friends and still had 17 crackers left.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Matthew had 24 crackers. If Matthew gave equal numbers of crackers to his 3 friends and still had 17 crackers left. How many crackers did Matthew give to his friends?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # Matthew's crackers = x\n    # Matthew's friends = y\n    # Matthew's crackers left = z\n    x = 24\n    y = 3\n    z = 17\n    # We can also define the equation:\n    # x = y * z\n    x = y * z\n    # We can also define the equation:\n    # x = y * z\n    x = y * z\n    # We can also define the equation:\n    # x = y * z\n    x = y * z\n    # We can also define the equation:\n    # x = y * z\n    x = y * z\n    # We can also define the equation:\n    # x = y * z\n    x = y * z\n    # We can also define the equation:\n    # x = y * z\n    x = y * z\n    # We can also define the equation:\n    # x = y * z\n    x = y * z\n    # We can also define the equation:\n    # x = y * z\n    x = y * z\n    # We can also define the equation:\n    # x = y * z\n    x = y * z\n    # We can also define the equation:\n    # x = y * z\n    x = y * z\n    # We can also define the equation:\n    # x = y * z\n    x = y * z\n    # We can also define the equation:\n    # x = y * z\n    x = y\nans = solver()", "answer": 7.0}
{"question": "How much farther did the grasshopper jump than the mouse?", "passage": "The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped 21 inches. The grasshopper jumped 25 inches farther than the frog and the mouse jumped 16 inches lesser than the frog.", "executed": 41.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped 21 inches. The grasshopper jumped 25 inches farther than the frog and the mouse jumped 16 inches lesser than the frog. How much farther did the grasshopper jump than the mouse?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    grasshopper = 21\n    frog = grasshopper - 25\n    mouse = frog - 16\n    return grasshopper - mouse\nans = solver()", "answer": 41.0}
{"question": "How many chairs are left unoccupied?", "passage": "They decided to hold the party in their backyard. They have 10 sets of tables and each set has 6 chairs. If there are 11 people sitting on chairs.", "executed": 49.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: They decided to hold the party in their backyard. They have 10 sets of tables and each set has 6 chairs. If there are 11 people sitting on chairs. How many chairs are left unoccupied?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    num_of_sets = 10\n    num_of_chairs = 6\n    num_of_people = 11\n    num_of_chairs_occupied = num_of_people\n    num_of_chairs_unoccupied = num_of_sets * num_of_chairs - num_of_chairs_occupied\n    return num_of_chairs_unoccupied\nans = solver()", "answer": 49.0}
{"question": "How many visited the Buckingham palace within the past 89 days?", "passage": "After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that 512 visitors came to the Buckingham palace that day. If there were 471 visitors the previous day and 808 visitors the day before that.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that 512 visitors came to the Buckingham palace that day. If there were 471 visitors the previous day and 808 visitors the day before that. How many visited the Buckingham palace within the past 89 days?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   a = number of visitors on the first day\n    #   d = difference between the number of visitors on consecutive days\n    #   n = number of days\n    #   s = sum of the number of visitors on all days\n    #   s = a + (a + d) + (a + 2d) + ... + (a + (n - 1)d)\n    #   s = n * a + d * (n - 1) * n / 2\n    #   s = n * (a + d * (n - 1) / 2)\n    #   s = n * (a + d * (n - 1) / 2)\n    #   s = n * (a + d * (n - 1) / 2)\n    #   s = n * (a + d * (n - 1) / 2)\n    #   s = n * (a + d * (n - 1) / 2)\n    #   s = n * (a + d * (n - 1) / 2)\n    #   s = n * (a + d * (n - 1) / 2)\n    #   s = n * (a + d * (n - 1) / 2)\n    #   s = n * (a + d * (n - 1) / 2)\n    #   s = n * (a + d * (n - 1) / 2)\n    #   s = n * (a + d * (n - 1) / 2)\n    #\nans = solver()", "answer": 1791.0}
{"question": "How many more sacks of ripe oranges than unripe oranges are harvested per day?", "passage": "He then went to see the oranges being harvested. He found out that they harvest 44 sacks of ripe oranges and 25 sacks of unripe oranges per day.", "executed": 19.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: He then went to see the oranges being harvested. He found out that they harvest 44 sacks of ripe oranges and 25 sacks of unripe oranges per day. How many more sacks of ripe oranges than unripe oranges are harvested per day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    ripe_oranges = 44\n    unripe_oranges = 25\n    # Now, we can calculate the difference between the ripe and unripe oranges\n    difference = ripe_oranges - unripe_oranges\n    return difference\nans = solver()", "answer": 19.0}
{"question": "How many white t - shirts will she have?", "passage": "White t - shirts can be purchased in packages of 53. If mom buys 57 packages of white t - shirts and 34 trousers.", "executed": 3021.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: White t - shirts can be purchased in packages of 53. If mom buys 57 packages of white t - shirts and 34 trousers. How many white t - shirts will she have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    white_t_shirts_per_package = 53\n    trousers_per_package = 34\n    white_t_shirts_packages = 57\n    trousers_packages = 34\n    white_t_shirts_total = white_t_shirts_per_package * white_t_shirts_packages\n    trousers_total = trousers_per_package * trousers_packages\n    return white_t_shirts_total\nans = solver()", "answer": 3021.0}
{"question": "How many books did he sell?", "passage": "Paul had 2 books. After selling some in a garage sale he bought 150 new ones. If he has 58 books now.", "executed": -92.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul had 2 books. After selling some in a garage sale he bought 150 new ones. If he has 58 books now. How many books did he sell?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of books sold\n    # y = number of books bought\n    # z = number of books now\n    # Then we can write the equations:\n    # x + y = z\n    # x + 150 = 58\n    # x = 58 - 150\n    # x = -92\n    return -92\nans = solver()", "answer": 94.0}
{"question": "How many more storks than birds are sitting on the fence?", "passage": "6 storks and 2 birds were sitting on the fence. 3 more birds came to join them.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 6 storks and 2 birds were sitting on the fence. 3 more birds came to join them. How many more storks than birds are sitting on the fence?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    storks = 6\n    birds = 2\n    more_birds = 3\n    # Now, we can calculate the total number of birds and storks on the fence:\n    total_birds = birds + more_birds\n    total_storks = storks\n    # Now, we can calculate the difference between the total number of storks and birds:\n    difference = total_storks - total_birds\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many books does he have in total?", "passage": "Bryan took a look at his books and magazines. If he has 27 books and 80 magazines in each of his 23 bookshelves.", "executed": 621.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bryan took a look at his books and magazines. If he has 27 books and 80 magazines in each of his 23 bookshelves. How many books does he have in total?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    books = 27\n    magazines = 80\n    bookshelves = 23\n    total_books = books * bookshelves\n    return total_books\nans = solver()", "answer": 621.0}
{"question": "How many more crayons than erasers did he have left?", "passage": "Paul got a box of 531 crayons and 38 erasers for his birthday. At the end of the school year he only had 391 left while not having lost a single erasers.", "executed": 353.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul got a box of 531 crayons and 38 erasers for his birthday. At the end of the school year he only had 391 left while not having lost a single erasers. How many more crayons than erasers did he have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    crayons = 531\n    erasers = 38\n    crayons_left = 391\n    erasers_left = 38\n    crayons_lost = crayons - crayons_left\n    erasers_lost = erasers - erasers_left\n    crayons_more_than_erasers = crayons_left - erasers_left\n    return crayons_more_than_erasers\nans = solver()", "answer": 353.0}
{"question": "How many weeks did the harvest last?", "passage": "Lewis earns a total of $ 1216 during the harvest. If he earns $ 16 each week.", "executed": 76.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Lewis earns a total of $ 1216 during the harvest. If he earns $ 16 each week. How many weeks did the harvest last?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    total_earning = 1216\n    weekly_earning = 16\n    # Now, we can calculate the number of weeks by dividing the total_earning by weekly_earning\n    number_of_weeks = total_earning / weekly_earning\n    return number_of_weeks\nans = solver()", "answer": 76.0}
{"question": "How many apps did he delete?", "passage": "Dave had 10 apps on his phone. He added 11 new apps. After deleting some he had 4 left.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dave had 10 apps on his phone. He added 11 new apps. After deleting some he had 4 left. How many apps did he delete?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of apps Dave had on his phone\n    # y = number of apps Dave added\n    # z = number of apps Dave deleted\n    # x + y - z = 4\n    # x + y = z + 4\n    # x + y = 4 + z\n    # x + y - 4 = z\n    # x + y - 4 is the answer\n    return x + y - 4\nans = solver()", "answer": 17.0}
{"question": "How much did they make per day?", "passage": "The ring toss game at the carnival made the same amount of money each day. In total in 5 days they earned 165 dollars.", "executed": 33.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The ring toss game at the carnival made the same amount of money each day. In total in 5 days they earned 165 dollars. How much did they make per day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = the amount of money they made per day\n    # y = the total amount of money they made in 5 days\n    # z = the total amount of money they made in 5 days\n    x = 165 / 5\n    y = 165\n    z = 165\n    return x, y, z\nans = solver()", "answer": 33.0}
{"question": "How many more roses than orchids are there in the vase now?", "passage": "There were 5 roses and 3 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now 12 roses and 2 orchids in the vase.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 5 roses and 3 orchids in the vase. Jessica cut some more roses and orchids from her flower garden. There are now 12 roses and 2 orchids in the vase. How many more roses than orchids are there in the vase now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of roses in the vase before Jessica cut more flowers\n    # y = number of orchids in the vase before Jessica cut more flowers\n    # z = number of roses in the vase after Jessica cut more flowers\n    # w = number of orchids in the vase after Jessica cut more flowers\n    # We can also define the following equations:\n    # x + y = 5\n    # z + w = 12\n    # w = 2\n    # We can also define the following equation:\n    # z - w = ?\n    # We can solve the above equations to get the answer:\n    x = 5 - 3\n    z = 12 - 2\n    answer = z - x\n    return answer\nans = solver()", "answer": 10.0}
{"question": "How many seats does the Ferris wheel have?", "passage": "The Ferris wheel in paradise park has some seats. Each seat can hold 9 people. If 18 people can ride the wheel at the same time.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The Ferris wheel in paradise park has some seats. Each seat can hold 9 people. If 18 people can ride the wheel at the same time. How many seats does the Ferris wheel have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    people_per_seat = 9\n    people_per_ride = 18\n    # Now, we can calculate the number of seats:\n    number_of_seats = people_per_ride / people_per_seat\n    return number_of_seats\nans = solver()", "answer": 2.0}
{"question": "How many apps did he have on his phone at the start?", "passage": "Dave had some apps on his phone. After deleting 18 of them he had 5 left.", "executed": 23.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dave had some apps on his phone. After deleting 18 of them he had 5 left. How many apps did he have on his phone at the start?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of apps at the start\n    # y = number of apps after deleting 18 of them\n    # x - 18 = y\n    # x - 18 = 5\n    # x = 23\n    return 23\nans = solver()", "answer": 23.0}
{"question": "How many more books than movies are there in the ' crazy silly school ' series?", "passage": "There are 14 different movies and 15 different books in the ' crazy silly school ' series. If you read 11 of the books and watched 40 of the movies.", "executed": 30.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 14 different movies and 15 different books in the ' crazy silly school ' series. If you read 11 of the books and watched 40 of the movies. How many more books than movies are there in the ' crazy silly school ' series?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    books = 15\n    movies = 14\n    read_books = 11\n    watched_movies = 40\n    # Now, we can calculate the number of books and movies in the ' crazy silly school ' series:\n    total_books = books - read_books\n    total_movies = movies - watched_movies\n    # Finally, we can calculate the number of more books than movies:\n    more_books = total_books - total_movies\n    return more_books\nans = solver()", "answer": 1.0}
{"question": "How many more blocks did he use to build the house than he did to build the tower?", "passage": "Randy has 86 blocks. He uses 79 blocks to build a tower and 82 blocks to build a house.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Randy has 86 blocks. He uses 79 blocks to build a tower and 82 blocks to build a house. How many more blocks did he use to build the house than he did to build the tower?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    tower = 79\n    house = 82\n    blocks = 86\n    # Now, we can calculate the answer:\n    answer = house - tower\n    return answer\nans = solver()", "answer": 3.0}
{"question": "How much does each pack cost?", "passage": "With 28 dollars 2 packs of dvds can be bought.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: With 28 dollars 2 packs of dvds can be bought. How much does each pack cost?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # dvds_pack_1 = ?\n    # dvds_pack_2 = ?\n    # total_dvds = ?\n    # total_cost = ?\n    #\n    # Step 1:\n    # total_dvds = dvds_pack_1 + dvds_pack_2\n    #\n    # Step 2:\n    # total_cost = dvds_pack_1 + dvds_pack_2\n    #\n    # Step 3:\n    # total_cost = 28\n    #\n    # Step 4:\n    # total_dvds = dvds_pack_1 + dvds_pack_2\n    # total_cost = dvds_pack_1 + dvds_pack_2\n    #\n    # Step 5:\n    # total_dvds = dvds_pack_1 + dvds_pack_2\n    # total_cost = 28\n    #\n    # Step 6:\n    # total_dvds = dvds_pack_1 + dvds_pack_2\n    # total_cost = 28\n    #\n    # Step 7:\n    # total_dvds = dvds_pack_1 + dvds_pack_2\n    # total_cost = 28\n    #\n    # Step 8:\n    # total_dvds = dvds_pack_1 + dvds_pack_2\n    # total_cost\nans = solver()", "answer": 14.0}
{"question": "How much money did Jason earn by delivering newspapers?", "passage": "Last week Fred had 78 dollars and Jason had 31 dollars. Jason delivered newspapers and now has 57 dollars. Fred washed cars over the weekend and now has 90 dollars.", "executed": 26.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Last week Fred had 78 dollars and Jason had 31 dollars. Jason delivered newspapers and now has 57 dollars. Fred washed cars over the weekend and now has 90 dollars. How much money did Jason earn by delivering newspapers?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    fred_before = 78\n    jason_before = 31\n    fred_after = 90\n    jason_after = 57\n    # Now we can calculate the difference between the before and after values for each person\n    fred_diff = fred_after - fred_before\n    jason_diff = jason_after - jason_before\n    # Now we can calculate the total difference between the before and after values\n    total_diff = fred_diff + jason_diff\n    # Now we can calculate the difference between the total difference and the difference for Fred\n    jason_diff_final = total_diff - fred_diff\n    return jason_diff_final\nans = solver()", "answer": 26.0}
{"question": "How many more marbles did he lose than those he found?", "passage": "Josh had 15 marbles in his collection. He found 9 marbles while he lost 23 marbles.", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Josh had 15 marbles in his collection. He found 9 marbles while he lost 23 marbles. How many more marbles did he lose than those he found?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marbles_in_collection = 15\n    marbles_found = 9\n    marbles_lost = 23\n    # Now, we can calculate the difference between marbles_lost and marbles_found\n    marbles_lost_more_than_found = marbles_lost - marbles_found\n    return marbles_lost_more_than_found\nans = solver()", "answer": 14.0}
{"question": "How many emails did Jack receive in the afternoon?", "passage": "Jack received 4 emails in the morning and some more in the afternoon. If he received a total of 5 emails in the day.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jack received 4 emails in the morning and some more in the afternoon. If he received a total of 5 emails in the day. How many emails did Jack receive in the afternoon?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning_emails = 4\n    afternoon_emails = ?\n    total_emails = 5\n    # Now we can write the equation:\n    afternoon_emails = total_emails - morning_emails\n    return afternoon_emails\nans = solver()", "answer": 1.0}
{"question": "How many points did he score in the game?", "passage": "Luke gained 146 points in each round of a game. If he played 157 rounds of a trivia game.", "executed": 22922.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Luke gained 146 points in each round of a game. If he played 157 rounds of a trivia game. How many points did he score in the game?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    rounds = 157\n    points_per_round = 146\n    total_points = rounds * points_per_round\n    return total_points\nans = solver()", "answer": 22922.0}
{"question": "How many roses were there in the vase at the beginning?", "passage": "There were some roses in the vase. Jessica cut 16 more roses from her flower garden and put them in the vase. There are now 23 roses in the vase.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were some roses in the vase. Jessica cut 16 more roses from her flower garden and put them in the vase. There are now 23 roses in the vase. How many roses were there in the vase at the beginning?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x: the number of roses in the vase at the beginning\n    # y: the number of roses Jessica cut from her flower garden\n    # z: the number of roses in the vase after Jessica put them in the vase\n    x = 0\n    y = 16\n    z = 23\n    # According to the question, we can get the equation:\n    # x + y = z\n    x = z - y\n    return x\nans = solver()", "answer": 7.0}
{"question": "How far did the frog jump?", "passage": "The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped 19 inches. The frog jumped 39 inches farther than the grasshopper and the mouse jumped 94 inches lesser than the frog.", "executed": 58.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped 19 inches. The frog jumped 39 inches farther than the grasshopper and the mouse jumped 94 inches lesser than the frog. How far did the frog jump?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    grasshopper = 19\n    frog = grasshopper + 39\n    mouse = frog - 94\n    return frog\nans = solver()", "answer": 58.0}
{"question": "How many apples does Adam have?", "passage": "Adam has 5 more apples than Jackie. Jackie has 89 oranges and 11 apples.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Adam has 5 more apples than Jackie. Jackie has 89 oranges and 11 apples. How many apples does Adam have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # apples_adam = apples_jackie + 5\n    # oranges_jackie = 89\n    # apples_jackie = 11\n    # Now we can calculate the number of apples_adam\n    apples_adam = apples_jackie + 5\n    return apples_adam\nans = solver()", "answer": 16.0}
{"question": "How many visitors visited the Buckingham palace on the previous day?", "passage": "After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that 132 visitors came to the Buckingham palace that day. If 406 people visited the Buckingham palace within the past 327 days.", "executed": 1.2415902140672783, "generated": "\nimport math\nimport numpy as np\n\n# Question: After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that 132 visitors came to the Buckingham palace that day. If 406 people visited the Buckingham palace within the past 327 days. How many visitors visited the Buckingham palace on the previous day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    visitors_today = 132\n    visitors_past_days = 406\n    days_past = 327\n    visitors_previous_day = 0\n    # Now, we can calculate the average visitors per day:\n    average_visitors_per_day = visitors_past_days / days_past\n    # Now, we can calculate the visitors on the previous day:\n    visitors_previous_day = average_visitors_per_day\n    return visitors_previous_day\nans = solver()", "answer": 274.0}
{"question": "How many more campers went rowing in the morning than in the afternoon?", "passage": "29 campers went rowing and 66 campers went hiking in the morning. 26 campers went rowing in the afternoon.", "executed": 40.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 29 campers went rowing and 66 campers went hiking in the morning. 26 campers went rowing in the afternoon. How many more campers went rowing in the morning than in the afternoon?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x: the number of campers went rowing in the morning\n    # y: the number of campers went hiking in the morning\n    # z: the number of campers went rowing in the afternoon\n    x = 66\n    y = 29\n    z = 26\n    return x - z\nans = solver()", "answer": 3.0}
{"question": "How many apps did he add?", "passage": "Dave had 17 apps on his phone. After adding some he had 18 left.", "executed": 17.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dave had 17 apps on his phone. After adding some he had 18 left. How many apps did he add?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = number of apps Dave had on his phone\n    # y = number of apps Dave added\n    # z = number of apps Dave had left\n    x = 17\n    y = 18\n    z = 18\n    # Now we can write the equation:\n    # x + y = z\n    # x + y - z = 0\n    return x + y - z\nans = solver()", "answer": 1.0}
{"question": "How many more pupils were present compared to parents in the program?", "passage": "There were 174 parents in the program and 521 pupils too.", "executed": 347.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 174 parents in the program and 521 pupils too. How many more pupils were present compared to parents in the program?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    parents = 174\n    pupils = 521\n    # Now, we need to find the difference between the two variables.\n    difference = pupils - parents\n    return difference\nans = solver()", "answer": 347.0}
{"question": "How many cookies did he have in the beginning?", "passage": "Paco ate 19 cookies and had 35 cookies left.", "executed": 54.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paco ate 19 cookies and had 35 cookies left. How many cookies did he have in the beginning?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookies_ate = 19\n    cookies_left = 35\n    cookies_total = cookies_ate + cookies_left\n    return cookies_total\nans = solver()", "answer": 54.0}
{"question": "How many bags of cookies do you have?", "passage": "If each bag has 3 cookies and you had 21 cookies in total.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: If each bag has 3 cookies and you had 21 cookies in total. How many bags of cookies do you have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cookies_per_bag = 3\n    total_cookies = 21\n    # Now we can calculate the number of bags:\n    num_bags = total_cookies / cookies_per_bag\n    return num_bags\nans = solver()", "answer": 7.0}
{"question": "How far did the mouse jump?", "passage": "The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped 39 inches. The grasshopper jumped 19 inches farther than the frog and the mouse jumped 12 inches lesser than the frog.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The grasshopper, the frog and the mouse had a jumping contest. The grasshopper jumped 39 inches. The grasshopper jumped 19 inches farther than the frog and the mouse jumped 12 inches lesser than the frog. How far did the mouse jump?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    grasshopper = 39\n    frog = grasshopper - 19\n    mouse = frog - 12\n    return mouse\nans = solver()", "answer": 8.0}
{"question": "How many drums of grapes would be filled per day?", "passage": "Being his favorite, he saved checking on the grapevines for his last stop. He was told by 94 of the pickers that they fill 90 drums of grapes in 6 days.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Being his favorite, he saved checking on the grapevines for his last stop. He was told by 94 of the pickers that they fill 90 drums of grapes in 6 days. How many drums of grapes would be filled per day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = drums of grapes per day\n    # y = pickers\n    # z = days\n    # We can also define the constants:\n    # a = drums of grapes per picker per day\n    # b = drums of grapes per picker per 6 days\n    # c = pickers per 6 days\n    # d = pickers per day\n    # e = days per 6 days\n    # f = drums of grapes per day per 6 days\n    # g = drums of grapes per day per picker\n    # h = drums of grapes per picker per day per 6 days\n    # i = drums of grapes per picker per day per picker\n    # j = drums of grapes per picker per day per day\n    # k = drums of grapes per picker per day per picker per 6 days\n    # l = drums of grapes per picker per day per picker per day\n    # m = drums of grapes per picker per day per picker per day per 6 days\n    # n = drums of grapes per picker per day per picker per day per day\n    # o = drums of grapes per picker per day per picker per day per day per 6 days\n    # p = drums of grapes per picker per day per picker per day per day per day\n    # q = drums of grapes per picker per day per picker per day per day per day per 6 days\n    # r = drums of grapes per picker per day per picker per day per day per day per day\n    # s = drums of\nans = solver()", "answer": 15.0}
{"question": "How many new games do they have together?", "passage": "Katie had 84 new games and 19 old games. Her friends had 8 new games and 69 old games.", "executed": 92.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Katie had 84 new games and 19 old games. Her friends had 8 new games and 69 old games. How many new games do they have together?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    new_games_katie = 84\n    old_games_katie = 19\n    new_games_friends = 8\n    old_games_friends = 69\n    # Now, we can calculate the total number of games that Katie and her friends have:\n    total_games_katie = new_games_katie + old_games_katie\n    total_games_friends = new_games_friends + old_games_friends\n    total_games_together = total_games_katie + total_games_friends\n    # Now, we can calculate the total number of new games that Katie and her friends have:\n    total_new_games_katie = new_games_katie\n    total_new_games_friends = new_games_friends\n    total_new_games_together = total_new_games_katie + total_new_games_friends\n    return total_new_games_together\nans = solver()", "answer": 92.0}
{"question": "How many drums of grapes would be filled in 58 days?", "passage": "Being his favorite, he saved checking on the grapevines after 57 stops. He was told by 252 of the pickers that they fill 108 drums of grapes per day.", "executed": 1578528.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Being his favorite, he saved checking on the grapevines after 57 stops. He was told by 252 of the pickers that they fill 108 drums of grapes per day. How many drums of grapes would be filled in 58 days?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. The number of pickers: pickers\n    # 2. The number of drums of grapes per day: drums_per_day\n    # 3. The number of days: days\n    pickers = 252\n    drums_per_day = 108\n    days = 58\n    # The number of drums of grapes in 58 days is:\n    drums_in_58_days = pickers * drums_per_day * days\n    return drums_in_58_days\nans = solver()", "answer": 6264.0}
{"question": "How many visitors visited the Buckingham palace on that day?", "passage": "After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that 45 visitors came to the Buckingham palace on the previous day. If 829 people visited the Buckingham palace within the past 85 days.", "executed": 438.8823529411765, "generated": "\nimport math\nimport numpy as np\n\n# Question: After eating a hearty meal they went to see the Buckingham palace. There, Rachel learned that 45 visitors came to the Buckingham palace on the previous day. If 829 people visited the Buckingham palace within the past 85 days. How many visitors visited the Buckingham palace on that day?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   visitors_per_day = visitors_per_85_days / 85\n    #   visitors_per_85_days = 829\n    visitors_per_85_days = 829\n    visitors_per_day = visitors_per_85_days / 85\n    visitors_on_previous_day = 45\n    visitors_on_that_day = visitors_per_day * visitors_on_previous_day\n    return visitors_on_that_day\nans = solver()", "answer": 784.0}
{"question": "How many more apples does Jackie have than Adam?", "passage": "Adam has 9 apples. Jackie has 10 apples.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Adam has 9 apples. Jackie has 10 apples. How many more apples does Jackie have than Adam?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    adam_apples = 9\n    jackie_apples = 10\n    # Now, we can calculate the difference between the number of apples that Jackie has and the number of apples that Adam has\n    difference = jackie_apples - adam_apples\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many green peaches are in each basket?", "passage": "There are 2 baskets of peaches. Each basket has 4 red peaches and some more green peaches. If there are a total of 12 peaches in all baskets.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 2 baskets of peaches. Each basket has 4 red peaches and some more green peaches. If there are a total of 12 peaches in all baskets. How many green peaches are in each basket?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    red_peaches = 4\n    total_peaches = 12\n    total_baskets = 2\n    # Now, we can calculate the number of green peaches in each basket:\n    green_peaches = total_peaches - red_peaches * total_baskets\n    return green_peaches\nans = solver()", "answer": 2.0}
{"question": "How many apples did he use?", "passage": "A chef had 40 apples and 54 peaches. After making some pies, he had 39 apples left.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A chef had 40 apples and 54 peaches. After making some pies, he had 39 apples left. How many apples did he use?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    apples = 40\n    peaches = 54\n    apples_left = 39\n    # Now, we can define the equation:\n    apples_used = apples - apples_left\n    return apples_used\nans = solver()", "answer": 1.0}
{"question": "How many pieces of junk mail should he give each house?", "passage": "A mailman has to give 38 pieces of junk mail to each of the 78 blocks. If there are 19 houses on a block.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: A mailman has to give 38 pieces of junk mail to each of the 78 blocks. If there are 19 houses on a block. How many pieces of junk mail should he give each house?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. Number of blocks: 78\n    # 2. Number of houses on a block: 19\n    # 3. Number of pieces of junk mail to each of the 78 blocks: 38\n    # 4. Number of pieces of junk mail to each house: ?\n    # 5. Number of pieces of junk mail to each of the 78 blocks: 38\n    # 6. Number of pieces of junk mail to each of the 78 blocks: 38\n    # 7. Number of pieces of junk mail to each of the 78 blocks: 38\n    # 8. Number of pieces of junk mail to each of the 78 blocks: 38\n    # 9. Number of pieces of junk mail to each of the 78 blocks: 38\n    # 10. Number of pieces of junk mail to each of the 78 blocks: 38\n    # 11. Number of pieces of junk mail to each of the 78 blocks: 38\n    # 12. Number of pieces of junk mail to each of the 78 blocks: 38\n    # 13. Number of pieces of junk mail to each of the 78 blocks: 38\n    # 14. Number of pieces of junk mail to each of the 78 blocks: 38\n    # 15. Number of pieces of junk mail to each of the 78 blocks: 38\n    # 16. Number of pieces of junk mail to each of the 78 blocks: 38\n    # 17. Number of pieces of junk mail to each of the 78 blocks: 38\n    # 18. Number of pieces of junk mail to each of the 78 blocks: 38\n    # 19. Number of pieces of junk mail to each of the 78\nans = solver()", "answer": 2.0}
{"question": "How many more cups of flour than cups of sugar does she need to add now?", "passage": "Mary is baking a cake. The recipe calls for 10 cups of flour 2 cups of sugar and 80 cups of salt. She already put in 7 cups of flour.", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 10 cups of flour 2 cups of sugar and 80 cups of salt. She already put in 7 cups of flour. How many more cups of flour than cups of sugar does she need to add now?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    flour = 10\n    sugar = 2\n    salt = 80\n    flour_added = 7\n    # Now, we need to calculate the amount of flour that is needed to be added\n    flour_needed = flour - flour_added\n    # Now, we need to calculate the amount of sugar that is needed to be added\n    sugar_needed = sugar\n    # Now, we need to calculate the amount of salt that is needed to be added\n    salt_needed = salt\n    # Now, we need to calculate the difference between the amount of flour and sugar that is needed to be added\n    difference = flour_needed - sugar_needed\n    return difference\nans = solver()", "answer": 1.0}
{"question": "How many kids did she play with altogether?", "passage": "Julia played tag with 13 kids on monday and 10 kids on tuesday. She played cards with 15 kids on wednesday.", "executed": 38.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Julia played tag with 13 kids on monday and 10 kids on tuesday. She played cards with 15 kids on wednesday. How many kids did she play with altogether?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    monday = 13\n    tuesday = 10\n    wednesday = 15\n    # Now, we can calculate the total number of kids she played with:\n    total = monday + tuesday + wednesday\n    return total\nans = solver()", "answer": 38.0}
{"question": "What is the width of her room?", "passage": "Jesse needs a carpet of size 10 square feet to cover her room. If her room is 5 feet long.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jesse needs a carpet of size 10 square feet to cover her room. If her room is 5 feet long. What is the width of her room?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    length = 5\n    area = 10\n    width = area / length\n    return width\nans = solver()", "answer": 2.0}
{"question": "How big is each group?", "passage": "There are 4502 skittles in Steven's skittles collection. Steven also has 4276 erasers. If the skittles and erasers are organized into 154 groups.", "executed": 57.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 4502 skittles in Steven's skittles collection. Steven also has 4276 erasers. If the skittles and erasers are organized into 154 groups. How big is each group?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    skittles = 4502\n    erasers = 4276\n    groups = 154\n    # Now, we can calculate the size of each group:\n    size = (skittles + erasers) / groups\n    return size\nans = solver()", "answer": 57.0}
{"question": "How many pieces of junk mail should he give in total?", "passage": "A mailman has to give 4 pieces of junk mail to each house in each of the 16 blocks. If there are 17 houses in each block.", "executed": 1088.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A mailman has to give 4 pieces of junk mail to each house in each of the 16 blocks. If there are 17 houses in each block. How many pieces of junk mail should he give in total?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. Number of blocks: 16\n    # 2. Number of houses in each block: 17\n    # 3. Number of pieces of junk mail to each house: 4\n    # 4. Total number of pieces of junk mail: ?\n    # 5. Total number of houses: 16 * 17 = 272\n    # 6. Total number of pieces of junk mail: 272 * 4 = 1088\n    return 1088\nans = solver()", "answer": 1088.0}
{"question": "How many more pages does the first chapter have than the third chapter?", "passage": "A book has 3 chapters. The first chapter is 53 pages long the second chapter is 75 pages long and the third chapter is 21 pages long.", "executed": 32.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A book has 3 chapters. The first chapter is 53 pages long the second chapter is 75 pages long and the third chapter is 21 pages long. How many more pages does the first chapter have than the third chapter?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    first_chapter = 53\n    second_chapter = 75\n    third_chapter = 21\n    # Now, we can calculate the difference between the first chapter and the third chapter:\n    difference = first_chapter - third_chapter\n    return difference\nans = solver()", "answer": 32.0}
{"question": "How many more apps did he add than he deleted?", "passage": "Dave had 21 apps on his phone. He added 89 new apps. After deleting some he had 24 left.", "executed": 86.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dave had 21 apps on his phone. He added 89 new apps. After deleting some he had 24 left. How many more apps did he add than he deleted?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    #   a = number of apps Dave had on his phone\n    #   b = number of new apps Dave added\n    #   c = number of apps Dave deleted\n    #   d = number of apps Dave had left\n    a = 21\n    b = 89\n    d = 24\n    # We can derive the equation:\n    #   a + b - c = d\n    #   a + b - d = c\n    c = a + b - d\n    return c\nans = solver()", "answer": 3.0}
{"question": "How many pieces of candy does he still have left?", "passage": "Bobby ate 17 pieces of candy. Then he ate 15 more. If he initially had 36 pieces of candy.", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bobby ate 17 pieces of candy. Then he ate 15 more. If he initially had 36 pieces of candy. How many pieces of candy does he still have left?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    initial_candy = 36\n    candy_ate = 17\n    candy_ate_more = 15\n    # Now, we can calculate the answer:\n    candy_left = initial_candy - candy_ate - candy_ate_more\n    return candy_left\nans = solver()", "answer": 4.0}
{"question": "How many bird families were living near the mountain at the start?", "passage": "Winter is almost here and most animals are migrating to warmer countries. There are some bird families living near the mountain. 20 bird families flew away for winter while 14 bird families stayed behind.", "executed": 34.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Winter is almost here and most animals are migrating to warmer countries. There are some bird families living near the mountain. 20 bird families flew away for winter while 14 bird families stayed behind. How many bird families were living near the mountain at the start?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # bird_families_left = 14\n    # bird_families_migrated = 20\n    # bird_families_total = ?\n    bird_families_left = 14\n    bird_families_migrated = 20\n    bird_families_total = bird_families_left + bird_families_migrated\n    return bird_families_total\nans = solver()", "answer": 34.0}
{"question": "How many books did he read?", "passage": "Frank was reading through some books. Each book had 66 pages and it took Frank 12 days to finish each book. If he takes 492 days to finish all books.", "executed": 89.45454545454545, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank was reading through some books. Each book had 66 pages and it took Frank 12 days to finish each book. If he takes 492 days to finish all books. How many books did he read?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. Number of books: n\n    # 2. Number of pages per book: p\n    # 3. Number of days to finish a book: d\n    # 4. Number of days to finish all books: t\n    n = 0\n    p = 66\n    d = 12\n    t = 492\n    # Now we can write the equation:\n    # n * p / d = t\n    n = t * d / p\n    return n\nans = solver()", "answer": 41.0}
{"question": "How many more push-ups than crunches did Zachary do?", "passage": "David did 36 more push-ups but 33 less crunches than Zachary in gym class today. If Zachary did 58 push-ups and 33 crunches.", "executed": 25.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: David did 36 more push-ups but 33 less crunches than Zachary in gym class today. If Zachary did 58 push-ups and 33 crunches. How many more push-ups than crunches did Zachary do?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    push_ups_zachary = 58\n    crunches_zachary = 33\n    push_ups_david = push_ups_zachary + 36\n    crunches_david = crunches_zachary - 33\n    push_ups_difference = push_ups_zachary - crunches_zachary\n    return push_ups_difference\nans = solver()", "answer": 25.0}
{"question": "How many more eggs does Rebecca have than marbles?", "passage": "Rebecca wants to split a collection of eggs into groups of 20. Rebecca has 5 marbles and 12 eggs.", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rebecca wants to split a collection of eggs into groups of 20. Rebecca has 5 marbles and 12 eggs. How many more eggs does Rebecca have than marbles?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marbles = 5\n    eggs = 12\n    eggs_per_group = 20\n    # Now, we can calculate the number of groups of eggs:\n    num_groups = eggs / eggs_per_group\n    # Now, we can calculate the number of eggs left over:\n    eggs_left_over = eggs % eggs_per_group\n    # Now, we can calculate the number of marbles left over:\n    marbles_left_over = marbles % eggs_per_group\n    # Now, we can calculate the number of eggs more than marbles:\n    eggs_more_than_marbles = eggs_left_over - marbles_left_over\n    return eggs_more_than_marbles\nans = solver()", "answer": 7.0}
{"question": "How many more cakes did baker make than those he sold?", "passage": "Baker made 81 cakes. Then he made 92 more cakes. He sold 46 of them.", "executed": 127.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Baker made 81 cakes. Then he made 92 more cakes. He sold 46 of them. How many more cakes did baker make than those he sold?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    cakes_made = 81\n    cakes_made_more = 92\n    cakes_sold = 46\n    cakes_left = cakes_made + cakes_made_more - cakes_sold\n    return cakes_left\nans = solver()", "answer": 127.0}
{"question": "How many green peaches are in the basket?", "passage": "10 red peaches and some more green peaches are in the basket. If there are a total of 15 peaches in the basket.", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 10 red peaches and some more green peaches are in the basket. If there are a total of 15 peaches in the basket. How many green peaches are in the basket?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    red_peaches = 10\n    total_peaches = 15\n    green_peaches = total_peaches - red_peaches\n    return green_peaches\nans = solver()", "answer": 5.0}
{"question": "How many more campers went rowing in the morning than in the afternoon?", "passage": "62 campers went rowing in the morning. 39 campers went rowing in the afternoon.", "executed": 23.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: 62 campers went rowing in the morning. 39 campers went rowing in the afternoon. How many more campers went rowing in the morning than in the afternoon?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    morning_campers = 62\n    afternoon_campers = 39\n    # Now, we can calculate the difference between the morning campers and the afternoon campers:\n    difference = morning_campers - afternoon_campers\n    # Finally, we can return the difference:\n    return difference\nans = solver()", "answer": 23.0}
{"question": "How many people are there in that school?", "passage": "In a school there are 315 girls and 309 boys. There are also 772 teachers.", "executed": 1396.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In a school there are 315 girls and 309 boys. There are also 772 teachers. How many people are there in that school?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    girls = 315\n    boys = 309\n    teachers = 772\n    people = girls + boys + teachers\n    return people\nans = solver()", "answer": 1396.0}
{"question": "How many boys did she give the marbles to?", "passage": "In Haley's class some boys love to play marbles. If Haley has 10 marbles and she gave 5 marbles to each boy.", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In Haley's class some boys love to play marbles. If Haley has 10 marbles and she gave 5 marbles to each boy. How many boys did she give the marbles to?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    marbles = 10\n    marbles_per_boy = 5\n    boys = marbles / marbles_per_boy\n    return boys\nans = solver()", "answer": 2.0}
{"question": "How much money does he earn during harvest season?", "passage": "Lewis earns $ 28 every week during the 1091 weeks of harvest. He also earns $ 939 per week for working overtime. If he works overtime every week.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Lewis earns $ 28 every week during the 1091 weeks of harvest. He also earns $ 939 per week for working overtime. If he works overtime every week. How much money does he earn during harvest season?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # 1. Lewis earns $ 28 every week during the 1091 weeks of harvest.\n    # 2. He also earns $ 939 per week for working overtime.\n    # 3. If he works overtime every week.\n    # 4. How much money does he earn during harvest season?\n    # 5. The answer is the sum of the money he earns every week.\n    # 6. The sum of the money he earns every week is the sum of the money he earns every week during the 1091 weeks of harvest and the sum of the money he earns every week for working overtime.\n    # 7. The sum of the money he earns every week during the 1091 weeks of harvest is the product of the money he earns every week during the 1091 weeks of harvest and the number of weeks of harvest.\n    # 8. The sum of the money he earns every week for working overtime is the product of the money he earns every week for working overtime and the number of weeks of harvest.\n    # 9. The number of weeks of harvest is 1091.\n    # 10. The money he earns every week during the 1091 weeks of harvest is $ 28.\n    # 11. The money he earns every week for working overtime is $ 939.\n    # 12. The answer is the sum of the money he earns every week during the 1091 weeks of harvest and the sum of the money he earns every week for working overtime.\n    # 13. The sum of the money he earns every week during the 1091 weeks of harvest is the product of the money he earns every week during the 1091 weeks\nans = solver()", "answer": 1054997.0}
{"question": "How many more pages of math homework than biology homework did she have?", "passage": "Rachel had to complete 11 pages of math homework, 2 pages of reading homework and 3 more pages of biology homework.", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel had to complete 11 pages of math homework, 2 pages of reading homework and 3 more pages of biology homework. How many more pages of math homework than biology homework did she have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    math_homework = 11\n    reading_homework = 2\n    biology_homework = 3\n    # Now, we can calculate the difference between math and biology homework:\n    difference = math_homework - biology_homework\n    return difference\nans = solver()", "answer": 8.0}
{"question": "How many apples does Jackie have?", "passage": "Adam has 3 more apples than jackie. Adam has 9 apples.", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Adam has 3 more apples than jackie. Adam has 9 apples. How many apples does Jackie have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    adam_apples = 9\n    jackie_apples = 0\n    difference = 3\n    # Now, we can use the variables to derive the answer:\n    jackie_apples = adam_apples - difference\n    return jackie_apples\nans = solver()", "answer": 6.0}
{"question": "How many ripe apples did the tree have to begin with?", "passage": "Rachel picked 3 ripe apples from her tree. Now the tree has 2 ripe apples and 27 unripe apples.", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel picked 3 ripe apples from her tree. Now the tree has 2 ripe apples and 27 unripe apples. How many ripe apples did the tree have to begin with?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # x = the number of ripe apples on the tree to begin with\n    # y = the number of unripe apples on the tree to begin with\n    # z = the number of ripe apples picked by Rachel\n    # x + y = the total number of apples on the tree to begin with\n    # x + y - z = the total number of apples on the tree after Rachel picked the apples\n    # x - z = the number of ripe apples on the tree after Rachel picked the apples\n    # y = the number of unripe apples on the tree after Rachel picked the apples\n    # x + y - z = x - z + y\n    # x + y - z = x - z + y\n    # x + y - z = x - z + y\n    # x + y - z = x - z + y\n    # x + y - z = x - z + y\n    # x + y - z = x - z + y\n    # x + y - z = x - z + y\n    # x + y - z = x - z + y\n    # x + y - z = x - z + y\n    # x + y - z = x - z + y\n    # x + y - z = x - z + y\n    # x + y - z = x - z + y\n    # x + y - z = x - z + y\n    # x + y - z = x - z + y\n    # x + y - z = x - z + y\n    #\nans = solver()", "answer": 5.0}
{"question": "How many points did she score in 79 games?", "passage": "Melissa scored 109 points in each game. She also got 82 bonus points in each game.", "executed": 15089.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Melissa scored 109 points in each game. She also got 82 bonus points in each game. How many points did she score in 79 games?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    points_per_game = 109\n    bonus_points = 82\n    number_of_games = 79\n    total_points = points_per_game * number_of_games + bonus_points * number_of_games\n    return total_points\nans = solver()", "answer": 15089.0}
{"question": "How many more pages of math homework than reading homework did she have?", "passage": "Rachel had to complete 4 pages of reading homework, 7 pages of math homework and 19 more pages of biology homework.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel had to complete 4 pages of reading homework, 7 pages of math homework and 19 more pages of biology homework. How many more pages of math homework than reading homework did she have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    reading_homework = 4\n    math_homework = 7\n    biology_homework = 19\n    # Now, we can calculate the difference between math homework and reading homework\n    difference = math_homework - reading_homework\n    return difference\nans = solver()", "answer": 3.0}
{"question": "How deep was the water?", "passage": "After resting they decided to go for a swim. The depth of the water is 9 times Dean's height. If Ron is 15 feet tall and Dean is 6 feet shorter than Ron.", "executed": 81.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: After resting they decided to go for a swim. The depth of the water is 9 times Dean's height. If Ron is 15 feet tall and Dean is 6 feet shorter than Ron. How deep was the water?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    ron_height = 15\n    dean_height = ron_height - 6\n    water_depth = 9 * dean_height\n    return water_depth\nans = solver()", "answer": 81.0}
{"question": "How many pupils are there in that school?", "passage": "In a school there are 308 girls and 318 boys. There are also 36 teachers.", "executed": 626.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In a school there are 308 girls and 318 boys. There are also 36 teachers. How many pupils are there in that school?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    girls = 308\n    boys = 318\n    teachers = 36\n    pupils = girls + boys\n    return pupils\nans = solver()", "answer": 626.0}
{"question": "How many more games does Katie have than her friends?", "passage": "Friends of Katie had 57 games and she had 63 ds games.", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Friends of Katie had 57 games and she had 63 ds games. How many more games does Katie have than her friends?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    friends_games = 57\n    katie_games = 63\n    # Now, we can calculate the difference between the two variables:\n    difference = katie_games - friends_games\n    return difference\nans = solver()", "answer": 6.0}
{"question": "How many points did he score per round?", "passage": "Luke scored 84 points after playing 2 rounds of a trivia game. If he gained the same number of points each round.", "executed": 42.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Luke scored 84 points after playing 2 rounds of a trivia game. If he gained the same number of points each round. How many points did he score per round?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    total_points = 84\n    number_of_rounds = 2\n    points_per_round = total_points / number_of_rounds\n    return points_per_round\nans = solver()", "answer": 42.0}
{"question": "How many grams of wax does he already have?", "passage": "Next on his checklist is wax to stick the feathers together and colors to paint them. He needs a total of 57 g of colors to paint them. He needs 22 g of wax more. If the feathers require a total of 353 g of wax.", "executed": 331.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Next on his checklist is wax to stick the feathers together and colors to paint them. He needs a total of 57 g of colors to paint them. He needs 22 g of wax more. If the feathers require a total of 353 g of wax. How many grams of wax does he already have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    wax_needed = 353\n    wax_already_have = wax_needed - 22\n    return wax_already_have\nans = solver()", "answer": 331.0}
{"question": "How many flower beds did they have?", "passage": "Paige was helping her mom plant flowers and together they planted 36 seeds. They put 12 seeds in each flower bed and only 58 seeds grew into flowers in each flower bed.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paige was helping her mom plant flowers and together they planted 36 seeds. They put 12 seeds in each flower bed and only 58 seeds grew into flowers in each flower bed. How many flower beds did they have?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    # seeds_planted = 36\n    # seeds_per_bed = 12\n    # seeds_grew = 58\n    # flower_beds = ?\n    seeds_planted = 36\n    seeds_per_bed = 12\n    seeds_grew = 58\n    flower_beds = seeds_planted / seeds_per_bed\n    return flower_beds\nans = solver()", "answer": 3.0}
{"question": "How many alligators were not hiding?", "passage": "At the zoo, a cage had 3 snakes and 75 alligators. If 82 snakes and 19 alligators were hiding.", "executed": 56.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the zoo, a cage had 3 snakes and 75 alligators. If 82 snakes and 19 alligators were hiding. How many alligators were not hiding?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    snakes_in_cage = 3\n    alligators_in_cage = 75\n    snakes_hiding = 82\n    alligators_hiding = 19\n    alligators_not_hiding = 0\n    alligators_not_hiding = alligators_in_cage - alligators_hiding\n    return alligators_not_hiding\nans = solver()", "answer": 56.0}
{"question": "How many flowers did they grow?", "passage": "Paige was helping her mom plant flowers and together they planted 55 seeds. They put 15 seeds in each flower bed and only 60 seeds grew into flowers in each flower bed.", "executed": 220.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paige was helping her mom plant flowers and together they planted 55 seeds. They put 15 seeds in each flower bed and only 60 seeds grew into flowers in each flower bed. How many flowers did they grow?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    seeds_planted = 55\n    seeds_per_bed = 15\n    seeds_grew = 60\n    # Now we can calculate the number of flower beds:\n    beds = seeds_planted / seeds_per_bed\n    # And the number of flowers:\n    flowers = beds * seeds_grew\n    return flowers\nans = solver()", "answer": 220.0}
{"question": "How many more cups of sugar does she need to add?", "passage": "Mary is baking a cake. The recipe calls for 7 cups of sugar and 10 cups of flour. She already put in 4 cups of sugar.", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mary is baking a cake. The recipe calls for 7 cups of sugar and 10 cups of flour. She already put in 4 cups of sugar. How many more cups of sugar does she need to add?\n# Answer this question by implementing an solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # According to the question, we can define the variables:\n    sugar_needed = 7\n    flour_needed = 10\n    sugar_added = 4\n    sugar_remaining = sugar_needed - sugar_added\n    return sugar_remaining\nans = solver()", "answer": 3.0}
