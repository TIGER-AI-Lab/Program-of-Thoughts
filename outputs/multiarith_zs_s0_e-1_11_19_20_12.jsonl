{"question": " For Halloween Debby and her sister combined the candy they received. Debby had 32 pieces of candy while her sister had 42. If they ate 35 pieces the first night, how many pieces do they have left? ", "executed": 39.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For Halloween Debby and her sister combined the candy they received. Debby had 32 pieces of candy while her sister had 42. If they ate 35 pieces the first night, how many pieces do they have left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    debby_candy = 32\n    sister_candy = 42\n    eaten_candy = 35\n    # In the second step, we can calculate the total candy:\n    total_candy = debby_candy + sister_candy\n    # In the third step, we can calculate the remaining candy:\n    remaining_candy = total_candy - eaten_candy\n    return remaining_candy\nans = solver()", "answer": 39.0}
{"question": " A pet store had 13 siamese cats and 5 house cats. During a sale they sold 10 cats. How many cats do they have left? ", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet store had 13 siamese cats and 5 house cats. During a sale they sold 10 cats. How many cats do they have left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    siamese_cats = 13\n    house_cats = 5\n    sold_cats = 10\n    # In the second step, we can define the following variable:\n    total_cats = siamese_cats + house_cats\n    # In the third step, we can define the following variable:\n    cats_left = total_cats - sold_cats\n    return cats_left\nans = solver()", "answer": 8.0}
{"question": " Luke was trying to expand his game collection. He bought 2 games from a friend and bought 2 more at a garage sale. If 2 of the games didn't work, how many good games did he end up with? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Luke was trying to expand his game collection. He bought 2 games from a friend and bought 2 more at a garage sale. If 2 of the games didn't work, how many good games did he end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    bought_from_friend = 2\n    bought_from_garage_sale = 2\n    total_games = bought_from_friend + bought_from_garage_sale\n    games_not_working = 2\n    games_working = total_games - games_not_working\n    return games_working\nans = solver()", "answer": 2.0}
{"question": " The school cafeteria ordered 42 red apples and 7 green apples for students lunches. But, if only 9 students wanted fruit, how many extra did the cafeteria end up with? ", "executed": 40.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school cafeteria ordered 42 red apples and 7 green apples for students lunches. But, if only 9 students wanted fruit, how many extra did the cafeteria end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    red_apples = 42\n    green_apples = 7\n    students_wanted_fruit = 9\n    # Now, we can calculate the total number of apples:\n    total_apples = red_apples + green_apples\n    # Now, we can calculate the number of extra apples:\n    extra_apples = total_apples - students_wanted_fruit\n    return extra_apples\nans = solver()", "answer": 40.0}
{"question": " Lana picked 36 tulips and 37 roses to make flower bouquets. If she only used 70 of the flowers though, how many extra flowers did Lana pick? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Lana picked 36 tulips and 37 roses to make flower bouquets. If she only used 70 of the flowers though, how many extra flowers did Lana pick?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    tulips = 36\n    roses = 37\n    used = 70\n    extra = 0\n    # In the second step, we can calculate the answer:\n    extra = tulips + roses - used\n    # In the third step, we can return the answer:\n    return extra\nans = solver()", "answer": 3.0}
{"question": " Carol and her mom were picking carrots from their garden. Carol picked 29 and her mother picked 16. If only 38 of the carrots were good, how many bad carrots did they have? ", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Carol and her mom were picking carrots from their garden. Carol picked 29 and her mother picked 16. If only 38 of the carrots were good, how many bad carrots did they have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    good_carrots = 38\n    bad_carrots = 0\n    total_carrots = good_carrots + bad_carrots\n    carol_carrots = 29\n    mom_carrots = 16\n    total_picked = carol_carrots + mom_carrots\n    # Now, we can write the following equation:\n    # total_carrots = total_picked + bad_carrots\n    # total_carrots - total_picked = bad_carrots\n    bad_carrots = total_carrots - total_picked\n    return bad_carrots\nans = solver()", "answer": 7.0}
{"question": " Roger had 16 dollars. For his birthday he got 28 more dollars but spent 25 on a new game. How much money does he have now? ", "executed": 19.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Roger had 16 dollars. For his birthday he got 28 more dollars but spent 25 on a new game. How much money does he have now?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    a = 16\n    # In the second step, we can define the following variable:\n    b = 28\n    # In the third step, we can define the following variable:\n    c = 25\n    # In the fourth step, we can define the following variable:\n    d = a + b - c\n    return d\nans = solver()", "answer": 19.0}
{"question": " While on vacation, Megan took 15 pictures at the zoo and 18 at the museum. If she later deleted 31 of the pictures, how many pictures from her vacation did she still have? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While on vacation, Megan took 15 pictures at the zoo and 18 at the museum. If she later deleted 31 of the pictures, how many pictures from her vacation did she still have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    zoo_pictures = 15\n    museum_pictures = 18\n    deleted_pictures = 31\n    # In the second step, we can calculate the total number of pictures:\n    total_pictures = zoo_pictures + museum_pictures\n    # In the third step, we can calculate the number of pictures that Megan still has:\n    remaining_pictures = total_pictures - deleted_pictures\n    return remaining_pictures\nans = solver()", "answer": 2.0}
{"question": " Rachel bought two coloring books. One had 23 pictures and the other had 32. After one week she had already colored 44 of the pictures. How many pictures does she still have to color? ", "executed": 11.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel bought two coloring books. One had 23 pictures and the other had 32. After one week she had already colored 44 of the pictures. How many pictures does she still have to color?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_pictures_in_book1 = 23\n    num_pictures_in_book2 = 32\n    num_pictures_colored = 44\n    # In the second step, we can calculate the total number of pictures in both books:\n    num_pictures_total = num_pictures_in_book1 + num_pictures_in_book2\n    # In the third step, we can calculate the number of pictures that are still left to color:\n    num_pictures_left = num_pictures_total - num_pictures_colored\n    # In the fourth step, we can return the answer:\n    return num_pictures_left\nans = solver()", "answer": 11.0}
{"question": " Ned had to wash 9 short sleeve shirts and 21 long sleeve shirts before school. If he had only washed 29 of them by the time school started, how many did he not wash? ", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Ned had to wash 9 short sleeve shirts and 21 long sleeve shirts before school. If he had only washed 29 of them by the time school started, how many did he not wash?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    short_sleeve_shirts = 9\n    long_sleeve_shirts = 21\n    total_shirts = short_sleeve_shirts + long_sleeve_shirts\n    washed_shirts = 29\n    not_washed_shirts = total_shirts - washed_shirts\n    return not_washed_shirts\nans = solver()", "answer": 1.0}
{"question": " Oliver had to wash 39 short sleeve shirts and 47 long sleeve shirts before school. If he had only washed 20 of them by the time school started, how many did he not wash? ", "executed": 66.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Oliver had to wash 39 short sleeve shirts and 47 long sleeve shirts before school. If he had only washed 20 of them by the time school started, how many did he not wash?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    short_sleeve_shirts = 39\n    long_sleeve_shirts = 47\n    washed_shirts = 20\n    # In the second step, we can calculate the total number of shirts:\n    total_shirts = short_sleeve_shirts + long_sleeve_shirts\n    # In the third step, we can calculate the number of shirts that were not washed:\n    not_washed_shirts = total_shirts - washed_shirts\n    return not_washed_shirts\nans = solver()", "answer": 66.0}
{"question": " For the school bake sale Wendy made pastries. She baked 4 cupcakes and 29 cookies. After the sale she had 24 to take back home. How many pastries did she sell? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For the school bake sale Wendy made pastries. She baked 4 cupcakes and 29 cookies. After the sale she had 24 to take back home. How many pastries did she sell?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cupcakes = 4\n    cookies = 29\n    pastries = cupcakes + cookies\n    print(\"Total pastries:\", pastries)\n    # In the second step, we can define the following variable:\n    sold = pastries - 24\n    print(\"Sold:\", sold)\n    return sold\nans = solver()", "answer": 9.0}
{"question": " While on vacation, Debby took 24 pictures at the zoo and 12 at the museum. If she later deleted 14 of the pictures, how many pictures from her vacation did she still have? ", "executed": 22.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While on vacation, Debby took 24 pictures at the zoo and 12 at the museum. If she later deleted 14 of the pictures, how many pictures from her vacation did she still have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    zoo_pictures = 24\n    museum_pictures = 12\n    deleted_pictures = 14\n    # In the second step, we can calculate the total number of pictures:\n    total_pictures = zoo_pictures + museum_pictures\n    # In the third step, we can calculate the number of pictures that Debby still has:\n    remaining_pictures = total_pictures - deleted_pictures\n    return remaining_pictures\nans = solver()", "answer": 22.0}
{"question": " Katie picked 3 tulips and 9 roses to make flower bouquets. If she only used 10 of the flowers though, how many extra flowers did Katie pick? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Katie picked 3 tulips and 9 roses to make flower bouquets. If she only used 10 of the flowers though, how many extra flowers did Katie pick?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    tulips = 3\n    roses = 9\n    flowers = tulips + roses\n    print(\"flowers: \", flowers)\n    # In the second step, we can define the following variable:\n    used_flowers = 10\n    print(\"used_flowers: \", used_flowers)\n    # In the third step, we can define the following variable:\n    extra_flowers = flowers - used_flowers\n    print(\"extra_flowers: \", extra_flowers)\n    return extra_flowers\nans = solver()", "answer": 2.0}
{"question": " Faye had 46 math problems and 9 science problems for homework. If she finished 40 of the problems at school, how many problems did she have to do for homework? ", "executed": 15.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Faye had 46 math problems and 9 science problems for homework. If she finished 40 of the problems at school, how many problems did she have to do for homework?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    math_problems = 46\n    science_problems = 9\n    problems_finished_at_school = 40\n    problems_finished_at_home = 0\n    total_problems = math_problems + science_problems\n    problems_left = total_problems - problems_finished_at_school\n    problems_finished_at_home = problems_left\n    return problems_finished_at_home\nans = solver()", "answer": 15.0}
{"question": " Amy had 4 music files and 21 video files on her flash drive. If she deleted 23 of the files, how many files were still on her flash drive? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Amy had 4 music files and 21 video files on her flash drive. If she deleted 23 of the files, how many files were still on her flash drive?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    music_files = 4\n    video_files = 21\n    deleted_files = 23\n    # In the second step, we can calculate the number of files on the flash drive before deleting any files:\n    files_before_deletion = music_files + video_files\n    # In the third step, we can calculate the number of files on the flash drive after deleting 23 files:\n    files_after_deletion = files_before_deletion - deleted_files\n    return files_after_deletion\nans = solver()", "answer": 2.0}
{"question": " Ned was trying to expand his game collection. He bought 11 games from a friend and bought 22 more at a garage sale. If 19 of the games didn't work, how many good games did he end up with? ", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Ned was trying to expand his game collection. He bought 11 games from a friend and bought 22 more at a garage sale. If 19 of the games didn't work, how many good games did he end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    games_bought_from_friend = 11\n    games_bought_from_garage_sale = 22\n    games_not_working = 19\n    # In the second step, we can define the following variable:\n    games_bought = games_bought_from_friend + games_bought_from_garage_sale\n    games_working = games_bought - games_not_working\n    return games_working\nans = solver()", "answer": 14.0}
{"question": " Chloe was playing a trivia game. In the first round she scored 40 points and in the second round she scored 50 points. In the last round she lost 4 points. How many points did she have at the end of the game? ", "executed": 86.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Chloe was playing a trivia game. In the first round she scored 40 points and in the second round she scored 50 points. In the last round she lost 4 points. How many points did she have at the end of the game?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    first_round = 40\n    second_round = 50\n    last_round = -4\n    # In the second step, we can add the first two rounds together:\n    first_two_rounds = first_round + second_round\n    # In the third step, we can add the last round to the first two rounds:\n    total_score = first_two_rounds + last_round\n    return total_score\nans = solver()", "answer": 86.0}
{"question": " At the arcade, Tom won 32 tickets playing 'whack a mole' and 25 tickets playing 'skee ball'. If he spent 7 of his tickets on a hat, how many tickets does Tom have left? ", "executed": 50.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the arcade, Tom won 32 tickets playing 'whack a mole' and 25 tickets playing 'skee ball'. If he spent 7 of his tickets on a hat, how many tickets does Tom have left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    whack_a_mole_tickets = 32\n    skee_ball_tickets = 25\n    tickets_spent = 7\n    # In the second step, we can add the tickets together:\n    total_tickets = whack_a_mole_tickets + skee_ball_tickets\n    # In the third step, we can subtract the tickets spent:\n    tickets_left = total_tickets - tickets_spent\n    return tickets_left\nans = solver()", "answer": 50.0}
{"question": " Bianca and her mom were picking carrots from their garden. Bianca picked 26 and her mother picked 15. If only 16 of the carrots were good, how many bad carrots did they have? ", "executed": 25.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bianca and her mom were picking carrots from their garden. Bianca picked 26 and her mother picked 15. If only 16 of the carrots were good, how many bad carrots did they have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    good_carrots = 16\n    bad_carrots = 0\n    total_carrots = 0\n    bianca_carrots = 26\n    mom_carrots = 15\n    # In the second step, we can calculate the total number of carrots:\n    total_carrots = bianca_carrots + mom_carrots\n    # In the third step, we can calculate the number of bad carrots:\n    bad_carrots = total_carrots - good_carrots\n    return bad_carrots\nans = solver()", "answer": 25.0}
{"question": " For the school bake sale Katie made pastries. She baked 7 cupcakes and 5 cookies. After the sale she had 8 to take back home. How many pastries did she sell? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For the school bake sale Katie made pastries. She baked 7 cupcakes and 5 cookies. After the sale she had 8 to take back home. How many pastries did she sell?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cupcakes = 7\n    cookies = 5\n    pastries = cupcakes + cookies\n    print(\"In the first step, we have {} cupcakes, {} cookies, and {} pastries.\".format(cupcakes, cookies, pastries))\n    # In the second step, we can define the following variable:\n    sold = pastries - 8\n    print(\"In the second step, we have sold {} pastries.\".format(sold))\n    return sold\nans = solver()", "answer": 4.0}
{"question": " Zoe bought two coloring books. One had 44 pictures and the other had 44. After one week she had already colored 20 of the pictures. How many pictures does she still have to color? ", "executed": 68.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Zoe bought two coloring books. One had 44 pictures and the other had 44. After one week she had already colored 20 of the pictures. How many pictures does she still have to color?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_pictures_in_book1 = 44\n    num_pictures_in_book2 = 44\n    num_pictures_colored = 20\n    num_pictures_to_color = num_pictures_in_book1 + num_pictures_in_book2 - num_pictures_colored\n    return num_pictures_to_color\nans = solver()", "answer": 68.0}
{"question": " John was trying to expand his game collection. He bought 21 games from a friend and bought 8 more at a garage sale. If 23 of the games didn't work, how many good games did he end up with? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: John was trying to expand his game collection. He bought 21 games from a friend and bought 8 more at a garage sale. If 23 of the games didn't work, how many good games did he end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    games_bought_from_friend = 21\n    games_bought_from_garage_sale = 8\n    games_not_working = 23\n    # In the second step, we can define the following variable:\n    games_bought = games_bought_from_friend + games_bought_from_garage_sale\n    games_working = games_bought - games_not_working\n    return games_working\nans = solver()", "answer": 6.0}
{"question": " Henry had 11 dollars. For his birthday he got 18 more dollars but spent 10 on a new game. How much money does he have now? ", "executed": 19.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Henry had 11 dollars. For his birthday he got 18 more dollars but spent 10 on a new game. How much money does he have now?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    henry_dollars = 11\n    # In the second step, we can define the following variable:\n    henry_dollars = henry_dollars + 18\n    # In the third step, we can define the following variable:\n    henry_dollars = henry_dollars - 10\n    return henry_dollars\nans = solver()", "answer": 19.0}
{"question": " While on vacation, Gwen took 41 pictures at the zoo and 29 at the museum. If she later deleted 15 of the pictures, how many pictures from her vacation did she still have? ", "executed": 55.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While on vacation, Gwen took 41 pictures at the zoo and 29 at the museum. If she later deleted 15 of the pictures, how many pictures from her vacation did she still have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    zoo_pictures = 41\n    museum_pictures = 29\n    deleted_pictures = 15\n    # In the second step, we can calculate the total number of pictures:\n    total_pictures = zoo_pictures + museum_pictures\n    # In the third step, we can calculate the number of pictures that Gwen still has:\n    remaining_pictures = total_pictures - deleted_pictures\n    return remaining_pictures\nans = solver()", "answer": 55.0}
{"question": " Sam had to wash 40 short sleeve shirts and 23 long sleeve shirts before school. If he had only washed 29 of them by the time school started, how many did he not wash? ", "executed": 34.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Sam had to wash 40 short sleeve shirts and 23 long sleeve shirts before school. If he had only washed 29 of them by the time school started, how many did he not wash?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    short_sleeve_shirts = 40\n    long_sleeve_shirts = 23\n    washed_shirts = 29\n    # In the second step, we can define the following variable:\n    total_shirts = short_sleeve_shirts + long_sleeve_shirts\n    # In the third step, we can define the following variable:\n    unwashed_shirts = total_shirts - washed_shirts\n    return unwashed_shirts\nans = solver()", "answer": 34.0}
{"question": " A pet store had 12 siamese cats and 20 house cats. During a sale they sold 20 cats. How many cats do they have left? ", "executed": 12.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet store had 12 siamese cats and 20 house cats. During a sale they sold 20 cats. How many cats do they have left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    siamese_cats = 12\n    house_cats = 20\n    sold_cats = 20\n    # In the second step, we can calculate the number of cats left:\n    cats_left = siamese_cats + house_cats - sold_cats\n    return cats_left\nans = solver()", "answer": 12.0}
{"question": " Faye and her mom were picking carrots from their garden. Faye picked 23 and her mother picked 5. If only 12 of the carrots were good, how many bad carrots did they have? ", "executed": 16.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Faye and her mom were picking carrots from their garden. Faye picked 23 and her mother picked 5. If only 12 of the carrots were good, how many bad carrots did they have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    good_carrots = 12\n    bad_carrots = 0\n    total_carrots = 0\n    faye_carrots = 23\n    mom_carrots = 5\n    total_carrots = faye_carrots + mom_carrots\n    bad_carrots = total_carrots - good_carrots\n    return bad_carrots\nans = solver()", "answer": 16.0}
{"question": " The school cafeteria ordered 43 red apples and 32 green apples for students lunches. But, if only 2 students wanted fruit, how many extra did the cafeteria end up with? ", "executed": 73.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school cafeteria ordered 43 red apples and 32 green apples for students lunches. But, if only 2 students wanted fruit, how many extra did the cafeteria end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    red_apples = 43\n    green_apples = 32\n    total_apples = red_apples + green_apples\n    students_wanted_fruit = 2\n    extra_apples = total_apples - students_wanted_fruit\n    return extra_apples\nans = solver()", "answer": 73.0}
{"question": " There were 39 girls and 4 boys trying out for the schools basketball team. If only 26 of them got called back, how many students didn't make the cut? ", "executed": 17.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 39 girls and 4 boys trying out for the schools basketball team. If only 26 of them got called back, how many students didn't make the cut?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    girls = 39\n    boys = 4\n    total_students = girls + boys\n    students_called_back = 26\n    students_not_called_back = total_students - students_called_back\n    return students_not_called_back\nans = solver()", "answer": 17.0}
{"question": " A pet store had 38 siamese cats and 25 house cats. During a sale they sold 45 cats. How many cats do they have left? ", "executed": 18.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet store had 38 siamese cats and 25 house cats. During a sale they sold 45 cats. How many cats do they have left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    siamese_cats = 38\n    house_cats = 25\n    sold_cats = 45\n    # In the second step, we can calculate the total number of cats in the pet store:\n    total_cats = siamese_cats + house_cats\n    # In the third step, we can calculate the number of cats left in the pet store:\n    cats_left = total_cats - sold_cats\n    return cats_left\nans = solver()", "answer": 18.0}
{"question": " For the school bake sale Paige made pastries. She baked 36 cupcakes and 9 cookies. After the sale she had 4 to take back home. How many pastries did she sell? ", "executed": 41.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For the school bake sale Paige made pastries. She baked 36 cupcakes and 9 cookies. After the sale she had 4 to take back home. How many pastries did she sell?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cupcakes = 36\n    cookies = 9\n    pastries = cupcakes + cookies\n    print(\"Total pastries:\", pastries)\n    # In the second step, we can define the following variable:\n    sold = pastries - 4\n    print(\"Sold:\", sold)\n    return sold\nans = solver()", "answer": 41.0}
{"question": " Carol was playing a trivia game. In the first round she scored 17 points and in the second round she scored 6 points. In the last round she lost 16 points. How many points did she have at the end of the game? ", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Carol was playing a trivia game. In the first round she scored 17 points and in the second round she scored 6 points. In the last round she lost 16 points. How many points did she have at the end of the game?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    first_round = 17\n    second_round = 6\n    last_round = 16\n    # In the second step, we can define the following variable:\n    total_points = first_round + second_round - last_round\n    return total_points\nans = solver()", "answer": 7.0}
{"question": " Gwen bought two coloring books. One had 10 pictures and the other had 39. After one week she had already colored 13 of the pictures. How many pictures does she still have to color? ", "executed": 36.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Gwen bought two coloring books. One had 10 pictures and the other had 39. After one week she had already colored 13 of the pictures. How many pictures does she still have to color?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_pictures_in_book1 = 10\n    num_pictures_in_book2 = 39\n    num_pictures_colored = 13\n    # In the second step, we can calculate the number of pictures left to color:\n    num_pictures_left = num_pictures_in_book1 + num_pictures_in_book2 - num_pictures_colored\n    # In the third step, we can return the answer:\n    return num_pictures_left\nans = solver()", "answer": 36.0}
{"question": " For Halloween Janet and her sister combined the candy they received. Janet had 34 pieces of candy while her sister had 33. If they ate 4 pieces the first night, how many pieces do they have left? ", "executed": 63.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For Halloween Janet and her sister combined the candy they received. Janet had 34 pieces of candy while her sister had 33. If they ate 4 pieces the first night, how many pieces do they have left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    candy_janet = 34\n    candy_sister = 33\n    candy_eaten = 4\n    candy_left = candy_janet + candy_sister - candy_eaten\n    return candy_left\nans = solver()", "answer": 63.0}
{"question": " Haley and her mom were picking carrots from their garden. Haley picked 39 and her mother picked 38. If only 64 of the carrots were good, how many bad carrots did they have? ", "executed": 13.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Haley and her mom were picking carrots from their garden. Haley picked 39 and her mother picked 38. If only 64 of the carrots were good, how many bad carrots did they have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    haley = 39\n    mom = 38\n    good = 64\n    bad = 0\n    # In the second step, we can calculate the bad carrots by using the following equation:\n    bad = haley + mom - good\n    return bad\nans = solver()", "answer": 13.0}
{"question": " There were 30 girls and 36 boys trying out for the schools basketball team. If only 10 of them got called back, how many students didn't make the cut? ", "executed": 56.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 30 girls and 36 boys trying out for the schools basketball team. If only 10 of them got called back, how many students didn't make the cut?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_students = 30 + 36\n    print(\"Total students: \", total_students)\n    # In the second step, we can define the following variable:\n    students_called_back = 10\n    print(\"Students called back: \", students_called_back)\n    # In the third step, we can define the following variable:\n    students_not_called_back = total_students - students_called_back\n    print(\"Students not called back: \", students_not_called_back)\n    return students_not_called_back\nans = solver()", "answer": 56.0}
{"question": " Roger had 29 dollars. For his birthday he got 20 more dollars but spent 34 on a new game. How much money does he have now? ", "executed": 15.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Roger had 29 dollars. For his birthday he got 20 more dollars but spent 34 on a new game. How much money does he have now?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    roger_dollars = 29\n    # In the second step, we can define the following variable:\n    roger_dollars = roger_dollars + 20\n    # In the third step, we can define the following variable:\n    roger_dollars = roger_dollars - 34\n    return roger_dollars\nans = solver()", "answer": 15.0}
{"question": " Dave had to wash 29 short sleeve shirts and 11 long sleeve shirts before school. If he had only washed 35 of them by the time school started, how many did he not wash? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dave had to wash 29 short sleeve shirts and 11 long sleeve shirts before school. If he had only washed 35 of them by the time school started, how many did he not wash?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    short_sleeve_shirts = 29\n    long_sleeve_shirts = 11\n    total_shirts = short_sleeve_shirts + long_sleeve_shirts\n    washed_shirts = 35\n    not_washed_shirts = total_shirts - washed_shirts\n    return not_washed_shirts\nans = solver()", "answer": 5.0}
{"question": " Edward was trying to expand his game collection. He bought 41 games from a friend and bought 14 more at a garage sale. If 31 of the games didn't work, how many good games did he end up with? ", "executed": 24.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Edward was trying to expand his game collection. He bought 41 games from a friend and bought 14 more at a garage sale. If 31 of the games didn't work, how many good games did he end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_games_bought_from_friend = 41\n    num_games_bought_from_garage_sale = 14\n    num_games_not_working = 31\n    # In the second step, we can define the following variable:\n    num_games_working = num_games_bought_from_friend + num_games_bought_from_garage_sale - num_games_not_working\n    return num_games_working\nans = solver()", "answer": 24.0}
{"question": " At the schools book fair Sam bought 13 adventure books and 17 mystery books. If 15 of the books were used, how many new books did he buy? ", "executed": 15.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the schools book fair Sam bought 13 adventure books and 17 mystery books. If 15 of the books were used, how many new books did he buy?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    used = 15\n    # In the second step, we can define the following variable:\n    new = 13 + 17 - used\n    return new\nans = solver()", "answer": 15.0}
{"question": " Amy had 26 music files and 36 video files on her flash drive. If she deleted 48 of the files, how many files were still on her flash drive? ", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Amy had 26 music files and 36 video files on her flash drive. If she deleted 48 of the files, how many files were still on her flash drive?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    music_files = 26\n    video_files = 36\n    total_files = music_files + video_files\n    print(\"Total files: \", total_files)\n    # In the second step, we can define the following variable:\n    deleted_files = 48\n    print(\"Deleted files: \", deleted_files)\n    # In the third step, we can define the following variable:\n    remaining_files = total_files - deleted_files\n    print(\"Remaining files: \", remaining_files)\n    return remaining_files\nans = solver()", "answer": 14.0}
{"question": " Oliver had 35 dollars. For his birthday he got 50 more dollars but spent 84 on a new game. How much money does he have now? ", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Oliver had 35 dollars. For his birthday he got 50 more dollars but spent 84 on a new game. How much money does he have now?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    oliver_had = 35\n    # In the second step, we can define the following variable:\n    oliver_got = 50\n    # In the third step, we can define the following variable:\n    oliver_spent = 84\n    # In the fourth step, we can define the following variable:\n    oliver_has = oliver_had + oliver_got - oliver_spent\n    return oliver_has\nans = solver()", "answer": 1.0}
{"question": " Emily was playing a trivia game. In the first round she scored 16 points and in the second round she scored 33 points. In the last round she lost 48 points. How many points did she have at the end of the game? ", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Emily was playing a trivia game. In the first round she scored 16 points and in the second round she scored 33 points. In the last round she lost 48 points. How many points did she have at the end of the game?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    first_round = 16\n    second_round = 33\n    last_round = 48\n    # In the second step, we can define the following variable:\n    total_points = first_round + second_round - last_round\n    return total_points\nans = solver()", "answer": 1.0}
{"question": " Paige had 43 math problems and 12 science problems for homework. If she finished 44 of the problems at school, how many problems did she have to do for homework? ", "executed": 11.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paige had 43 math problems and 12 science problems for homework. If she finished 44 of the problems at school, how many problems did she have to do for homework?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    math_problems = 43\n    science_problems = 12\n    problems_finished_at_school = 44\n    # In the second step, we can define the following variable:\n    problems_finished_at_home = math_problems + science_problems - problems_finished_at_school\n    return problems_finished_at_home\nans = solver()", "answer": 11.0}
{"question": " The school cafeteria ordered 33 red apples and 23 green apples for students lunches. But, if only 21 students wanted fruit, how many extra did the cafeteria end up with? ", "executed": 35.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school cafeteria ordered 33 red apples and 23 green apples for students lunches. But, if only 21 students wanted fruit, how many extra did the cafeteria end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    red_apples = 33\n    green_apples = 23\n    students_wanted_fruit = 21\n    # Now, we can calculate the total number of apples ordered:\n    total_apples = red_apples + green_apples\n    # Now, we can calculate the number of apples that were not eaten:\n    apples_not_eaten = total_apples - students_wanted_fruit\n    return apples_not_eaten\nans = solver()", "answer": 35.0}
{"question": " Dave had to wash 9 short sleeve shirts and 27 long sleeve shirts before school. If he had only washed 20 of them by the time school started, how many did he not wash? ", "executed": 16.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dave had to wash 9 short sleeve shirts and 27 long sleeve shirts before school. If he had only washed 20 of them by the time school started, how many did he not wash?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    short_sleeve_shirts = 9\n    long_sleeve_shirts = 27\n    total_shirts = short_sleeve_shirts + long_sleeve_shirts\n    washed_shirts = 20\n    not_washed_shirts = total_shirts - washed_shirts\n    return not_washed_shirts\nans = solver()", "answer": 16.0}
{"question": " While on vacation, Rachel took 6 pictures at the zoo and 9 at the museum. If she later deleted 11 of the pictures, how many pictures from her vacation did she still have? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While on vacation, Rachel took 6 pictures at the zoo and 9 at the museum. If she later deleted 11 of the pictures, how many pictures from her vacation did she still have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    zoo_pictures = 6\n    museum_pictures = 9\n    deleted_pictures = 11\n    # In the second step, we can define the following variable:\n    total_pictures = zoo_pictures + museum_pictures\n    # In the third step, we can define the following variable:\n    remaining_pictures = total_pictures - deleted_pictures\n    return remaining_pictures\nans = solver()", "answer": 4.0}
{"question": " Vanessa and her mom were picking carrots from their garden. Vanessa picked 17 and her mother picked 14. If only 24 of the carrots were good, how many bad carrots did they have? ", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Vanessa and her mom were picking carrots from their garden. Vanessa picked 17 and her mother picked 14. If only 24 of the carrots were good, how many bad carrots did they have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    good_carrots = 24\n    bad_carrots = 0\n    vanessa_carrots = 17\n    mom_carrots = 14\n    total_carrots = vanessa_carrots + mom_carrots\n    # Now, we can calculate the number of bad carrots:\n    bad_carrots = total_carrots - good_carrots\n    return bad_carrots\nans = solver()", "answer": 7.0}
{"question": " A pet store had 41 siamese cats and 28 house cats. During a sale they sold 15 cats. How many cats do they have left? ", "executed": 54.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet store had 41 siamese cats and 28 house cats. During a sale they sold 15 cats. How many cats do they have left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    siamese_cats = 41\n    house_cats = 28\n    sold_cats = 15\n    # In the second step, we can calculate the total number of cats:\n    total_cats = siamese_cats + house_cats\n    # In the third step, we can calculate the number of cats left:\n    cats_left = total_cats - sold_cats\n    return cats_left\nans = solver()", "answer": 54.0}
{"question": " At the schools book fair Sam bought 13 adventure books and 17 mystery books. If 15 of the books were used, how many new books did he buy? ", "executed": 15.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the schools book fair Sam bought 13 adventure books and 17 mystery books. If 15 of the books were used, how many new books did he buy?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    used = 15\n    # In the second step, we can define the following variable:\n    new = 13 + 17 - used\n    return new\nans = solver()", "answer": 15.0}
{"question": " Amy had 26 music files and 36 video files on her flash drive. If she deleted 48 of the files, how many files were still on her flash drive? ", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Amy had 26 music files and 36 video files on her flash drive. If she deleted 48 of the files, how many files were still on her flash drive?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    music_files = 26\n    video_files = 36\n    total_files = music_files + video_files\n    print(\"Total files: \", total_files)\n    # In the second step, we can define the following variable:\n    deleted_files = 48\n    print(\"Deleted files: \", deleted_files)\n    # In the third step, we can define the following variable:\n    remaining_files = total_files - deleted_files\n    print(\"Remaining files: \", remaining_files)\n    return remaining_files\nans = solver()", "answer": 14.0}
{"question": " Oliver had 35 dollars. For his birthday he got 50 more dollars but spent 84 on a new game. How much money does he have now? ", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Oliver had 35 dollars. For his birthday he got 50 more dollars but spent 84 on a new game. How much money does he have now?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    oliver_had = 35\n    # In the second step, we can define the following variable:\n    oliver_got = 50\n    # In the third step, we can define the following variable:\n    oliver_spent = 84\n    # In the fourth step, we can define the following variable:\n    oliver_has = oliver_had + oliver_got - oliver_spent\n    return oliver_has\nans = solver()", "answer": 1.0}
{"question": " Emily was playing a trivia game. In the first round she scored 16 points and in the second round she scored 33 points. In the last round she lost 48 points. How many points did she have at the end of the game? ", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Emily was playing a trivia game. In the first round she scored 16 points and in the second round she scored 33 points. In the last round she lost 48 points. How many points did she have at the end of the game?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    first_round = 16\n    second_round = 33\n    last_round = 48\n    # In the second step, we can define the following variable:\n    total_points = first_round + second_round - last_round\n    return total_points\nans = solver()", "answer": 1.0}
{"question": " Paige had 43 math problems and 12 science problems for homework. If she finished 44 of the problems at school, how many problems did she have to do for homework? ", "executed": 11.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paige had 43 math problems and 12 science problems for homework. If she finished 44 of the problems at school, how many problems did she have to do for homework?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    math_problems = 43\n    science_problems = 12\n    problems_finished_at_school = 44\n    problems_finished_at_home = 0\n    total_problems = math_problems + science_problems\n    problems_left = total_problems - problems_finished_at_school\n    problems_finished_at_home = problems_left\n    return problems_finished_at_home\nans = solver()", "answer": 11.0}
{"question": " The school cafeteria ordered 33 red apples and 23 green apples for students lunches. But, if only 21 students wanted fruit, how many extra did the cafeteria end up with? ", "executed": 35.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school cafeteria ordered 33 red apples and 23 green apples for students lunches. But, if only 21 students wanted fruit, how many extra did the cafeteria end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    red_apples = 33\n    green_apples = 23\n    students_wanted_fruit = 21\n    # Now, we can calculate the total number of apples ordered:\n    total_apples = red_apples + green_apples\n    # Now, we can calculate the number of apples that were not eaten:\n    apples_not_eaten = total_apples - students_wanted_fruit\n    return apples_not_eaten\nans = solver()", "answer": 35.0}
{"question": " Dave had to wash 9 short sleeve shirts and 27 long sleeve shirts before school. If he had only washed 20 of them by the time school started, how many did he not wash? ", "executed": 16.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dave had to wash 9 short sleeve shirts and 27 long sleeve shirts before school. If he had only washed 20 of them by the time school started, how many did he not wash?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    short_sleeve_shirts = 9\n    long_sleeve_shirts = 27\n    total_shirts = short_sleeve_shirts + long_sleeve_shirts\n    washed_shirts = 20\n    not_washed_shirts = total_shirts - washed_shirts\n    return not_washed_shirts\nans = solver()", "answer": 16.0}
{"question": " While on vacation, Rachel took 6 pictures at the zoo and 9 at the museum. If she later deleted 11 of the pictures, how many pictures from her vacation did she still have? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While on vacation, Rachel took 6 pictures at the zoo and 9 at the museum. If she later deleted 11 of the pictures, how many pictures from her vacation did she still have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    zoo_pictures = 6\n    museum_pictures = 9\n    deleted_pictures = 11\n    # In the second step, we can define the following variable:\n    total_pictures = zoo_pictures + museum_pictures\n    # In the third step, we can define the following variable:\n    remaining_pictures = total_pictures - deleted_pictures\n    return remaining_pictures\nans = solver()", "answer": 4.0}
{"question": " Vanessa and her mom were picking carrots from their garden. Vanessa picked 17 and her mother picked 14. If only 24 of the carrots were good, how many bad carrots did they have? ", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Vanessa and her mom were picking carrots from their garden. Vanessa picked 17 and her mother picked 14. If only 24 of the carrots were good, how many bad carrots did they have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    good_carrots = 24\n    bad_carrots = 0\n    vanessa_carrots = 17\n    mom_carrots = 14\n    total_carrots = vanessa_carrots + mom_carrots\n    # Now, we can calculate the number of bad carrots:\n    bad_carrots = total_carrots - good_carrots\n    return bad_carrots\nans = solver()", "answer": 7.0}
{"question": " A pet store had 41 siamese cats and 28 house cats. During a sale they sold 15 cats. How many cats do they have left? ", "executed": 54.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet store had 41 siamese cats and 28 house cats. During a sale they sold 15 cats. How many cats do they have left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    siamese_cats = 41\n    house_cats = 28\n    sold_cats = 15\n    # In the second step, we can calculate the total number of cats:\n    total_cats = siamese_cats + house_cats\n    # In the third step, we can calculate the number of cats left:\n    cats_left = total_cats - sold_cats\n    return cats_left\nans = solver()", "answer": 54.0}
{"question": " Janet picked 4 tulips and 11 roses to make flower bouquets. If she only used 11 of the flowers though, how many extra flowers did Janet pick? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Janet picked 4 tulips and 11 roses to make flower bouquets. If she only used 11 of the flowers though, how many extra flowers did Janet pick?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    tulips = 4\n    roses = 11\n    flowers_used = 11\n    # In the second step, we can calculate the extra flowers picked by Janet:\n    extra_flowers = tulips + roses - flowers_used\n    return extra_flowers\nans = solver()", "answer": 4.0}
{"question": " Vanessa had 13 music files and 30 video files on her flash drive. If she deleted 10 of the files, how many files were still on her flash drive? ", "executed": 33.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Vanessa had 13 music files and 30 video files on her flash drive. If she deleted 10 of the files, how many files were still on her flash drive?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_music_files = 13\n    num_video_files = 30\n    num_files_deleted = 10\n    num_files_remaining = num_music_files + num_video_files - num_files_deleted\n    return num_files_remaining\nans = solver()", "answer": 33.0}
{"question": " Debby bought two coloring books. One had 16 pictures and the other had 40. After one week she had already colored 33 of the pictures. How many pictures does she still have to color? ", "executed": 23.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Debby bought two coloring books. One had 16 pictures and the other had 40. After one week she had already colored 33 of the pictures. How many pictures does she still have to color?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    pictures_colored = 33\n    pictures_remaining = 0\n    pictures_total = 0\n    pictures_total = pictures_total + 16 + 40\n    pictures_remaining = pictures_total - pictures_colored\n    return pictures_remaining\nans = solver()", "answer": 23.0}
{"question": " The school cafeteria ordered 8 red apples and 43 green apples for students lunches. But, if only 42 students wanted fruit, how many extra did the cafeteria end up with? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school cafeteria ordered 8 red apples and 43 green apples for students lunches. But, if only 42 students wanted fruit, how many extra did the cafeteria end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    red_apples = 8\n    green_apples = 43\n    students_wanted_fruit = 42\n    # Now, we can calculate the total number of apples:\n    total_apples = red_apples + green_apples\n    # Now, we can calculate the number of apples that were not eaten:\n    apples_not_eaten = total_apples - students_wanted_fruit\n    return apples_not_eaten\nans = solver()", "answer": 9.0}
{"question": " Edward started his own lawn mowing business. In the spring he made 2 dollars mowing lawns and in the summer he made 27 dollars. If he had to spend 5 dollars buying supplies, how much money did he end up with? ", "executed": 19.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Edward started his own lawn mowing business. In the spring he made 2 dollars mowing lawns and in the summer he made 27 dollars. If he had to spend 5 dollars buying supplies, how much money did he end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    spring = 2\n    summer = 27\n    supplies = 5\n    # In the second step, we can define the following variable:\n    total_spring = spring - supplies\n    total_summer = summer - supplies\n    # In the third step, we can define the following variable:\n    total_spring_summer = total_spring + total_summer\n    # In the fourth step, we can return the answer:\n    return total_spring_summer\nans = solver()", "answer": 24.0}
{"question": " A pet store had 36 siamese cats and 18 house cats. During a sale they sold 26 cats. How many cats do they have left? ", "executed": 28.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet store had 36 siamese cats and 18 house cats. During a sale they sold 26 cats. How many cats do they have left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    siamese_cats = 36\n    house_cats = 18\n    sold_cats = 26\n    # In the second step, we can calculate the total number of cats:\n    total_cats = siamese_cats + house_cats\n    # In the third step, we can calculate the number of cats left:\n    cats_left = total_cats - sold_cats\n    return cats_left\nans = solver()", "answer": 28.0}
{"question": " Olivia and her mom were picking carrots from their garden. Olivia picked 20 and her mother picked 14. If only 19 of the carrots were good, how many bad carrots did they have? ", "executed": 15.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Olivia and her mom were picking carrots from their garden. Olivia picked 20 and her mother picked 14. If only 19 of the carrots were good, how many bad carrots did they have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    good_carrots = 19\n    # In the second step, we can define the following variable:\n    bad_carrots = 0\n    # In the third step, we can define the following variable:\n    total_carrots = good_carrots + bad_carrots\n    # In the fourth step, we can define the following variable:\n    olivia_carrots = 20\n    # In the fifth step, we can define the following variable:\n    mom_carrots = 14\n    # In the sixth step, we can define the following variable:\n    total_picked_carrots = olivia_carrots + mom_carrots\n    # In the seventh step, we can define the following variable:\n    bad_carrots = total_picked_carrots - good_carrots\n    return bad_carrots\nans = solver()", "answer": 15.0}
{"question": " George had 30 dollars. For his birthday he got 16 more dollars but spent 38 on a new game. How much money does he have now? ", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: George had 30 dollars. For his birthday he got 16 more dollars but spent 38 on a new game. How much money does he have now?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    x = 30\n    # In the second step, we can define the following variable:\n    y = 16\n    # In the third step, we can define the following variable:\n    z = 38\n    # In the fourth step, we can define the following variable:\n    a = x + y\n    # In the fifth step, we can define the following variable:\n    b = a - z\n    return b\nans = solver()", "answer": 8.0}
{"question": " There were 6 girls and 48 boys trying out for the schools basketball team. If only 7 of them got called back, how many students didn't make the cut? ", "executed": 47.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 6 girls and 48 boys trying out for the schools basketball team. If only 7 of them got called back, how many students didn't make the cut?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    girls = 6\n    boys = 48\n    total_students = girls + boys\n    print(\"Total students: \", total_students)\n    # In the second step, we can define the following variable:\n    called_back = 7\n    print(\"Called back: \", called_back)\n    # In the third step, we can define the following variable:\n    not_called_back = total_students - called_back\n    print(\"Not called back: \", not_called_back)\n    return not_called_back\nans = solver()", "answer": 47.0}
{"question": " For the school bake sale Amy made pastries. She baked 15 cupcakes and 48 cookies. After the sale she had 12 to take back home. How many pastries did she sell? ", "executed": 51.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For the school bake sale Amy made pastries. She baked 15 cupcakes and 48 cookies. After the sale she had 12 to take back home. How many pastries did she sell?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cupcakes = 15\n    cookies = 48\n    pastries = cupcakes + cookies\n    print(\"Total pastries:\", pastries)\n    # In the second step, we can define the following variable:\n    sold = pastries - 12\n    print(\"Sold:\", sold)\n    return sold\nans = solver()", "answer": 51.0}
{"question": " At the schools book fair Victor bought 32 adventure books and 37 mystery books. If 16 of the books were used, how many new books did he buy? ", "executed": 53.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the schools book fair Victor bought 32 adventure books and 37 mystery books. If 16 of the books were used, how many new books did he buy?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    used = 16\n    # In the second step, we can define the following variable:\n    total = 32 + 37\n    # In the third step, we can define the following variable:\n    new = total - used\n    return new\nans = solver()", "answer": 53.0}
{"question": " While on vacation, Haley took 50 pictures at the zoo and 8 at the museum. If she later deleted 38 of the pictures, how many pictures from her vacation did she still have? ", "executed": 20.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While on vacation, Haley took 50 pictures at the zoo and 8 at the museum. If she later deleted 38 of the pictures, how many pictures from her vacation did she still have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    zoo_pictures = 50\n    museum_pictures = 8\n    deleted_pictures = 38\n    # In the second step, we can define the following variable:\n    total_pictures = zoo_pictures + museum_pictures\n    # In the third step, we can define the following variable:\n    remaining_pictures = total_pictures - deleted_pictures\n    return remaining_pictures\nans = solver()", "answer": 20.0}
{"question": " The school cafeteria ordered 37 red apples and 45 green apples for students lunches. But, if only 51 students wanted fruit, how many extra did the cafeteria end up with? ", "executed": 31.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school cafeteria ordered 37 red apples and 45 green apples for students lunches. But, if only 51 students wanted fruit, how many extra did the cafeteria end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    red_apples = 37\n    green_apples = 45\n    students_wanted_fruit = 51\n    # Now, we can calculate the total number of apples ordered:\n    total_apples = red_apples + green_apples\n    # Now, we can calculate the number of apples that were not eaten:\n    apples_not_eaten = total_apples - students_wanted_fruit\n    return apples_not_eaten\nans = solver()", "answer": 31.0}
{"question": " While shopping, Maria bought 35 green towels and 21 white towels. If she gave her mother 34 of them, how many towels did Maria end up with? ", "executed": 22.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While shopping, Maria bought 35 green towels and 21 white towels. If she gave her mother 34 of them, how many towels did Maria end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    green_towels = 35\n    white_towels = 21\n    towels_given = 34\n    # In the second step, we can calculate the total number of towels:\n    total_towels = green_towels + white_towels\n    # In the third step, we can calculate the number of towels that Maria ended up with:\n    towels_left = total_towels - towels_given\n    return towels_left\nans = solver()", "answer": 22.0}
{"question": " There were 17 girls and 32 boys trying out for the schools basketball team. If only 10 of them got called back, how many students didn't make the cut? ", "executed": 39.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 17 girls and 32 boys trying out for the schools basketball team. If only 10 of them got called back, how many students didn't make the cut?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    girls = 17\n    boys = 32\n    total_students = girls + boys\n    students_called_back = 10\n    students_not_called_back = total_students - students_called_back\n    return students_not_called_back\nans = solver()", "answer": 39.0}
{"question": " Nancy and her mom were picking carrots from their garden. Nancy picked 38 and her mother picked 47. If only 71 of the carrots were good, how many bad carrots did they have? ", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Nancy and her mom were picking carrots from their garden. Nancy picked 38 and her mother picked 47. If only 71 of the carrots were good, how many bad carrots did they have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    nancy_carrots = 38\n    mom_carrots = 47\n    good_carrots = 71\n    bad_carrots = 0\n    total_carrots = 0\n    # In the second step, we can calculate the total number of carrots:\n    total_carrots = nancy_carrots + mom_carrots\n    # In the third step, we can calculate the number of bad carrots:\n    bad_carrots = total_carrots - good_carrots\n    return bad_carrots\nans = solver()", "answer": 14.0}
{"question": " A waiter at 'The Greasy Spoon' restaurant had 29 customers to wait on. During the lunch rush he added another 20 customers. If 34 of the customers didn't leave him a tip, how many customers did leave a tip? ", "executed": 15.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter at 'The Greasy Spoon' restaurant had 29 customers to wait on. During the lunch rush he added another 20 customers. If 34 of the customers didn't leave him a tip, how many customers did leave a tip?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_customers_before_lunch_rush = 29\n    num_customers_after_lunch_rush = num_customers_before_lunch_rush + 20\n    num_customers_who_did_not_leave_a_tip = 34\n    num_customers_who_left_a_tip = num_customers_after_lunch_rush - num_customers_who_did_not_leave_a_tip\n    return num_customers_who_left_a_tip\nans = solver()", "answer": 15.0}
{"question": " Tom had to wash 10 short sleeve shirts and 25 long sleeve shirts before school. If he had only washed 5 of them by the time school started, how many did he not wash? ", "executed": 30.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Tom had to wash 10 short sleeve shirts and 25 long sleeve shirts before school. If he had only washed 5 of them by the time school started, how many did he not wash?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    short_sleeve_shirts = 10\n    long_sleeve_shirts = 25\n    washed_shirts = 5\n    # In the second step, we can define the following variable:\n    total_shirts = short_sleeve_shirts + long_sleeve_shirts\n    # In the third step, we can define the following variable:\n    unwashed_shirts = total_shirts - washed_shirts\n    return unwashed_shirts\nans = solver()", "answer": 30.0}
{"question": " Vanessa had 16 music files and 48 video files on her flash drive. If she deleted 30 of the files, how many files were still on her flash drive? ", "executed": 34.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Vanessa had 16 music files and 48 video files on her flash drive. If she deleted 30 of the files, how many files were still on her flash drive?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    music_files = 16\n    video_files = 48\n    total_files = music_files + video_files\n    deleted_files = 30\n    remaining_files = total_files - deleted_files\n    return remaining_files\nans = solver()", "answer": 34.0}
{"question": " Kaleb started his own lawn mowing business. In the spring he made 4 dollars mowing lawns and in the summer he made 50 dollars. If he had to spend 4 dollars buying supplies, how much money did he end up with? ", "executed": 50.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Kaleb started his own lawn mowing business. In the spring he made 4 dollars mowing lawns and in the summer he made 50 dollars. If he had to spend 4 dollars buying supplies, how much money did he end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    spring_income = 4\n    summer_income = 50\n    supplies_cost = 4\n    # In the second step, we can calculate the total income:\n    total_income = spring_income + summer_income\n    # In the third step, we can calculate the total cost:\n    total_cost = supplies_cost\n    # In the fourth step, we can calculate the total profit:\n    total_profit = total_income - total_cost\n    # In the fifth step, we can return the total profit:\n    return total_profit\nans = solver()", "answer": 50.0}
{"question": " The school cafeteria ordered 6 red apples and 15 green apples for students lunches. But, if only 5 students wanted fruit, how many extra did the cafeteria end up with? ", "executed": 16.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school cafeteria ordered 6 red apples and 15 green apples for students lunches. But, if only 5 students wanted fruit, how many extra did the cafeteria end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    red_apples = 6\n    green_apples = 15\n    students_wanted_fruit = 5\n    # Now, we can calculate the total number of apples:\n    total_apples = red_apples + green_apples\n    # Now, we can calculate the number of apples that were actually eaten:\n    apples_eaten = students_wanted_fruit\n    # Now, we can calculate the number of apples that were left over:\n    apples_left_over = total_apples - apples_eaten\n    return apples_left_over\nans = solver()", "answer": 16.0}
{"question": " Bianca picked 39 tulips and 49 roses to make flower bouquets. If she only used 81 of the flowers though, how many extra flowers did Bianca pick? ", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bianca picked 39 tulips and 49 roses to make flower bouquets. If she only used 81 of the flowers though, how many extra flowers did Bianca pick?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    tulips = 39\n    roses = 49\n    used = 81\n    extra = 0\n    # In the second step, we can calculate the extra flowers by using the following equation:\n    extra = tulips + roses - used\n    return extra\nans = solver()", "answer": 7.0}
{"question": " While on vacation, Nancy took 49 pictures at the zoo and 8 at the museum. If she later deleted 38 of the pictures, how many pictures from her vacation did she still have? ", "executed": 19.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While on vacation, Nancy took 49 pictures at the zoo and 8 at the museum. If she later deleted 38 of the pictures, how many pictures from her vacation did she still have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    zoo_pictures = 49\n    museum_pictures = 8\n    deleted_pictures = 38\n    # In the second step, we can define the following variable:\n    total_pictures = zoo_pictures + museum_pictures\n    # In the third step, we can define the following variable:\n    remaining_pictures = total_pictures - deleted_pictures\n    return remaining_pictures\nans = solver()", "answer": 19.0}
{"question": " Gwen had 18 math problems and 11 science problems for homework. If she finished 24 of the problems at school, how many problems did she have to do for homework? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Gwen had 18 math problems and 11 science problems for homework. If she finished 24 of the problems at school, how many problems did she have to do for homework?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    math_problems = 18\n    science_problems = 11\n    problems_finished_at_school = 24\n    problems_finished_at_home = 0\n    total_problems = math_problems + science_problems\n    problems_left = total_problems - problems_finished_at_school\n    problems_finished_at_home = problems_left\n    return problems_finished_at_home\nans = solver()", "answer": 5.0}
{"question": " For Halloween Katie and her sister combined the candy they received. Katie had 10 pieces of candy while her sister had 6. If they ate 9 pieces the first night, how many pieces do they have left? ", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For Halloween Katie and her sister combined the candy they received. Katie had 10 pieces of candy while her sister had 6. If they ate 9 pieces the first night, how many pieces do they have left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    katie_candy = 10\n    sister_candy = 6\n    eaten_candy = 9\n    # In the second step, we can calculate the total candy:\n    total_candy = katie_candy + sister_candy\n    # In the third step, we can calculate the remaining candy:\n    remaining_candy = total_candy - eaten_candy\n    return remaining_candy\nans = solver()", "answer": 7.0}
{"question": " A pet store had 15 siamese cats and 49 house cats. During a sale they sold 19 cats. How many cats do they have left? ", "executed": 45.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet store had 15 siamese cats and 49 house cats. During a sale they sold 19 cats. How many cats do they have left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    siamese_cats = 15\n    house_cats = 49\n    sold_cats = 19\n    # In the second step, we can calculate the total number of cats:\n    total_cats = siamese_cats + house_cats\n    # In the third step, we can calculate the number of cats left:\n    cats_left = total_cats - sold_cats\n    return cats_left\nans = solver()", "answer": 45.0}
{"question": " There were 9 girls and 14 boys trying out for the schools basketball team. If only 2 of them got called back, how many students didn't make the cut? ", "executed": 21.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 9 girls and 14 boys trying out for the schools basketball team. If only 2 of them got called back, how many students didn't make the cut?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    girls = 9\n    boys = 14\n    total = girls + boys\n    called_back = 2\n    not_called_back = total - called_back\n    return not_called_back\nans = solver()", "answer": 21.0}
{"question": " Haley had 27 music files and 42 video files on her flash drive. If she deleted 11 of the files, how many files were still on her flash drive? ", "executed": 58.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Haley had 27 music files and 42 video files on her flash drive. If she deleted 11 of the files, how many files were still on her flash drive?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_music_files = 27\n    num_video_files = 42\n    num_files_deleted = 11\n    num_files_remaining = num_music_files + num_video_files - num_files_deleted\n    return num_files_remaining\nans = solver()", "answer": 58.0}
{"question": " While shopping, Maria bought 40 green towels and 44 white towels. If she gave her mother 65 of them, how many towels did Maria end up with? ", "executed": 19.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While shopping, Maria bought 40 green towels and 44 white towels. If she gave her mother 65 of them, how many towels did Maria end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    green_towels = 40\n    white_towels = 44\n    towels_given = 65\n    # In the second step, we can calculate the total number of towels Maria bought:\n    total_towels = green_towels + white_towels\n    # In the third step, we can calculate the number of towels Maria ended up with:\n    towels_left = total_towels - towels_given\n    return towels_left\nans = solver()", "answer": 19.0}
{"question": " A waiter at 'The Greasy Spoon' restaurant had 39 customers to wait on. During the lunch rush he added another 12 customers. If 49 of the customers didn't leave him a tip, how many customers did leave a tip? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter at 'The Greasy Spoon' restaurant had 39 customers to wait on. During the lunch rush he added another 12 customers. If 49 of the customers didn't leave him a tip, how many customers did leave a tip?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_customers = 39\n    num_customers_added = 12\n    num_customers_no_tip = 49\n    num_customers_with_tip = num_customers + num_customers_added - num_customers_no_tip\n    return num_customers_with_tip\nans = solver()", "answer": 2.0}
{"question": " A pet store had 19 siamese cats and 45 house cats. During a sale they sold 56 cats. How many cats do they have left? ", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet store had 19 siamese cats and 45 house cats. During a sale they sold 56 cats. How many cats do they have left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    siamese_cats = 19\n    house_cats = 45\n    sold_cats = 56\n    total_cats = siamese_cats + house_cats\n    cats_left = total_cats - sold_cats\n    return cats_left\nans = solver()", "answer": 8.0}
{"question": " A waiter at 'The Greasy Spoon' restaurant had 26 customers to wait on. During the lunch rush he added another 27 customers. If 27 of the customers didn't leave him a tip, how many customers did leave a tip? ", "executed": 26.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter at 'The Greasy Spoon' restaurant had 26 customers to wait on. During the lunch rush he added another 27 customers. If 27 of the customers didn't leave him a tip, how many customers did leave a tip?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_customers_no_tip = 27\n    num_customers_with_tip = 26\n    num_customers_total = num_customers_no_tip + num_customers_with_tip\n    num_customers_with_tip = num_customers_total - num_customers_no_tip\n    return num_customers_with_tip\nans = solver()", "answer": 26.0}
{"question": " Rachel bought two coloring books. One had 24 pictures and the other had 39. After one week she had already colored 4 of the pictures. How many pictures does she still have to color? ", "executed": 59.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel bought two coloring books. One had 24 pictures and the other had 39. After one week she had already colored 4 of the pictures. How many pictures does she still have to color?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_pictures_in_book1 = 24\n    num_pictures_in_book2 = 39\n    num_pictures_colored = 4\n    # In the second step, we can calculate the number of pictures left to color:\n    num_pictures_left = num_pictures_in_book1 + num_pictures_in_book2 - num_pictures_colored\n    # In the third step, we can return the answer:\n    return num_pictures_left\nans = solver()", "answer": 59.0}
{"question": " While shopping, Emily bought 5 green towels and 30 white towels. If she gave her mother 26 of them, how many towels did Emily end up with? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While shopping, Emily bought 5 green towels and 30 white towels. If she gave her mother 26 of them, how many towels did Emily end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    green_towels = 5\n    white_towels = 30\n    total_towels = green_towels + white_towels\n    print(\"Total towels:\", total_towels)\n    # In the second step, we can define the following variable:\n    towels_given = 26\n    print(\"Towels given:\", towels_given)\n    # In the third step, we can define the following variable:\n    towels_left = total_towels - towels_given\n    print(\"Towels left:\", towels_left)\n    return towels_left\nans = solver()", "answer": 9.0}
{"question": " For Halloween Katie and her sister combined the candy they received. Katie had 8 pieces of candy while her sister had 23. If they ate 8 pieces the first night, how many pieces do they have left? ", "executed": 23.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For Halloween Katie and her sister combined the candy they received. Katie had 8 pieces of candy while her sister had 23. If they ate 8 pieces the first night, how many pieces do they have left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    candy_katie = 8\n    candy_sister = 23\n    candy_eaten = 8\n    candy_left = candy_katie + candy_sister - candy_eaten\n    return candy_left\nans = solver()", "answer": 23.0}
{"question": " Ned was trying to expand his game collection. He bought 50 games from a friend and bought 27 more at a garage sale. If 74 of the games didn't work, how many good games did he end up with? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Ned was trying to expand his game collection. He bought 50 games from a friend and bought 27 more at a garage sale. If 74 of the games didn't work, how many good games did he end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_games_bought_from_friend = 50\n    num_games_bought_from_garage_sale = 27\n    num_games_not_working = 74\n    # In the second step, we can define the following variable:\n    num_games_bought = num_games_bought_from_friend + num_games_bought_from_garage_sale\n    num_games_working = num_games_bought - num_games_not_working\n    return num_games_working\nans = solver()", "answer": 3.0}
{"question": " For the school bake sale Wendy made pastries. She baked 41 cupcakes and 31 cookies. After the sale she had 32 to take back home. How many pastries did she sell? ", "executed": 40.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For the school bake sale Wendy made pastries. She baked 41 cupcakes and 31 cookies. After the sale she had 32 to take back home. How many pastries did she sell?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cupcakes = 41\n    cookies = 31\n    pastries = cupcakes + cookies\n    print(\"Total pastries:\", pastries)\n    # In the second step, we can define the following variable:\n    sold = pastries - 32\n    print(\"Sold:\", sold)\n    return sold\nans = solver()", "answer": 40.0}
{"question": " The school cafeteria ordered 25 red apples and 17 green apples for students lunches. But, if only 10 students wanted fruit, how many extra did the cafeteria end up with? ", "executed": 32.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school cafeteria ordered 25 red apples and 17 green apples for students lunches. But, if only 10 students wanted fruit, how many extra did the cafeteria end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    red_apples = 25\n    green_apples = 17\n    students_wanted_fruit = 10\n    # Now, we can calculate the total number of apples:\n    total_apples = red_apples + green_apples\n    # Now, we can calculate the number of extra apples:\n    extra_apples = total_apples - students_wanted_fruit\n    return extra_apples\nans = solver()", "answer": 32.0}
{"question": " At the arcade, Jerry won 29 tickets playing 'whack a mole' and 17 tickets playing 'skee ball'. If he spent 12 of his tickets on a hat, how many tickets does Jerry have left? ", "executed": 34.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the arcade, Jerry won 29 tickets playing 'whack a mole' and 17 tickets playing 'skee ball'. If he spent 12 of his tickets on a hat, how many tickets does Jerry have left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    whack_a_mole_tickets = 29\n    skee_ball_tickets = 17\n    tickets_spent = 12\n    # In the second step, we can add the tickets won from both games:\n    total_tickets = whack_a_mole_tickets + skee_ball_tickets\n    # In the third step, we can subtract the tickets spent from the total tickets:\n    tickets_left = total_tickets - tickets_spent\n    return tickets_left\nans = solver()", "answer": 34.0}
{"question": " Cody had 45 dollars. For his birthday he got 9 more dollars but spent 19 on a new game. How much money does he have now? ", "executed": 35.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Cody had 45 dollars. For his birthday he got 9 more dollars but spent 19 on a new game. How much money does he have now?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cody_money = 45\n    # In the second step, we can define the following variable:\n    cody_money = cody_money + 9\n    # In the third step, we can define the following variable:\n    cody_money = cody_money - 19\n    return cody_money\nans = solver()", "answer": 35.0}
{"question": " For the school bake sale Carol made 30 cupcakes. If she sold 9 of them and then made 28 more, how many cupcakes would she have? ", "executed": 49.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For the school bake sale Carol made 30 cupcakes. If she sold 9 of them and then made 28 more, how many cupcakes would she have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cupcakes_made_1 = 30\n    cupcakes_sold_1 = 9\n    cupcakes_left_1 = cupcakes_made_1 - cupcakes_sold_1\n    print(\"In the first step, Carol made {} cupcakes, sold {} cupcakes, and left {} cupcakes.\".format(cupcakes_made_1, cupcakes_sold_1, cupcakes_left_1))\n    # In the second step, we can define the following variable:\n    cupcakes_made_2 = 28\n    cupcakes_sold_2 = 0\n    cupcakes_left_2 = cupcakes_left_1 + cupcakes_made_2\n    print(\"In the second step, Carol made {} cupcakes, sold {} cupcakes, and left {} cupcakes.\".format(cupcakes_made_2, cupcakes_sold_2, cupcakes_left_2))\n    return cupcakes_left_2\nans = solver()", "answer": 49.0}
{"question": " For Halloween Faye scored 47 pieces of candy. She ate 25 pieces the first night and then her sister gave her 40 more pieces. How many pieces of candy does Faye have now? ", "executed": 62.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For Halloween Faye scored 47 pieces of candy. She ate 25 pieces the first night and then her sister gave her 40 more pieces. How many pieces of candy does Faye have now?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    candy_first_day = 47\n    candy_eaten_first_day = 25\n    candy_second_day = 40\n    # In the second step, we can calculate the number of candy Faye has after the first day:\n    candy_after_first_day = candy_first_day - candy_eaten_first_day\n    # In the third step, we can calculate the number of candy Faye has after the second day:\n    candy_after_second_day = candy_after_first_day + candy_second_day\n    return candy_after_second_day\nans = solver()", "answer": 62.0}
{"question": " Kaleb had 34 books. If he sold 17 of them and used the money he earned to buy 7 new books, how many books would Kaleb have? ", "executed": 24.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Kaleb had 34 books. If he sold 17 of them and used the money he earned to buy 7 new books, how many books would Kaleb have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    books_kaleb_had = 34\n    books_kaleb_sold = 17\n    books_kaleb_bought = 7\n    books_kaleb_has = books_kaleb_had - books_kaleb_sold + books_kaleb_bought\n    return books_kaleb_has\nans = solver()", "answer": 24.0}
{"question": " In fourth grade there were 10 students at the start of the year. During the year 4 students left and 42 new students came to school. How many students were in fourth grade at the end? ", "executed": 48.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In fourth grade there were 10 students at the start of the year. During the year 4 students left and 42 new students came to school. How many students were in fourth grade at the end?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    start_of_year = 10\n    students_left = 4\n    new_students = 42\n    end_of_year = start_of_year + new_students - students_left\n    return end_of_year\nans = solver()", "answer": 48.0}
{"question": " Oliver had 33 dollars in January. By March he had spent 4 dollars. If he got another 32 dollars from his mom, how much money would he have? ", "executed": 61.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Oliver had 33 dollars in January. By March he had spent 4 dollars. If he got another 32 dollars from his mom, how much money would he have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    january = 33\n    march = january - 4\n    mom = 32\n    return march + mom\nans = solver()", "answer": 61.0}
{"question": " A florist had 37 roses. If she sold 16 of them and then later picked 19 more, how many roses would she have? ", "executed": 40.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A florist had 37 roses. If she sold 16 of them and then later picked 19 more, how many roses would she have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    roses_before_selling = 37\n    roses_sold = 16\n    roses_after_selling = roses_before_selling - roses_sold\n    print(\"After selling 16 roses, the florist has {} roses left.\".format(roses_after_selling))\n    roses_picked = 19\n    roses_after_picking = roses_after_selling + roses_picked\n    print(\"After picking 19 roses, the florist has {} roses.\".format(roses_after_picking))\n    return roses_after_picking\nans = solver()", "answer": 40.0}
{"question": " A teacher had 6 worksheets to grade. If she graded 4, but then another 18 were turned in, how many worksheets would she have to grade? ", "executed": 20.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A teacher had 6 worksheets to grade. If she graded 4, but then another 18 were turned in, how many worksheets would she have to grade?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    worksheets_to_grade = 6\n    worksheets_graded = 4\n    worksheets_turned_in = 18\n    worksheets_to_grade = worksheets_to_grade + worksheets_turned_in - worksheets_graded\n    return worksheets_to_grade\nans = solver()", "answer": 20.0}
{"question": " A book store had 41 books in the bargin bin. If they sold 33 books, but then put 2 more in the bin, how many books would be in the bin? ", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A book store had 41 books in the bargin bin. If they sold 33 books, but then put 2 more in the bin, how many books would be in the bin?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    books_in_bargin_bin = 41\n    books_sold = 33\n    books_added = 2\n    books_in_bargin_bin_after_sold = books_in_bargin_bin - books_sold\n    books_in_bargin_bin_after_added = books_in_bargin_bin_after_sold + books_added\n    return books_in_bargin_bin_after_added\nans = solver()", "answer": 10.0}
{"question": " A waiter had 19 customers to wait on. If 14 customers left and he got another 36 customers, how many customers would he have? ", "executed": 41.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter had 19 customers to wait on. If 14 customers left and he got another 36 customers, how many customers would he have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_customers_first_step = 19\n    num_customers_second_step = num_customers_first_step - 14 + 36\n    return num_customers_second_step\nans = solver()", "answer": 41.0}
{"question": " At the fair there were 9 people in line for the bumper cars. If 6 of them got tired of waiting and left and 3 more got in line, how many people would be in line? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the fair there were 9 people in line for the bumper cars. If 6 of them got tired of waiting and left and 3 more got in line, how many people would be in line?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    people_in_line = 9\n    people_left = 6\n    people_got_in_line = 3\n    people_in_line = people_in_line - people_left + people_got_in_line\n    return people_in_line\nans = solver()", "answer": 6.0}
{"question": " A teacher had 7 worksheets to grade. If she graded 2, but then another 46 were turned in, how many worksheets would she have to grade? ", "executed": 51.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A teacher had 7 worksheets to grade. If she graded 2, but then another 46 were turned in, how many worksheets would she have to grade?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    worksheets_to_grade = 7\n    worksheets_graded = 2\n    worksheets_turned_in = 46\n    worksheets_to_grade = worksheets_to_grade + worksheets_turned_in - worksheets_graded\n    return worksheets_to_grade\nans = solver()", "answer": 51.0}
{"question": " Paige had 8 songs on her mp3 player. If she deleted 5 old songs from it and then added 30 new songs, how many songs does she have on her mp3 player? ", "executed": 33.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paige had 8 songs on her mp3 player. If she deleted 5 old songs from it and then added 30 new songs, how many songs does she have on her mp3 player?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    songs_on_mp3_player = 8\n    # In the second step, we can define the following variable:\n    songs_deleted = 5\n    # In the third step, we can define the following variable:\n    songs_added = 30\n    # In the fourth step, we can define the following variable:\n    songs_on_mp3_player = songs_on_mp3_player - songs_deleted + songs_added\n    return songs_on_mp3_player\nans = solver()", "answer": 33.0}
{"question": " Maria picked 48 carrots from her garden. If she threw out 11 of them and then picked 15 more the next day, how many carrots would she have total? ", "executed": 52.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Maria picked 48 carrots from her garden. If she threw out 11 of them and then picked 15 more the next day, how many carrots would she have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    carrots_picked_first_day = 48\n    carrots_thrown_out = 11\n    carrots_picked_second_day = 15\n    # In the second step, we can calculate the number of carrots left after the first day:\n    carrots_left_after_first_day = carrots_picked_first_day - carrots_thrown_out\n    # In the third step, we can calculate the number of carrots left after the second day:\n    carrots_left_after_second_day = carrots_left_after_first_day + carrots_picked_second_day\n    # In the fourth step, we can return the answer:\n    return carrots_left_after_second_day\nans = solver()", "answer": 52.0}
{"question": " A store had 34 oranges in a bin. If they threw away 20 of the old ones and put 13 new ones in the bin how many would be in the bin? ", "executed": 27.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A store had 34 oranges in a bin. If they threw away 20 of the old ones and put 13 new ones in the bin how many would be in the bin?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    old_oranges = 34\n    new_oranges = 13\n    thrown_oranges = 20\n    # Now, we can calculate the number of oranges in the bin by adding the new oranges and subtracting the thrown oranges\n    oranges_in_bin = old_oranges + new_oranges - thrown_oranges\n    return oranges_in_bin\nans = solver()", "answer": 27.0}
{"question": " A waiter had 47 customers to wait on. If 41 customers left and he got another 20 customers, how many customers would he have? ", "executed": 26.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter had 47 customers to wait on. If 41 customers left and he got another 20 customers, how many customers would he have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_customers_first_step = 47\n    # In the second step, we can define the following variable:\n    num_customers_second_step = num_customers_first_step - 41\n    # In the third step, we can define the following variable:\n    num_customers_third_step = num_customers_second_step + 20\n    return num_customers_third_step\nans = solver()", "answer": 26.0}
{"question": " In fourth grade there were 33 students at the start of the year. During the year 18 students left and 14 new students came to school. How many students were in fourth grade at the end? ", "executed": 29.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In fourth grade there were 33 students at the start of the year. During the year 18 students left and 14 new students came to school. How many students were in fourth grade at the end?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    start_of_year = 33\n    students_left = 18\n    new_students = 14\n    end_of_year = start_of_year - students_left + new_students\n    return end_of_year\nans = solver()", "answer": 29.0}
{"question": " For the school bake sale Katie made 26 cupcakes. If she sold 20 of them and then made 20 more, how many cupcakes would she have? ", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: For the school bake sale Katie made 26 cupcakes. If she sold 20 of them and then made 20 more, how many cupcakes would she have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cupcakes_made_in_first_step = 26\n    cupcakes_sold_in_first_step = 20\n    cupcakes_left_in_first_step = cupcakes_made_in_first_step - cupcakes_sold_in_first_step\n    print(\"In the first step, Katie made {} cupcakes, sold {} cupcakes, and left {} cupcakes.\".format(cupcakes_made_in_first_step, cupcakes_sold_in_first_step, cupcakes_left_in_first_step))\n    # In the second step, we can define the following variable:\n    cupcakes_made_in_second_step = 20\n    cupcakes_sold_in_second_step = 0\n    cupcakes_left_in_second_step = cupcakes_made_in_second_step - cupcakes_sold_in_second_step\n    print(\"In the second step, Katie made {} cupcakes, sold {} cupcakes, and left {} cupcakes.\".format(cupcakes_made_in_second_step, cupcakes_sold_in_second_step, cupcakes_left_in_second_step))\n    # In the third step, we can define the following variable:\n    cupcakes_made_in_third_step = 0\n    cupcakes_sold_in\nans = solver()", "answer": 26.0}
{"question": " Adam had 5 dollars. At the store he spent $2 on a new game. If he got another 5 dollars for his allowance, how much money does he have now? ", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Adam had 5 dollars. At the store he spent $2 on a new game. If he got another 5 dollars for his allowance, how much money does he have now?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    adam_has_5_dollars = 5\n    # In the second step, we can define the following variable:\n    adam_spent_2_dollars = 2\n    # In the third step, we can define the following variable:\n    adam_got_5_dollars = 5\n    # In the fourth step, we can define the following variable:\n    adam_has_8_dollars = adam_has_5_dollars + adam_got_5_dollars - adam_spent_2_dollars\n    return adam_has_8_dollars\nans = solver()", "answer": 8.0}
{"question": " Tiffany was playing a video game and had 43 lives. In a hard part of the game she lost 14 lives. If she got 27 more lives in the next level, how many lives would she have? ", "executed": 56.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Tiffany was playing a video game and had 43 lives. In a hard part of the game she lost 14 lives. If she got 27 more lives in the next level, how many lives would she have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    lives_at_start = 43\n    lives_lost = 14\n    lives_gained = 27\n    lives_at_end = lives_at_start - lives_lost + lives_gained\n    return lives_at_end\nans = solver()", "answer": 56.0}
{"question": " At the fair there were 12 people in line for the bumper cars. If 10 of them got tired of waiting and left and 15 more got in line, how many people would be in line? ", "executed": 17.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the fair there were 12 people in line for the bumper cars. If 10 of them got tired of waiting and left and 15 more got in line, how many people would be in line?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    people_in_line = 12\n    people_left = 10\n    people_got_in_line = 15\n    people_in_line = people_in_line - people_left + people_got_in_line\n    return people_in_line\nans = solver()", "answer": 17.0}
{"question": " A waiter had 14 customers to wait on. If 3 customers left and he got another 39 customers, how many customers would he have? ", "executed": 50.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter had 14 customers to wait on. If 3 customers left and he got another 39 customers, how many customers would he have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    customers_before = 14\n    customers_left = 3\n    customers_after = 39\n    customers_total = customers_before + customers_after - customers_left\n    return customers_total\nans = solver()", "answer": 50.0}
{"question": " At the fair there were 30 people in line for the bumper cars. If 10 of them got tired of waiting and left and 5 more got in line, how many people would be in line? ", "executed": 25.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the fair there were 30 people in line for the bumper cars. If 10 of them got tired of waiting and left and 5 more got in line, how many people would be in line?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    people_in_line = 30\n    people_left = 10\n    people_got_in_line = 5\n    people_in_line = people_in_line - people_left + people_got_in_line\n    return people_in_line\nans = solver()", "answer": 25.0}
{"question": " Faye had 34 coloring books. If she gave away 3 of them, but then bought 48 more, how many would she have total? ", "executed": 79.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Faye had 34 coloring books. If she gave away 3 of them, but then bought 48 more, how many would she have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    books_before_giving_away = 34\n    books_given_away = 3\n    books_bought = 48\n    books_after_giving_away = books_before_giving_away - books_given_away\n    books_total = books_after_giving_away + books_bought\n    return books_total\nans = solver()", "answer": 79.0}
{"question": " Paige had 11 songs on her mp3 player. If she deleted 9 old songs from it and then added 8 new songs, how many songs does she have on her mp3 player? ", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paige had 11 songs on her mp3 player. If she deleted 9 old songs from it and then added 8 new songs, how many songs does she have on her mp3 player?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    songs_on_mp3_player = 11\n    # In the second step, we can define the following variable:\n    songs_deleted = 9\n    # In the third step, we can define the following variable:\n    songs_added = 8\n    # In the fourth step, we can define the following variable:\n    songs_on_mp3_player = songs_on_mp3_player - songs_deleted\n    # In the fifth step, we can define the following variable:\n    songs_on_mp3_player = songs_on_mp3_player + songs_added\n    # In the sixth step, we can return the following variable:\n    return songs_on_mp3_player\nans = solver()", "answer": 10.0}
{"question": " A teacher had 38 worksheets to grade. If she graded 4, but then another 15 were turned in, how many worksheets would she have to grade? ", "executed": 49.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A teacher had 38 worksheets to grade. If she graded 4, but then another 15 were turned in, how many worksheets would she have to grade?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    worksheets_to_grade = 38\n    worksheets_graded = 4\n    worksheets_turned_in = 15\n    worksheets_to_grade = worksheets_to_grade + worksheets_turned_in - worksheets_graded\n    return worksheets_to_grade\nans = solver()", "answer": 49.0}
{"question": " In fourth grade there were 40 students at the start of the year. During the year 14 students left and 26 new students came to school. How many students were in fourth grade at the end? ", "executed": 52.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In fourth grade there were 40 students at the start of the year. During the year 14 students left and 26 new students came to school. How many students were in fourth grade at the end?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    start_of_year = 40\n    students_left = 14\n    new_students = 26\n    end_of_year = start_of_year - students_left + new_students\n    return end_of_year\nans = solver()", "answer": 52.0}
{"question": " Wendy was playing a video game and had 43 lives. In a hard part of the game she lost 8 lives. If she got 39 more lives in the next level, how many lives would she have? ", "executed": 74.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Wendy was playing a video game and had 43 lives. In a hard part of the game she lost 8 lives. If she got 39 more lives in the next level, how many lives would she have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    lives_at_start = 43\n    lives_lost = 8\n    lives_gained = 39\n    lives_at_end = lives_at_start - lives_lost + lives_gained\n    return lives_at_end\nans = solver()", "answer": 74.0}
{"question": " A book store had 4 books in the bargin bin. If they sold 3 books, but then put 10 more in the bin, how many books would be in the bin? ", "executed": 11.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A book store had 4 books in the bargin bin. If they sold 3 books, but then put 10 more in the bin, how many books would be in the bin?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    books_in_bargin_bin = 4\n    books_sold = 3\n    books_added = 10\n    books_in_bargin_bin = books_in_bargin_bin - books_sold + books_added\n    return books_in_bargin_bin\nans = solver()", "answer": 11.0}
{"question": " At the arcade Cody won 49 tickets. If he spent 25 tickets on a beanie and later won 6 more tickets, how many would he have? ", "executed": 30.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the arcade Cody won 49 tickets. If he spent 25 tickets on a beanie and later won 6 more tickets, how many would he have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    tickets_won = 49\n    tickets_spent = 25\n    tickets_won_later = 6\n    # In the second step, we can calculate the number of tickets Cody has after spending 25 tickets on a beanie:\n    tickets_left = tickets_won - tickets_spent\n    # In the third step, we can calculate the number of tickets Cody has after winning 6 more tickets:\n    tickets_left = tickets_left + tickets_won_later\n    return tickets_left\nans = solver()", "answer": 30.0}
{"question": " For the school bake sale Bianca made 14 cupcakes. If she sold 6 of them and then made 17 more, how many cupcakes would she have? ", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: For the school bake sale Bianca made 14 cupcakes. If she sold 6 of them and then made 17 more, how many cupcakes would she have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cupcakes_made_in_first_step = 14\n    cupcakes_sold_in_first_step = 6\n    cupcakes_left_in_first_step = cupcakes_made_in_first_step - cupcakes_sold_in_first_step\n    print(\"In the first step, Bianca made {} cupcakes, sold {} cupcakes, and left {} cupcakes.\".format(cupcakes_made_in_first_step, cupcakes_sold_in_first_step, cupcakes_left_in_first_step))\n    # In the second step, we can define the following variable:\n    cupcakes_made_in_second_step = 17\n    cupcakes_sold_in_second_step = 0\n    cupcakes_left_in_second_step = cupcakes_made_in_second_step - cupcakes_sold_in_second_step\n    print(\"In the second step, Bianca made {} cupcakes, sold {} cupcakes, and left {} cupcakes.\".format(cupcakes_made_in_second_step, cupcakes_sold_in_second_step, cupcakes_left_in_second_step))\n    # In the third step, we can define the following variable:\n    cupcakes_made_in_third_step = 0\n    cupcakes_sold\nans = solver()", "answer": 25.0}
{"question": " Bianca had 45 coloring books. If she gave away 6 of them, but then bought 20 more, how many would she have total? ", "executed": 59.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bianca had 45 coloring books. If she gave away 6 of them, but then bought 20 more, how many would she have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_coloring_books_before_giving_away = 45\n    # In the second step, we can define the following variable:\n    num_coloring_books_given_away = 6\n    # In the third step, we can define the following variable:\n    num_coloring_books_bought = 20\n    # In the fourth step, we can define the following variable:\n    num_coloring_books_after_giving_away = num_coloring_books_before_giving_away - num_coloring_books_given_away\n    # In the fifth step, we can define the following variable:\n    num_coloring_books_after_buying = num_coloring_books_after_giving_away + num_coloring_books_bought\n    # In the sixth step, we can return the following variable:\n    return num_coloring_books_after_buying\nans = solver()", "answer": 59.0}
{"question": " Zoe had 15 songs on her mp3 player. If she deleted 8 old songs from it and then added 50 new songs, how many songs does she have on her mp3 player? ", "executed": 57.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Zoe had 15 songs on her mp3 player. If she deleted 8 old songs from it and then added 50 new songs, how many songs does she have on her mp3 player?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    old_songs = 15\n    deleted_songs = 8\n    new_songs = 50\n    # In the second step, we can calculate the number of songs after deleting the old songs:\n    songs_after_deletion = old_songs - deleted_songs\n    # In the third step, we can calculate the number of songs after adding the new songs:\n    songs_after_addition = songs_after_deletion + new_songs\n    return songs_after_addition\nans = solver()", "answer": 57.0}
{"question": " At the arcade Jerry won 4 tickets. If he spent 2 tickets on a beanie and later won 47 more tickets, how many would he have? ", "executed": 49.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the arcade Jerry won 4 tickets. If he spent 2 tickets on a beanie and later won 47 more tickets, how many would he have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    tickets_won = 4\n    tickets_spent = 2\n    tickets_won_later = 47\n    # In the second step, we can calculate the number of tickets Jerry has after spending 2 tickets on a beanie:\n    tickets_left = tickets_won - tickets_spent\n    # In the third step, we can calculate the number of tickets Jerry has after winning 47 more tickets:\n    tickets_total = tickets_left + tickets_won_later\n    return tickets_total\nans = solver()", "answer": 49.0}
{"question": " A store had 31 oranges in a bin. If they threw away 9 of the old ones and put 38 new ones in the bin how many would be in the bin? ", "executed": 60.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A store had 31 oranges in a bin. If they threw away 9 of the old ones and put 38 new ones in the bin how many would be in the bin?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    old_oranges = 31\n    new_oranges = 38\n    thrown_oranges = 9\n    # Now, we can calculate the total number of oranges in the bin:\n    total_oranges = old_oranges + new_oranges - thrown_oranges\n    return total_oranges\nans = solver()", "answer": 60.0}
{"question": " Adam had 33 books. If he sold 11 of them and used the money he earned to buy 23 new books, how many books would Adam have? ", "executed": 45.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Adam had 33 books. If he sold 11 of them and used the money he earned to buy 23 new books, how many books would Adam have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    books_before_selling = 33\n    books_sold = 11\n    books_bought = 23\n    books_after_selling = books_before_selling - books_sold + books_bought\n    return books_after_selling\nans = solver()", "answer": 45.0}
{"question": " At the fair there were 10 people in line for the bumper cars. If 2 of them got tired of waiting and left and 2 more got in line, how many people would be in line? ", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the fair there were 10 people in line for the bumper cars. If 2 of them got tired of waiting and left and 2 more got in line, how many people would be in line?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    people_in_line = 10\n    people_left = 2\n    people_got_in_line = 2\n    people_in_line = people_in_line - people_left + people_got_in_line\n    return people_in_line\nans = solver()", "answer": 10.0}
{"question": " The school cafeteria had 38 apples. If they used 20 to make lunch for the students and then bought 28 more, how many apples would they have? ", "executed": 46.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school cafeteria had 38 apples. If they used 20 to make lunch for the students and then bought 28 more, how many apples would they have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    apples_before_lunch = 38\n    apples_used_for_lunch = 20\n    apples_bought = 28\n    apples_after_lunch = apples_before_lunch - apples_used_for_lunch + apples_bought\n    return apples_after_lunch\nans = solver()", "answer": 46.0}
{"question": " George had 28 socks. If he threw away 4 old ones that didn't fit and bought 36 new ones, how many socks would he have? ", "executed": 60.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: George had 28 socks. If he threw away 4 old ones that didn't fit and bought 36 new ones, how many socks would he have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    socks_before = 28\n    socks_thrown = 4\n    socks_bought = 36\n    socks_after = socks_before - socks_thrown + socks_bought\n    return socks_after\nans = solver()", "answer": 60.0}
{"question": " For Halloween Robin scored 23 pieces of candy. She ate 7 pieces the first night and then her sister gave her 21 more pieces. How many pieces of candy does Robin have now? ", "executed": 37.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For Halloween Robin scored 23 pieces of candy. She ate 7 pieces the first night and then her sister gave her 21 more pieces. How many pieces of candy does Robin have now?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    candy_first_day = 23\n    candy_eaten_first_day = 7\n    candy_second_day = 21\n    # In the second step, we can calculate the number of candy Robin has after the first day:\n    candy_after_first_day = candy_first_day - candy_eaten_first_day\n    # In the third step, we can calculate the number of candy Robin has after the second day:\n    candy_after_second_day = candy_after_first_day + candy_second_day\n    return candy_after_second_day\nans = solver()", "answer": 37.0}
{"question": " Rachel was playing a video game and had 10 lives. In a hard part of the game she lost 4 lives. If she got 26 more lives in the next level, how many lives would she have? ", "executed": 32.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel was playing a video game and had 10 lives. In a hard part of the game she lost 4 lives. If she got 26 more lives in the next level, how many lives would she have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    lives_lost = 4\n    lives_gained = 26\n    lives_before = 10\n    lives_after = lives_before - lives_lost + lives_gained\n    return lives_after\nans = solver()", "answer": 32.0}
{"question": " A florist had 6 roses. If she sold 5 of them and then later picked 12 more, how many roses would she have? ", "executed": 13.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A florist had 6 roses. If she sold 5 of them and then later picked 12 more, how many roses would she have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    x = 6\n    y = 5\n    z = 12\n    # In the second step, we can define the following variable:\n    a = x - y\n    b = a + z\n    return b\nans = solver()", "answer": 13.0}
{"question": " For Halloween Haley scored 33 pieces of candy. She ate 17 pieces the first night and then her sister gave her 19 more pieces. How many pieces of candy does Haley have now? ", "executed": 35.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For Halloween Haley scored 33 pieces of candy. She ate 17 pieces the first night and then her sister gave her 19 more pieces. How many pieces of candy does Haley have now?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    haley_candy = 33\n    haley_ate = 17\n    haley_sister_gave = 19\n    haley_candy_now = haley_candy - haley_ate + haley_sister_gave\n    return haley_candy_now\nans = solver()", "answer": 35.0}
{"question": " The school cafeteria had 14 apples. If they used 13 to make lunch for the students and then bought 49 more, how many apples would they have? ", "executed": 50.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school cafeteria had 14 apples. If they used 13 to make lunch for the students and then bought 49 more, how many apples would they have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    apples_before_lunch = 14\n    apples_for_lunch = 13\n    apples_after_lunch = apples_before_lunch - apples_for_lunch\n    apples_bought = 49\n    apples_after_buying = apples_after_lunch + apples_bought\n    return apples_after_buying\nans = solver()", "answer": 50.0}
{"question": " Edward had 43 books. If he sold 19 of them and used the money he earned to buy 14 new books, how many books would Edward have? ", "executed": 38.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Edward had 43 books. If he sold 19 of them and used the money he earned to buy 14 new books, how many books would Edward have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    books_before_selling = 43\n    books_sold = 19\n    books_bought = 14\n    books_after_selling = books_before_selling - books_sold + books_bought\n    return books_after_selling\nans = solver()", "answer": 38.0}
{"question": " A teacher had 29 worksheets to grade. If she graded 25, but then another 29 were turned in, how many worksheets would she have to grade? ", "executed": 33.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A teacher had 29 worksheets to grade. If she graded 25, but then another 29 were turned in, how many worksheets would she have to grade?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    worksheets_to_grade = 29\n    worksheets_graded = 25\n    worksheets_turned_in = 29\n    worksheets_to_grade_after_turn_in = worksheets_to_grade + worksheets_turned_in\n    worksheets_to_grade_after_turn_in = worksheets_to_grade_after_turn_in - worksheets_graded\n    return worksheets_to_grade_after_turn_in\nans = solver()", "answer": 33.0}
{"question": " In fourth grade there were 35 students at the start of the year. During the year 10 students left and 10 new students came to school. How many students were in fourth grade at the end? ", "executed": 35.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In fourth grade there were 35 students at the start of the year. During the year 10 students left and 10 new students came to school. How many students were in fourth grade at the end?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    start_of_year = 35\n    # In the second step, we can define the following variable:\n    students_left = 10\n    # In the third step, we can define the following variable:\n    new_students = 10\n    # In the fourth step, we can define the following variable:\n    end_of_year = start_of_year - students_left + new_students\n    return end_of_year\nans = solver()", "answer": 35.0}
{"question": " For the school bake sale Carol made 19 cupcakes. If she sold 6 of them and then made 27 more, how many cupcakes would she have? ", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: For the school bake sale Carol made 19 cupcakes. If she sold 6 of them and then made 27 more, how many cupcakes would she have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cupcakes_made_in_first_step = 19\n    cupcakes_sold_in_first_step = 6\n    cupcakes_left_in_first_step = cupcakes_made_in_first_step - cupcakes_sold_in_first_step\n    print(\"In the first step, Carol made {} cupcakes, sold {} cupcakes, and left {} cupcakes.\".format(cupcakes_made_in_first_step, cupcakes_sold_in_first_step, cupcakes_left_in_first_step))\n    # In the second step, we can define the following variable:\n    cupcakes_made_in_second_step = 27\n    cupcakes_sold_in_second_step = 0\n    cupcakes_left_in_second_step = cupcakes_made_in_second_step - cupcakes_sold_in_second_step\n    print(\"In the second step, Carol made {} cupcakes, sold {} cupcakes, and left {} cupcakes.\".format(cupcakes_made_in_second_step, cupcakes_sold_in_second_step, cupcakes_left_in_second_step))\n    # In the third step, we can define the following variable:\n    cupcakes_made_in_third_step = 0\n    cupcakes_sold_in\nans = solver()", "answer": 40.0}
{"question": " A store had 40 oranges in a bin. If they threw away 37 of the old ones and put 7 new ones in the bin how many would be in the bin? ", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A store had 40 oranges in a bin. If they threw away 37 of the old ones and put 7 new ones in the bin how many would be in the bin?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    old_oranges = 40\n    new_oranges = 7\n    thrown_oranges = 37\n    # In the second step, we can define the following variable:\n    total_oranges = old_oranges + new_oranges - thrown_oranges\n    return total_oranges\nans = solver()", "answer": 10.0}
{"question": " At the arcade Victor won 46 tickets. If he spent 27 tickets on a beanie and later won 39 more tickets, how many would he have? ", "executed": 58.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the arcade Victor won 46 tickets. If he spent 27 tickets on a beanie and later won 39 more tickets, how many would he have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    tickets_won = 46\n    tickets_spent = 27\n    tickets_won_later = 39\n    # In the second step, we can calculate the number of tickets Victor has after spending 27 tickets on a beanie:\n    tickets_left = tickets_won - tickets_spent\n    # In the third step, we can calculate the number of tickets Victor has after winning 39 more tickets:\n    tickets_total = tickets_left + tickets_won_later\n    return tickets_total\nans = solver()", "answer": 58.0}
{"question": " Chloe picked 48 carrots from her garden. If she threw out 45 of them and then picked 42 more the next day, how many carrots would she have total? ", "executed": 45.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Chloe picked 48 carrots from her garden. If she threw out 45 of them and then picked 42 more the next day, how many carrots would she have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    carrots_picked_first_day = 48\n    carrots_thrown_out = 45\n    carrots_picked_second_day = 42\n    total_carrots = carrots_picked_first_day - carrots_thrown_out + carrots_picked_second_day\n    return total_carrots\nans = solver()", "answer": 45.0}
{"question": " Sam had 10 socks. If he threw away 3 old ones that didn't fit and bought 36 new ones, how many socks would he have? ", "executed": 43.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Sam had 10 socks. If he threw away 3 old ones that didn't fit and bought 36 new ones, how many socks would he have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    socks_before = 10\n    socks_thrown = 3\n    socks_bought = 36\n    socks_after = socks_before - socks_thrown + socks_bought\n    return socks_after\nans = solver()", "answer": 43.0}
{"question": " Maria had 14 bottles of water in her fridge. If she drank 8 of them and then bought 45 more, how many bottles would she have? ", "executed": 51.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Maria had 14 bottles of water in her fridge. If she drank 8 of them and then bought 45 more, how many bottles would she have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    bottles_in_fridge = 14\n    # In the second step, we can define the following variable:\n    bottles_drank = 8\n    # In the third step, we can define the following variable:\n    bottles_bought = 45\n    # In the fourth step, we can define the following variable:\n    bottles_in_fridge = bottles_in_fridge - bottles_drank\n    # In the fifth step, we can define the following variable:\n    bottles_in_fridge = bottles_in_fridge + bottles_bought\n    # In the sixth step, we can return the following variable:\n    return bottles_in_fridge\nans = solver()", "answer": 51.0}
{"question": " A teacher had 34 worksheets to grade. If she graded 7, but then another 36 were turned in, how many worksheets would she have to grade? ", "executed": 63.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A teacher had 34 worksheets to grade. If she graded 7, but then another 36 were turned in, how many worksheets would she have to grade?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    worksheets_to_grade = 34\n    worksheets_graded = 7\n    worksheets_turned_in = 36\n    worksheets_to_grade = worksheets_to_grade + worksheets_turned_in - worksheets_graded\n    return worksheets_to_grade\nans = solver()", "answer": 63.0}
{"question": " At the fair there were 7 people in line for the bumper cars. If 4 of them got tired of waiting and left and 8 more got in line, how many people would be in line? ", "executed": 11.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the fair there were 7 people in line for the bumper cars. If 4 of them got tired of waiting and left and 8 more got in line, how many people would be in line?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    people_in_line = 7\n    people_left = 4\n    people_got_in_line = 8\n    people_in_line = people_in_line - people_left + people_got_in_line\n    return people_in_line\nans = solver()", "answer": 11.0}
{"question": " Emily had 7 coloring books. If she gave away 2 of them, but then bought 14 more, how many would she have total? ", "executed": 19.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Emily had 7 coloring books. If she gave away 2 of them, but then bought 14 more, how many would she have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    books_before_giving_away = 7\n    books_given_away = 2\n    books_bought = 14\n    books_after_giving_away = books_before_giving_away - books_given_away\n    books_total = books_after_giving_away + books_bought\n    return books_total\nans = solver()", "answer": 19.0}
{"question": " At the arcade Dave won 25 tickets. If he spent 22 tickets on a beanie and later won 15 more tickets, how many would he have? ", "executed": 18.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the arcade Dave won 25 tickets. If he spent 22 tickets on a beanie and later won 15 more tickets, how many would he have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    dave_won_25_tickets = 25\n    # In the second step, we can define the following variable:\n    dave_spent_22_tickets = 22\n    # In the third step, we can define the following variable:\n    dave_won_15_more_tickets = 15\n    # In the fourth step, we can define the following variable:\n    dave_has_tickets = dave_won_25_tickets - dave_spent_22_tickets + dave_won_15_more_tickets\n    return dave_has_tickets\nans = solver()", "answer": 18.0}
{"question": " Robin had 30 songs on her mp3 player. If she deleted 8 old songs from it and then added 10 new songs, how many songs does she have on her mp3 player? ", "executed": 32.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Robin had 30 songs on her mp3 player. If she deleted 8 old songs from it and then added 10 new songs, how many songs does she have on her mp3 player?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    songs_on_mp3_player = 30\n    # In the second step, we can define the following variable:\n    songs_deleted = 8\n    # In the third step, we can define the following variable:\n    songs_added = 10\n    # In the fourth step, we can define the following variable:\n    songs_on_mp3_player = songs_on_mp3_player - songs_deleted\n    # In the fifth step, we can define the following variable:\n    songs_on_mp3_player = songs_on_mp3_player + songs_added\n    return songs_on_mp3_player\nans = solver()", "answer": 32.0}
{"question": " The school cafeteria had 23 apples. If they used 20 to make lunch for the students and then bought 6 more, how many apples would they have? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school cafeteria had 23 apples. If they used 20 to make lunch for the students and then bought 6 more, how many apples would they have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    apples_before_lunch = 23\n    apples_used_for_lunch = 20\n    apples_bought = 6\n    apples_after_lunch = apples_before_lunch - apples_used_for_lunch + apples_bought\n    return apples_after_lunch\nans = solver()", "answer": 9.0}
{"question": " Janet was playing a video game and had 38 lives. In a hard part of the game she lost 16 lives. If she got 32 more lives in the next level, how many lives would she have? ", "executed": 54.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Janet was playing a video game and had 38 lives. In a hard part of the game she lost 16 lives. If she got 32 more lives in the next level, how many lives would she have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    lives_lost = 16\n    lives_gained = 32\n    lives_before = 38\n    lives_after = lives_before - lives_lost + lives_gained\n    return lives_after\nans = solver()", "answer": 54.0}
{"question": " Megan picked 19 carrots from her garden. If she threw out 4 of them and then picked 46 more the next day, how many carrots would she have total? ", "executed": 61.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Megan picked 19 carrots from her garden. If she threw out 4 of them and then picked 46 more the next day, how many carrots would she have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    carrots_picked_first_day = 19\n    carrots_thrown_out = 4\n    carrots_picked_second_day = 46\n    total_carrots = carrots_picked_first_day - carrots_thrown_out + carrots_picked_second_day\n    return total_carrots\nans = solver()", "answer": 61.0}
{"question": " Roger had 45 dollars in January. By March he had spent 20 dollars. If he got another 46 dollars from his mom, how much money would he have? ", "executed": 71.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Roger had 45 dollars in January. By March he had spent 20 dollars. If he got another 46 dollars from his mom, how much money would he have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    money_in_jan = 45\n    money_spent_in_feb = 20\n    money_got_in_mar = 46\n    # In the second step, we can calculate the money left in Feb:\n    money_left_in_feb = money_in_jan - money_spent_in_feb\n    # In the third step, we can calculate the money left in Mar:\n    money_left_in_mar = money_left_in_feb + money_got_in_mar\n    return money_left_in_mar\nans = solver()", "answer": 71.0}
{"question": " The school cafeteria had 17 apples. If they used 2 to make lunch for the students and then bought 23 more, how many apples would they have? ", "executed": 38.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school cafeteria had 17 apples. If they used 2 to make lunch for the students and then bought 23 more, how many apples would they have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    apples_before_lunch = 17\n    apples_used_for_lunch = 2\n    apples_bought = 23\n    apples_after_lunch = apples_before_lunch - apples_used_for_lunch + apples_bought\n    return apples_after_lunch\nans = solver()", "answer": 38.0}
{"question": " Janet was playing a video game and had 47 lives. In a hard part of the game she lost 23 lives. If she got 46 more lives in the next level, how many lives would she have? ", "executed": 70.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Janet was playing a video game and had 47 lives. In a hard part of the game she lost 23 lives. If she got 46 more lives in the next level, how many lives would she have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    lives_at_start = 47\n    lives_lost = 23\n    lives_gained = 46\n    lives_at_end = lives_at_start - lives_lost + lives_gained\n    return lives_at_end\nans = solver()", "answer": 70.0}
{"question": " Nancy picked 12 carrots from her garden. If she threw out 2 of them and then picked 21 more the next day, how many carrots would she have total? ", "executed": 31.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Nancy picked 12 carrots from her garden. If she threw out 2 of them and then picked 21 more the next day, how many carrots would she have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    carrots_picked_first_day = 12\n    carrots_thrown_out = 2\n    carrots_picked_second_day = 21\n    total_carrots = carrots_picked_first_day + carrots_picked_second_day - carrots_thrown_out\n    return total_carrots\nans = solver()", "answer": 31.0}
{"question": " Bianca had 34 songs on her mp3 player. If she deleted 14 old songs from it and then added 44 new songs, how many songs does she have on her mp3 player? ", "executed": 64.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bianca had 34 songs on her mp3 player. If she deleted 14 old songs from it and then added 44 new songs, how many songs does she have on her mp3 player?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    songs_on_mp3_player = 34\n    # In the second step, we can define the following variable:\n    songs_deleted = 14\n    # In the third step, we can define the following variable:\n    songs_added = 44\n    # In the fourth step, we can define the following variable:\n    songs_on_mp3_player = songs_on_mp3_player - songs_deleted + songs_added\n    return songs_on_mp3_player\nans = solver()", "answer": 64.0}
{"question": " Tom had 5 books. If he sold 4 of them and used the money he earned to buy 38 new books, how many books would Tom have? ", "executed": 39.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Tom had 5 books. If he sold 4 of them and used the money he earned to buy 38 new books, how many books would Tom have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    books_before_selling = 5\n    books_sold = 4\n    books_bought = 38\n    books_after_selling = books_before_selling - books_sold + books_bought\n    return books_after_selling\nans = solver()", "answer": 39.0}
{"question": " John had 33 socks. If he threw away 19 old ones that didn't fit and bought 13 new ones, how many socks would he have? ", "executed": 27.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: John had 33 socks. If he threw away 19 old ones that didn't fit and bought 13 new ones, how many socks would he have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    socks_before = 33\n    socks_thrown = 19\n    socks_bought = 13\n    socks_after = socks_before - socks_thrown + socks_bought\n    return socks_after\nans = solver()", "answer": 27.0}
{"question": " For the school bake sale Maria made 19 cupcakes. If she sold 5 of them and then made 10 more, how many cupcakes would she have? ", "executed": 24.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For the school bake sale Maria made 19 cupcakes. If she sold 5 of them and then made 10 more, how many cupcakes would she have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cupcakes_made = 19\n    cupcakes_sold = 5\n    cupcakes_made_more = 10\n    cupcakes_left = cupcakes_made - cupcakes_sold + cupcakes_made_more\n    return cupcakes_left\nans = solver()", "answer": 24.0}
{"question": " A store had 50 oranges in a bin. If they threw away 40 of the old ones and put 24 new ones in the bin how many would be in the bin? ", "executed": 34.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A store had 50 oranges in a bin. If they threw away 40 of the old ones and put 24 new ones in the bin how many would be in the bin?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    old_oranges = 50\n    new_oranges = 24\n    thrown_oranges = 40\n    # Now, we can calculate the number of oranges in the bin after the first step:\n    oranges_in_bin = old_oranges - thrown_oranges + new_oranges\n    return oranges_in_bin\nans = solver()", "answer": 34.0}
{"question": " In fourth grade there were 8 students at the start of the year. During the year 5 students left and 8 new students came to school. How many students were in fourth grade at the end? ", "executed": 11.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In fourth grade there were 8 students at the start of the year. During the year 5 students left and 8 new students came to school. How many students were in fourth grade at the end?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    start_of_year = 8\n    # In the second step, we can define the following variable:\n    left_during_year = 5\n    # In the third step, we can define the following variable:\n    came_during_year = 8\n    # In the fourth step, we can define the following variable:\n    end_of_year = start_of_year - left_during_year + came_during_year\n    return end_of_year\nans = solver()", "answer": 11.0}
{"question": " Bianca picked 23 carrots from her garden. If she threw out 10 of them and then picked 47 more the next day, how many carrots would she have total? ", "executed": 60.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bianca picked 23 carrots from her garden. If she threw out 10 of them and then picked 47 more the next day, how many carrots would she have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    carrots_picked_first_day = 23\n    carrots_thrown_out = 10\n    carrots_picked_second_day = 47\n    total_carrots = carrots_picked_first_day - carrots_thrown_out + carrots_picked_second_day\n    return total_carrots\nans = solver()", "answer": 60.0}
{"question": " Zoe had 42 bottles of water in her fridge. If she drank 25 of them and then bought 30 more, how many bottles would she have? ", "executed": 47.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Zoe had 42 bottles of water in her fridge. If she drank 25 of them and then bought 30 more, how many bottles would she have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    bottles_in_fridge = 42\n    # In the second step, we can define the following variable:\n    bottles_drank = 25\n    # In the third step, we can define the following variable:\n    bottles_bought = 30\n    # In the fourth step, we can define the following variable:\n    bottles_in_fridge = bottles_in_fridge - bottles_drank + bottles_bought\n    return bottles_in_fridge\nans = solver()", "answer": 47.0}
{"question": " Katie had 11 songs on her mp3 player. If she deleted 7 old songs from it and then added 24 new songs, how many songs does she have on her mp3 player? ", "executed": 28.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Katie had 11 songs on her mp3 player. If she deleted 7 old songs from it and then added 24 new songs, how many songs does she have on her mp3 player?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    old_songs = 11\n    new_songs = 24\n    deleted_songs = 7\n    # In the second step, we can calculate the number of songs after deleting the old songs:\n    songs_after_deletion = old_songs - deleted_songs\n    # In the third step, we can calculate the number of songs after adding the new songs:\n    songs_after_addition = songs_after_deletion + new_songs\n    return songs_after_addition\nans = solver()", "answer": 28.0}
{"question": " A store had 5 oranges in a bin. If they threw away 2 of the old ones and put 28 new ones in the bin how many would be in the bin? ", "executed": 31.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A store had 5 oranges in a bin. If they threw away 2 of the old ones and put 28 new ones in the bin how many would be in the bin?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    old_oranges = 5\n    new_oranges = 28\n    thrown_away = 2\n    # Now, we can calculate the total number of oranges in the bin:\n    total_oranges = old_oranges + new_oranges - thrown_away\n    return total_oranges\nans = solver()", "answer": 31.0}
{"question": " Adam had 48 books. If he sold 19 of them and used the money he earned to buy 38 new books, how many books would Adam have? ", "executed": 67.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Adam had 48 books. If he sold 19 of them and used the money he earned to buy 38 new books, how many books would Adam have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    books_before_selling = 48\n    books_sold = 19\n    books_bought = 38\n    books_after_selling = books_before_selling - books_sold + books_bought\n    return books_after_selling\nans = solver()", "answer": 67.0}
{"question": " In fourth grade there were 31 students at the start of the year. During the year 5 students left and 11 new students came to school. How many students were in fourth grade at the end? ", "executed": 37.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In fourth grade there were 31 students at the start of the year. During the year 5 students left and 11 new students came to school. How many students were in fourth grade at the end?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    start_of_year = 31\n    # In the second step, we can define the following variable:\n    left = 5\n    # In the third step, we can define the following variable:\n    new_students = 11\n    # In the fourth step, we can define the following variable:\n    end = start_of_year - left + new_students\n    return end\nans = solver()", "answer": 37.0}
{"question": " For the school bake sale Robin made 42 cupcakes. If she sold 22 of them and then made 39 more, how many cupcakes would she have? ", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: For the school bake sale Robin made 42 cupcakes. If she sold 22 of them and then made 39 more, how many cupcakes would she have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cupcakes_made_in_first_step = 42\n    cupcakes_sold_in_first_step = 22\n    cupcakes_left_in_first_step = cupcakes_made_in_first_step - cupcakes_sold_in_first_step\n    print(\"In the first step, Robin made {} cupcakes, sold {} cupcakes, and left {} cupcakes.\".format(cupcakes_made_in_first_step, cupcakes_sold_in_first_step, cupcakes_left_in_first_step))\n    # In the second step, we can define the following variable:\n    cupcakes_made_in_second_step = 39\n    cupcakes_sold_in_second_step = 0\n    cupcakes_left_in_second_step = cupcakes_made_in_second_step - cupcakes_sold_in_second_step\n    print(\"In the second step, Robin made {} cupcakes, sold {} cupcakes, and left {} cupcakes.\".format(cupcakes_made_in_second_step, cupcakes_sold_in_second_step, cupcakes_left_in_second_step))\n    # In the third step, we can define the following variable:\n    cupcakes_made_in_third_step = 0\n    cupcakes_sold_in\nans = solver()", "answer": 59.0}
{"question": " A florist had 11 roses. If she sold 2 of them and then later picked 32 more, how many roses would she have? ", "executed": 41.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A florist had 11 roses. If she sold 2 of them and then later picked 32 more, how many roses would she have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    x = 11\n    y = 2\n    z = 32\n    # In the second step, we can define the following variable:\n    a = x - y\n    b = a + z\n    return b\nans = solver()", "answer": 41.0}
{"question": " Frank had 11 dollars. At the store he spent $3 on a new game. If he got another 14 dollars for his allowance, how much money does he have now? ", "executed": 22.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank had 11 dollars. At the store he spent $3 on a new game. If he got another 14 dollars for his allowance, how much money does he have now?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    frank_had = 11\n    # In the second step, we can define the following variable:\n    frank_spent = 3\n    # In the third step, we can define the following variable:\n    frank_got = 14\n    # In the fourth step, we can define the following variable:\n    frank_has = frank_had + frank_got - frank_spent\n    return frank_has\nans = solver()", "answer": 22.0}
{"question": " Haley was playing a video game and had 14 lives. In a hard part of the game she lost 4 lives. If she got 36 more lives in the next level, how many lives would she have? ", "executed": 46.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Haley was playing a video game and had 14 lives. In a hard part of the game she lost 4 lives. If she got 36 more lives in the next level, how many lives would she have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    lives_at_start = 14\n    lives_lost = 4\n    lives_gained = 36\n    lives_at_end = lives_at_start - lives_lost + lives_gained\n    return lives_at_end\nans = solver()", "answer": 46.0}
{"question": " Luke had 48 dollars in January. By March he had spent 11 dollars. If he got another 21 dollars from his mom, how much money would he have? ", "executed": 58.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Luke had 48 dollars in January. By March he had spent 11 dollars. If he got another 21 dollars from his mom, how much money would he have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    january = 48\n    march = 11\n    mom = 21\n    # In the second step, we can define the following variable:\n    january_march = january - march\n    # In the third step, we can define the following variable:\n    january_march_mom = january_march + mom\n    return january_march_mom\nans = solver()", "answer": 58.0}
{"question": " Emily was playing a video game and had 42 lives. In a hard part of the game she lost 25 lives. If she got 24 more lives in the next level, how many lives would she have? ", "executed": 41.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Emily was playing a video game and had 42 lives. In a hard part of the game she lost 25 lives. If she got 24 more lives in the next level, how many lives would she have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    lives_at_start = 42\n    lives_lost = 25\n    lives_gained = 24\n    lives_at_end = lives_at_start - lives_lost + lives_gained\n    return lives_at_end\nans = solver()", "answer": 41.0}
{"question": " Debby had 30 coloring books. If she gave away 7 of them, but then bought 35 more, how many would she have total? ", "executed": 58.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Debby had 30 coloring books. If she gave away 7 of them, but then bought 35 more, how many would she have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    books_debby_had = 30\n    books_debby_gave_away = 7\n    books_debby_bought = 35\n    books_debby_has = books_debby_had - books_debby_gave_away + books_debby_bought\n    return books_debby_has\nans = solver()", "answer": 58.0}
{"question": " The school cafeteria had 12 apples. If they used 8 to make lunch for the students and then bought 19 more, how many apples would they have? ", "executed": 23.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The school cafeteria had 12 apples. If they used 8 to make lunch for the students and then bought 19 more, how many apples would they have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    apples_before_lunch = 12\n    apples_used_for_lunch = 8\n    apples_bought = 19\n    apples_after_lunch = apples_before_lunch - apples_used_for_lunch + apples_bought\n    return apples_after_lunch\nans = solver()", "answer": 23.0}
{"question": " At the fair there were 31 people in line for the bumper cars. If 25 of them got tired of waiting and left and 25 more got in line, how many people would be in line? ", "executed": 31.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the fair there were 31 people in line for the bumper cars. If 25 of them got tired of waiting and left and 25 more got in line, how many people would be in line?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    people_in_line = 31\n    people_left = 25\n    people_got_in_line = 25\n    people_in_line = people_in_line - people_left + people_got_in_line\n    return people_in_line\nans = solver()", "answer": 31.0}
{"question": " A florist had 50 roses. If she sold 15 of them and then later picked 21 more, how many roses would she have? ", "executed": 56.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A florist had 50 roses. If she sold 15 of them and then later picked 21 more, how many roses would she have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    roses_at_start = 50\n    roses_sold = 15\n    roses_picked = 21\n    roses_at_end = 0\n    # Now, we can calculate the number of roses at the end:\n    roses_at_end = roses_at_start - roses_sold + roses_picked\n    return roses_at_end\nans = solver()", "answer": 56.0}
{"question": " Zoe had 6 songs on her mp3 player. If she deleted 3 old songs from it and then added 20 new songs, how many songs does she have on her mp3 player? ", "executed": 23.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Zoe had 6 songs on her mp3 player. If she deleted 3 old songs from it and then added 20 new songs, how many songs does she have on her mp3 player?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    old_songs = 6\n    new_songs = 20\n    deleted_songs = 3\n    # In the second step, we can calculate the number of songs after deleting the old songs:\n    songs_after_deletion = old_songs - deleted_songs\n    # In the third step, we can calculate the number of songs after adding the new songs:\n    songs_after_addition = songs_after_deletion + new_songs\n    return songs_after_addition\nans = solver()", "answer": 23.0}
{"question": " At the arcade Dave won 11 tickets. If he spent 5 tickets on a beanie and later won 10 more tickets, how many would he have? ", "executed": 16.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the arcade Dave won 11 tickets. If he spent 5 tickets on a beanie and later won 10 more tickets, how many would he have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    tickets_won = 11\n    tickets_spent = 5\n    tickets_won_later = 10\n    # Now, we can calculate the number of tickets Dave has after spending 5 tickets on a beanie:\n    tickets_after_spending = tickets_won - tickets_spent\n    # Now, we can calculate the number of tickets Dave has after winning 10 more tickets:\n    tickets_after_winning = tickets_after_spending + tickets_won_later\n    return tickets_after_winning\nans = solver()", "answer": 16.0}
{"question": " A waiter had 33 customers to wait on. If 31 customers left and he got another 26 customers, how many customers would he have? ", "executed": 28.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter had 33 customers to wait on. If 31 customers left and he got another 26 customers, how many customers would he have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    customers_left = 31\n    customers_got = 26\n    customers_total = 33\n    customers_left_total = customers_total - customers_left\n    customers_total_new = customers_left_total + customers_got\n    return customers_total_new\nans = solver()", "answer": 28.0}
{"question": " In fourth grade there were 11 students at the start of the year. During the year 6 students left and 42 new students came to school. How many students were in fourth grade at the end? ", "executed": 47.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In fourth grade there were 11 students at the start of the year. During the year 6 students left and 42 new students came to school. How many students were in fourth grade at the end?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    start_students = 11\n    left_students = 6\n    new_students = 42\n    end_students = start_students + new_students - left_students\n    return end_students\nans = solver()", "answer": 47.0}
{"question": " Oliver had 11 socks. If he threw away 4 old ones that didn't fit and bought 26 new ones, how many socks would he have? ", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Oliver had 11 socks. If he threw away 4 old ones that didn't fit and bought 26 new ones, how many socks would he have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    old_socks = 4\n    new_socks = 26\n    # In the second step, we can define the following variable:\n    total_socks = old_socks + new_socks\n    # In the third step, we can define the following variable:\n    total_socks = total_socks - old_socks\n    # In the fourth step, we can define the following variable:\n    total_socks = total_socks + new_socks\n    # In the fifth step, we can define the following variable:\n    total_socks = total_socks - old_socks\n    # In the sixth step, we can define the following variable:\n    total_socks = total_socks + new_socks\n    # In the seventh step, we can define the following variable:\n    total_socks = total_socks - old_socks\n    # In the eighth step, we can define the following variable:\n    total_socks = total_socks + new_socks\n    # In the ninth step, we can define the following variable:\n    total_socks = total_socks - old_socks\n    # In the tenth step, we can define the following variable:\n    total_socks = total_socks + new_socks\n    # In the\nans = solver()", "answer": 33.0}
{"question": " A store had 40 oranges in a bin. If they threw away 25 of the old ones and put 21 new ones in the bin how many would be in the bin? ", "executed": 36.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A store had 40 oranges in a bin. If they threw away 25 of the old ones and put 21 new ones in the bin how many would be in the bin?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    old_oranges = 40\n    new_oranges = 21\n    thrown_oranges = 25\n    # In the second step, we can define the following variable:\n    total_oranges = old_oranges + new_oranges - thrown_oranges\n    return total_oranges\nans = solver()", "answer": 36.0}
{"question": " At the arcade Edward won 9 tickets. If he spent 4 tickets on a beanie and later won 4 more tickets, how many would he have? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the arcade Edward won 9 tickets. If he spent 4 tickets on a beanie and later won 4 more tickets, how many would he have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    edward_won_tickets = 9\n    edward_spent_tickets = 4\n    edward_won_more_tickets = 4\n    edward_total_tickets = edward_won_tickets - edward_spent_tickets + edward_won_more_tickets\n    return edward_total_tickets\nans = solver()", "answer": 9.0}
{"question": " In fourth grade there were 4 students at the start of the year. During the year 3 students left and 42 new students came to school. How many students were in fourth grade at the end? ", "executed": 43.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In fourth grade there were 4 students at the start of the year. During the year 3 students left and 42 new students came to school. How many students were in fourth grade at the end?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    start_students = 4\n    left_students = 3\n    new_students = 42\n    end_students = start_students + new_students - left_students\n    return end_students\nans = solver()", "answer": 43.0}
{"question": " Haley picked 28 carrots from her garden. If she threw out 11 of them and then picked 9 more the next day, how many carrots would she have total? ", "executed": 26.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Haley picked 28 carrots from her garden. If she threw out 11 of them and then picked 9 more the next day, how many carrots would she have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    carrots_picked_first_day = 28\n    carrots_thrown_out = 11\n    carrots_picked_second_day = 9\n    carrots_left_first_day = carrots_picked_first_day - carrots_thrown_out\n    carrots_total = carrots_left_first_day + carrots_picked_second_day\n    return carrots_total\nans = solver()", "answer": 26.0}
{"question": " Roger had 25 books. If he sold 21 of them and used the money he earned to buy 30 new books, how many books would Roger have? ", "executed": 34.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Roger had 25 books. If he sold 21 of them and used the money he earned to buy 30 new books, how many books would Roger have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    books_before_selling = 25\n    books_sold = 21\n    books_bought = 30\n    books_after_selling = books_before_selling - books_sold + books_bought\n    return books_after_selling\nans = solver()", "answer": 34.0}
{"question": " A florist had 5 roses. If she sold 3 of them and then later picked 34 more, how many roses would she have? ", "executed": 36.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A florist had 5 roses. If she sold 3 of them and then later picked 34 more, how many roses would she have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    x = 5\n    y = 3\n    z = 34\n    # In the second step, we can define the following variable:\n    a = x - y\n    b = a + z\n    return b\nans = solver()", "answer": 36.0}
{"question": " Wendy was playing a video game and had 10 lives. In a hard part of the game she lost 6 lives. If she got 37 more lives in the next level, how many lives would she have? ", "executed": 41.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Wendy was playing a video game and had 10 lives. In a hard part of the game she lost 6 lives. If she got 37 more lives in the next level, how many lives would she have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    lives_at_start = 10\n    lives_lost = 6\n    lives_gained = 37\n    lives_at_end = lives_at_start - lives_lost + lives_gained\n    return lives_at_end\nans = solver()", "answer": 41.0}
{"question": " John had 5 dollars. At the store he spent $2 on a new game. If he got another 26 dollars for his allowance, how much money does he have now? ", "executed": 29.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: John had 5 dollars. At the store he spent $2 on a new game. If he got another 26 dollars for his allowance, how much money does he have now?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    money_before_store = 5\n    money_spent_at_store = 2\n    money_after_store = money_before_store - money_spent_at_store\n    print(\"After the store, John has \" + str(money_after_store) + \" dollars.\")\n    # In the second step, we can define the following variable:\n    money_after_allowance = money_after_store + 26\n    print(\"After allowance, John has \" + str(money_after_allowance) + \" dollars.\")\n    return money_after_allowance\nans = solver()", "answer": 29.0}
{"question": " For the school bake sale Chloe made 28 cupcakes. If she sold 25 of them and then made 8 more, how many cupcakes would she have? ", "executed": 11.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For the school bake sale Chloe made 28 cupcakes. If she sold 25 of them and then made 8 more, how many cupcakes would she have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cupcakes_made = 28\n    cupcakes_sold = 25\n    cupcakes_made_more = 8\n    cupcakes_left = cupcakes_made - cupcakes_sold\n    cupcakes_total = cupcakes_left + cupcakes_made_more\n    return cupcakes_total\nans = solver()", "answer": 11.0}
{"question": " At the town carnival Billy rode the ferris wheel 7 times and the bumper cars 3 times. If each ride cost 5 tickets, how many tickets did he use? ", "executed": 50.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the town carnival Billy rode the ferris wheel 7 times and the bumper cars 3 times. If each ride cost 5 tickets, how many tickets did he use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    ferris_wheel_cost = 5\n    bumper_cars_cost = 5\n    ferris_wheel_rides = 7\n    bumper_cars_rides = 3\n    total_cost = ferris_wheel_cost * ferris_wheel_rides + bumper_cars_cost * bumper_cars_rides\n    return total_cost\nans = solver()", "answer": 50.0}
{"question": " Chloe was unboxing some of her old winter clothes. She found 4 boxes of clothing and inside each box there were 2 scarves and 6 mittens. How many pieces of winter clothing did Chloe have total? ", "executed": 32.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Chloe was unboxing some of her old winter clothes. She found 4 boxes of clothing and inside each box there were 2 scarves and 6 mittens. How many pieces of winter clothing did Chloe have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    box_count = 4\n    scarf_count = 2\n    mitten_count = 6\n    total_count = box_count * (scarf_count + mitten_count)\n    return total_count\nans = solver()", "answer": 32.0}
{"question": " A waiter had 9 tables he was waiting on, with 7 women and 3 men at each table. How many customers total did the waiter have? ", "executed": 90.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter had 9 tables he was waiting on, with 7 women and 3 men at each table. How many customers total did the waiter have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_tables = 9\n    num_women_per_table = 7\n    num_men_per_table = 3\n    num_customers_per_table = num_women_per_table + num_men_per_table\n    num_customers = num_tables * num_customers_per_table\n    return num_customers\nans = solver()", "answer": 90.0}
{"question": " April's discount flowers was having a sale where each flower was 3 dollars. If Emily bought 2 roses and 2 daisies, how much did she spend? ", "executed": 12.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: April's discount flowers was having a sale where each flower was 3 dollars. If Emily bought 2 roses and 2 daisies, how much did she spend?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    roses = 2\n    daisies = 2\n    price_per_rose = 3\n    price_per_daisy = 3\n    total_price = roses * price_per_rose + daisies * price_per_daisy\n    return total_price\nans = solver()", "answer": 12.0}
{"question": " Isabel had 2 pages of math homework and 4 pages of reading homework. If each page had 5 problems on it, how many problems did she have to complete total? ", "executed": 30.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Isabel had 2 pages of math homework and 4 pages of reading homework. If each page had 5 problems on it, how many problems did she have to complete total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    math_pages = 2\n    reading_pages = 4\n    problems_per_page = 5\n    total_problems = math_pages * problems_per_page + reading_pages * problems_per_page\n    return total_problems\nans = solver()", "answer": 30.0}
{"question": " Wendy was playing a video game where she scores 5 points for each treasure she finds. If she found 4 treasures on the first level and 3 on the second, what would her score be? ", "executed": 35.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Wendy was playing a video game where she scores 5 points for each treasure she finds. If she found 4 treasures on the first level and 3 on the second, what would her score be?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    treasure_found_first_level = 4\n    treasure_found_second_level = 3\n    points_per_treasure = 5\n    score = 0\n    # In the second step, we can calculate the score:\n    score = treasure_found_first_level * points_per_treasure + treasure_found_second_level * points_per_treasure\n    return score\nans = solver()", "answer": 35.0}
{"question": " There were 7 friends playing a video game online when 2 more players joined the game. If each player had 7 lives, how many lives did they have total? ", "executed": 63.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 7 friends playing a video game online when 2 more players joined the game. If each player had 7 lives, how many lives did they have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_players = 7\n    num_lives = 7\n    total_lives = num_players * num_lives\n    print(\"In the first step, the total lives are: \", total_lives)\n    # In the second step, we can define the following variable:\n    num_players = num_players + 2\n    print(\"In the second step, the total lives are: \", total_lives)\n    # In the third step, we can define the following variable:\n    total_lives = num_players * num_lives\n    print(\"In the third step, the total lives are: \", total_lives)\n    return total_lives\nans = solver()", "answer": 63.0}
{"question": " Paul bought 6 boxes of chocolate candy and 4 boxes of caramel candy. If each box has 9 pieces inside it, how much candy did he have total? ", "executed": 90.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul bought 6 boxes of chocolate candy and 4 boxes of caramel candy. If each box has 9 pieces inside it, how much candy did he have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    chocolate_box_count = 6\n    caramel_box_count = 4\n    pieces_per_box = 9\n    total_pieces = chocolate_box_count * pieces_per_box + caramel_box_count * pieces_per_box\n    return total_pieces\nans = solver()", "answer": 90.0}
{"question": " A pet store has 6 bird cages. If each cage has 6 parrots and 2 parakeets in it, how many birds does the pet store have total? ", "executed": 48.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet store has 6 bird cages. If each cage has 6 parrots and 2 parakeets in it, how many birds does the pet store have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_cages = 6\n    num_parrots_per_cage = 6\n    num_parakeets_per_cage = 2\n    num_birds_per_cage = num_parrots_per_cage + num_parakeets_per_cage\n    num_birds_total = num_cages * num_birds_per_cage\n    return num_birds_total\nans = solver()", "answer": 48.0}
{"question": " Rachel was organizing her book case making sure each of the shelves had exactly 9 books on it. If she had 6 shelves of mystery books and 2 shelves of picture books, how many books did she have total? ", "executed": 72.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel was organizing her book case making sure each of the shelves had exactly 9 books on it. If she had 6 shelves of mystery books and 2 shelves of picture books, how many books did she have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_shelves = 6 + 2\n    num_books_per_shelf = 9\n    total_num_books = num_shelves * num_books_per_shelf\n    return total_num_books\nans = solver()", "answer": 72.0}
{"question": " Rachel was unboxing some of her old winter clothes. She found 7 boxes of clothing and inside each box there were 3 scarves and 4 mittens. How many pieces of winter clothing did Rachel have total? ", "executed": 49.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel was unboxing some of her old winter clothes. She found 7 boxes of clothing and inside each box there were 3 scarves and 4 mittens. How many pieces of winter clothing did Rachel have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_boxes = 7\n    num_scarves_per_box = 3\n    num_mittens_per_box = 4\n    # In the second step, we can calculate the total number of scarves and mittens\n    num_scarves = num_boxes * num_scarves_per_box\n    num_mittens = num_boxes * num_mittens_per_box\n    # In the third step, we can calculate the total number of pieces of winter clothing\n    num_winter_clothing = num_scarves + num_mittens\n    return num_winter_clothing\nans = solver()", "answer": 49.0}
{"question": " A pet store has 9 bird cages. If each cage has 2 parrots and 2 parakeets in it, how many birds does the pet store have total? ", "executed": 36.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet store has 9 bird cages. If each cage has 2 parrots and 2 parakeets in it, how many birds does the pet store have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_cages = 9\n    num_parrots_per_cage = 2\n    num_parakeets_per_cage = 2\n    num_birds_per_cage = num_parrots_per_cage + num_parakeets_per_cage\n    num_birds = num_cages * num_birds_per_cage\n    return num_birds\nans = solver()", "answer": 36.0}
{"question": " Cody bought 7 boxes of chocolate candy and 3 boxes of caramel candy. If each box has 8 pieces inside it, how much candy did he have total? ", "executed": 80.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Cody bought 7 boxes of chocolate candy and 3 boxes of caramel candy. If each box has 8 pieces inside it, how much candy did he have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    chocolate_box_price = 7\n    caramel_box_price = 3\n    pieces_per_box = 8\n    total_pieces = chocolate_box_price * pieces_per_box + caramel_box_price * pieces_per_box\n    return total_pieces\nans = solver()", "answer": 80.0}
{"question": " At Billy's Restaurant a group with 2 adults and 5 children came in to eat. If each meal cost 3 dollars, how much was the bill? ", "executed": 21.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At Billy's Restaurant a group with 2 adults and 5 children came in to eat. If each meal cost 3 dollars, how much was the bill?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    adults = 2\n    children = 5\n    meal_cost = 3\n    bill = (adults + children) * meal_cost\n    return bill\nans = solver()", "answer": 21.0}
{"question": " Paul was collecting cans for recycling. On Saturday he filled 6 bags up and on Sunday he filled 3 more bags. If each bag had 8 cans in it, how many cans did he pick up total? ", "executed": 72.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul was collecting cans for recycling. On Saturday he filled 6 bags up and on Sunday he filled 3 more bags. If each bag had 8 cans in it, how many cans did he pick up total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cans_per_bag = 8\n    # In the second step, we can define the following variable:\n    bags_on_saturday = 6\n    # In the third step, we can define the following variable:\n    bags_on_sunday = 3\n    # In the fourth step, we can define the following variable:\n    cans_on_saturday = cans_per_bag * bags_on_saturday\n    # In the fifth step, we can define the following variable:\n    cans_on_sunday = cans_per_bag * bags_on_sunday\n    # In the sixth step, we can define the following variable:\n    cans_total = cans_on_saturday + cans_on_sunday\n    return cans_total\nans = solver()", "answer": 72.0}
{"question": " While playing a trivia game, Adam answered 5 questions correct in the first half and 5 questions correct in the second half. If each question was worth 5 points, what was his final score? ", "executed": 50.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While playing a trivia game, Adam answered 5 questions correct in the first half and 5 questions correct in the second half. If each question was worth 5 points, what was his final score?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    first_half_score = 5\n    second_half_score = 5\n    question_worth = 5\n    # In the second step, we can calculate the final score:\n    final_score = first_half_score * question_worth + second_half_score * question_worth\n    return final_score\nans = solver()", "answer": 50.0}
{"question": " Haley's favorite band was holding a concert where tickets were 4 dollars each. Haley bought 3 tickets for herself and her friends and 5 extra tickets in case anyone else wanted to go. How much did she spend? ", "executed": 32.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Haley's favorite band was holding a concert where tickets were 4 dollars each. Haley bought 3 tickets for herself and her friends and 5 extra tickets in case anyone else wanted to go. How much did she spend?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    ticket_price = 4\n    # In the second step, we can define the following variable:\n    number_of_tickets_bought = 3\n    # In the third step, we can define the following variable:\n    number_of_extra_tickets_bought = 5\n    # In the fourth step, we can define the following variable:\n    total_number_of_tickets_bought = number_of_tickets_bought + number_of_extra_tickets_bought\n    # In the fifth step, we can define the following variable:\n    total_amount_spent = ticket_price * total_number_of_tickets_bought\n    return total_amount_spent\nans = solver()", "answer": 32.0}
{"question": " Luke was putting his spare change into piles. He had 5 piles of quarters and 5 piles of dimes. If each pile had 3 coins in it, how many coins did he have total? ", "executed": 30.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Luke was putting his spare change into piles. He had 5 piles of quarters and 5 piles of dimes. If each pile had 3 coins in it, how many coins did he have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    quarters = 5\n    dimes = 5\n    coins_per_pile = 3\n    total_coins = quarters * coins_per_pile + dimes * coins_per_pile\n    return total_coins\nans = solver()", "answer": 30.0}
{"question": " Victor and his friend were buying trick decks from the magic shop for 8 dollars each. How much did they spend if Victor bought 6 decks and his friend bought 2 decks? ", "executed": 64.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Victor and his friend were buying trick decks from the magic shop for 8 dollars each. How much did they spend if Victor bought 6 decks and his friend bought 2 decks?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    victor_decks = 6\n    friend_decks = 2\n    price_per_deck = 8\n    total_price = victor_decks * price_per_deck + friend_decks * price_per_deck\n    return total_price\nans = solver()", "answer": 64.0}
{"question": " Katie had 7 pages of math homework and 3 pages of reading homework. If each page had 9 problems on it, how many problems did she have to complete total? ", "executed": 90.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Katie had 7 pages of math homework and 3 pages of reading homework. If each page had 9 problems on it, how many problems did she have to complete total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    math_pages = 7\n    reading_pages = 3\n    problems_per_page = 9\n    total_problems = math_pages * problems_per_page + reading_pages * problems_per_page\n    return total_problems\nans = solver()", "answer": 90.0}
{"question": " Faye was playing a video game where she scores 7 points for each treasure she finds. If she found 2 treasures on the first level and 6 on the second, what would her score be? ", "executed": 56.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Faye was playing a video game where she scores 7 points for each treasure she finds. If she found 2 treasures on the first level and 6 on the second, what would her score be?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    treasure_found_first_level = 2\n    treasure_found_second_level = 6\n    points_per_treasure = 7\n    total_points = 0\n    # In the second step, we can calculate the total points:\n    total_points = treasure_found_first_level * points_per_treasure + treasure_found_second_level * points_per_treasure\n    return total_points\nans = solver()", "answer": 56.0}
{"question": " Gwen was organizing her book case making sure each of the shelves had exactly 9 books on it. If she had 3 shelves of mystery books and 5 shelves of picture books, how many books did she have total? ", "executed": 72.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Gwen was organizing her book case making sure each of the shelves had exactly 9 books on it. If she had 3 shelves of mystery books and 5 shelves of picture books, how many books did she have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_shelves = 3 + 5\n    # In the second step, we can define the following variable:\n    num_books_per_shelf = 9\n    # In the third step, we can define the following variable:\n    num_books = num_shelves * num_books_per_shelf\n    return num_books\nans = solver()", "answer": 72.0}
{"question": " There were 2 friends playing a video game online when 2 more players joined the game. If each player had 6 lives, how many lives did they have total? ", "executed": 24.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 2 friends playing a video game online when 2 more players joined the game. If each player had 6 lives, how many lives did they have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_players = 2\n    num_lives = 6\n    total_lives = num_players * num_lives\n    print(\"In the first step, there are {} players and each player has {} lives. So, the total lives are {}\".format(num_players, num_lives, total_lives))\n    # In the second step, we can define the following variable:\n    num_players = 4\n    num_lives = 6\n    total_lives = num_players * num_lives\n    print(\"In the second step, there are {} players and each player has {} lives. So, the total lives are {}\".format(num_players, num_lives, total_lives))\n    return total_lives\nans = solver()", "answer": 24.0}
{"question": " Wendy bought 4 new chairs and 4 new tables for her house. If she spent 6 minutes on each piece furniture putting it together, how many minutes did it take her to finish? ", "executed": 48.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Wendy bought 4 new chairs and 4 new tables for her house. If she spent 6 minutes on each piece furniture putting it together, how many minutes did it take her to finish?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    chairs = 4\n    tables = 4\n    minutes_per_piece = 6\n    total_minutes = 0\n    # In the second step, we can calculate the total minutes by adding up the minutes for each piece of furniture\n    total_minutes = chairs * minutes_per_piece + tables * minutes_per_piece\n    return total_minutes\nans = solver()", "answer": 48.0}
{"question": " April's discount flowers was having a sale where each flower was 3 dollars. If Zoe bought 8 roses and 2 daisies, how much did she spend? ", "executed": 30.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: April's discount flowers was having a sale where each flower was 3 dollars. If Zoe bought 8 roses and 2 daisies, how much did she spend?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    roses = 8\n    daisies = 2\n    price_of_rose = 3\n    price_of_daisy = 3\n    # In the second step, we can calculate the total price of roses and daisies:\n    total_price_of_roses = roses * price_of_rose\n    total_price_of_daisies = daisies * price_of_daisy\n    # In the third step, we can calculate the total price of all flowers:\n    total_price = total_price_of_roses + total_price_of_daisies\n    return total_price\nans = solver()", "answer": 30.0}
{"question": " Paige was unboxing some of her old winter clothes. She found 6 boxes of clothing and inside each box there were 5 scarves and 5 mittens. How many pieces of winter clothing did Paige have total? ", "executed": 60.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paige was unboxing some of her old winter clothes. She found 6 boxes of clothing and inside each box there were 5 scarves and 5 mittens. How many pieces of winter clothing did Paige have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_boxes = 6\n    num_scarves = 5\n    num_mittens = 5\n    num_clothes = num_boxes * (num_scarves + num_mittens)\n    return num_clothes\nans = solver()", "answer": 60.0}
{"question": " Sam was collecting cans for recycling. On Saturday he filled 4 bags up and on Sunday he filled 3 more bags. If each bag had 6 cans in it, how many cans did he pick up total? ", "executed": 42.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Sam was collecting cans for recycling. On Saturday he filled 4 bags up and on Sunday he filled 3 more bags. If each bag had 6 cans in it, how many cans did he pick up total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cans_per_bag = 6\n    # In the second step, we can define the following variable:\n    bags_on_saturday = 4\n    # In the third step, we can define the following variable:\n    bags_on_sunday = 3\n    # In the fourth step, we can define the following variable:\n    cans_on_saturday = cans_per_bag * bags_on_saturday\n    # In the fifth step, we can define the following variable:\n    cans_on_sunday = cans_per_bag * bags_on_sunday\n    # In the sixth step, we can define the following variable:\n    total_cans = cans_on_saturday + cans_on_sunday\n    return total_cans\nans = solver()", "answer": 42.0}
{"question": " George was working as a sacker at a grocery store where he made 5 dollars an hour. On Monday he worked 7 hours and on Tuesday he worked 2 hours. How much money did George make in those two days? ", "executed": 45.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: George was working as a sacker at a grocery store where he made 5 dollars an hour. On Monday he worked 7 hours and on Tuesday he worked 2 hours. How much money did George make in those two days?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    hourly_wage = 5\n    # In the second step, we can define the following variable:\n    hours_worked_on_monday = 7\n    # In the third step, we can define the following variable:\n    hours_worked_on_tuesday = 2\n    # In the fourth step, we can define the following variable:\n    total_hours_worked = hours_worked_on_monday + hours_worked_on_tuesday\n    # In the fifth step, we can define the following variable:\n    total_money_earned = hourly_wage * total_hours_worked\n    # In the sixth step, we can return the following variable:\n    return total_money_earned\nans = solver()", "answer": 45.0}
{"question": " While playing a trivia game, Frank answered 3 questions correct in the first half and 2 questions correct in the second half. If each question was worth 3 points, what was his final score? ", "executed": 15.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While playing a trivia game, Frank answered 3 questions correct in the first half and 2 questions correct in the second half. If each question was worth 3 points, what was his final score?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    first_half_score = 3\n    second_half_score = 2\n    points_per_question = 3\n    total_score = first_half_score * points_per_question + second_half_score * points_per_question\n    return total_score\nans = solver()", "answer": 15.0}
{"question": " Edward and his friend were buying trick decks from the magic shop for 9 dollars each. How much did they spend if Edward bought 4 decks and his friend bought 4 decks? ", "executed": 72.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Edward and his friend were buying trick decks from the magic shop for 9 dollars each. How much did they spend if Edward bought 4 decks and his friend bought 4 decks?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    edward_decks = 4\n    friend_decks = 4\n    price_per_deck = 9\n    total_price = edward_decks * price_per_deck + friend_decks * price_per_deck\n    return total_price\nans = solver()", "answer": 72.0}
{"question": " Tom and his friend were buying trick decks from the magic shop for 8 dollars each. How much did they spend if Tom bought 3 decks and his friend bought 5 decks? ", "executed": 64.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Tom and his friend were buying trick decks from the magic shop for 8 dollars each. How much did they spend if Tom bought 3 decks and his friend bought 5 decks?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    tom = 3\n    friend = 5\n    price = 8\n    total = tom * price + friend * price\n    return total\nans = solver()", "answer": 64.0}
{"question": " While shopping for music online, Megan bought 2 country albums and 8 pop albums. Each album came with a lyric sheet and had 7 songs. How many songs did Megan buy total? ", "executed": 70.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While shopping for music online, Megan bought 2 country albums and 8 pop albums. Each album came with a lyric sheet and had 7 songs. How many songs did Megan buy total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    country_albums = 2\n    pop_albums = 8\n    songs_per_album = 7\n    lyric_sheets_per_album = 1\n    # In the second step, we can calculate the total number of songs and lyric sheets:\n    total_songs = country_albums * songs_per_album + pop_albums * songs_per_album\n    total_lyric_sheets = country_albums * lyric_sheets_per_album + pop_albums * lyric_sheets_per_album\n    # In the third step, we can return the answer:\n    return total_songs\nans = solver()", "answer": 70.0}
{"question": " Victor was working as a sacker at a grocery store where he made 6 dollars an hour. On Monday he worked 5 hours and on Tuesday he worked 5 hours. How much money did Victor make in those two days? ", "executed": 60.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Victor was working as a sacker at a grocery store where he made 6 dollars an hour. On Monday he worked 5 hours and on Tuesday he worked 5 hours. How much money did Victor make in those two days?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    hourly_wage = 6\n    # In the second step, we can define the following variable:\n    hours_worked_on_monday = 5\n    hours_worked_on_tuesday = 5\n    # In the third step, we can define the following variable:\n    money_made_on_monday = hourly_wage * hours_worked_on_monday\n    money_made_on_tuesday = hourly_wage * hours_worked_on_tuesday\n    # In the fourth step, we can define the following variable:\n    total_money_made = money_made_on_monday + money_made_on_tuesday\n    return total_money_made\nans = solver()", "answer": 60.0}
{"question": " A pet store has 6 bird cages. If each cage has 2 parrots and 7 parakeets in it, how many birds does the pet store have total? ", "executed": 54.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet store has 6 bird cages. If each cage has 2 parrots and 7 parakeets in it, how many birds does the pet store have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_cages = 6\n    num_parrots_per_cage = 2\n    num_parakeets_per_cage = 7\n    # In the second step, we can calculate the total number of parrots and parakeets in the pet store:\n    num_parrots = num_cages * num_parrots_per_cage\n    num_parakeets = num_cages * num_parakeets_per_cage\n    # In the third step, we can calculate the total number of birds in the pet store:\n    num_birds = num_parrots + num_parakeets\n    return num_birds\nans = solver()", "answer": 54.0}
{"question": " Maria bought 2 new chairs and 2 new tables for her house. If she spent 8 minutes on each piece furniture putting it together, how many minutes did it take her to finish? ", "executed": 32.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Maria bought 2 new chairs and 2 new tables for her house. If she spent 8 minutes on each piece furniture putting it together, how many minutes did it take her to finish?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    chairs = 2\n    tables = 2\n    minutes_per_piece = 8\n    total_minutes = 0\n    # In the second step, we can calculate the total minutes:\n    total_minutes = chairs * minutes_per_piece + tables * minutes_per_piece\n    return total_minutes\nans = solver()", "answer": 32.0}
{"question": " Olivia was playing a video game where she scores 8 points for each treasure she finds. If she found 2 treasures on the first level and 2 on the second, what would her score be? ", "executed": 32.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Olivia was playing a video game where she scores 8 points for each treasure she finds. If she found 2 treasures on the first level and 2 on the second, what would her score be?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    score = 0\n    # In the second step, we can define the following variable:\n    treasures_found = 2\n    # In the third step, we can define the following variable:\n    treasures_found = treasures_found + 2\n    # In the fourth step, we can define the following variable:\n    score = treasures_found * 8\n    return score\nans = solver()", "answer": 32.0}
{"question": " A waiter had 6 tables he was waiting on, with 3 women and 5 men at each table. How many customers total did the waiter have? ", "executed": 48.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter had 6 tables he was waiting on, with 3 women and 5 men at each table. How many customers total did the waiter have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_tables = 6\n    num_women_per_table = 3\n    num_men_per_table = 5\n    num_customers_per_table = num_women_per_table + num_men_per_table\n    num_customers = num_tables * num_customers_per_table\n    return num_customers\nans = solver()", "answer": 48.0}
{"question": " Faye was selling her necklaces at a garage sale. She sold 3 bead necklaces and 7 gem stone necklaces. If each necklace cost 7 dollars, how much money did she earn? ", "executed": 70.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Faye was selling her necklaces at a garage sale. She sold 3 bead necklaces and 7 gem stone necklaces. If each necklace cost 7 dollars, how much money did she earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    bead_necklace_price = 7\n    gem_stone_necklace_price = 7\n    bead_necklace_quantity = 3\n    gem_stone_necklace_quantity = 7\n    # In the second step, we can calculate the total price of bead necklaces and gem stone necklaces\n    bead_necklace_total_price = bead_necklace_price * bead_necklace_quantity\n    gem_stone_necklace_total_price = gem_stone_necklace_price * gem_stone_necklace_quantity\n    # In the third step, we can calculate the total price of all necklaces\n    total_price = bead_necklace_total_price + gem_stone_necklace_total_price\n    return total_price\nans = solver()", "answer": 70.0}
{"question": " At the town carnival Oliver rode the ferris wheel 5 times and the bumper cars 4 times. If each ride cost 7 tickets, how many tickets did he use? ", "executed": 63.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the town carnival Oliver rode the ferris wheel 5 times and the bumper cars 4 times. If each ride cost 7 tickets, how many tickets did he use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    ferris_wheel_times = 5\n    bumper_cars_times = 4\n    ticket_cost = 7\n    # In the second step, we can calculate the total tickets used:\n    total_tickets = ferris_wheel_times * ticket_cost + bumper_cars_times * ticket_cost\n    return total_tickets\nans = solver()", "answer": 63.0}
{"question": " There were 5 friends playing a video game online when 2 more players joined the game. If each player had 8 lives, how many lives did they have total? ", "executed": 56.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 5 friends playing a video game online when 2 more players joined the game. If each player had 8 lives, how many lives did they have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_of_players = 5\n    lives_per_player = 8\n    total_lives = num_of_players * lives_per_player\n    print(\"In the first step, we have {} players, each with {} lives, so the total lives is {}\".format(num_of_players, lives_per_player, total_lives))\n    # In the second step, we can define the following variable:\n    num_of_players = num_of_players + 2\n    total_lives = num_of_players * lives_per_player\n    print(\"In the second step, we have {} players, each with {} lives, so the total lives is {}\".format(num_of_players, lives_per_player, total_lives))\n    return total_lives\nans = solver()", "answer": 56.0}
{"question": " Katie was selling her necklaces at a garage sale. She sold 4 bead necklaces and 3 gem stone necklaces. If each necklace cost 3 dollars, how much money did she earn? ", "executed": 21.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Katie was selling her necklaces at a garage sale. She sold 4 bead necklaces and 3 gem stone necklaces. If each necklace cost 3 dollars, how much money did she earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    bead_necklace_price = 3\n    gem_stone_necklace_price = 3\n    bead_necklace_sold = 4\n    gem_stone_necklace_sold = 3\n    total_price = bead_necklace_price * bead_necklace_sold + gem_stone_necklace_price * gem_stone_necklace_sold\n    return total_price\nans = solver()", "answer": 21.0}
{"question": " Edward was working as a sacker at a grocery store where he made 6 dollars an hour. On Monday he worked 3 hours and on Tuesday he worked 5 hours. How much money did Edward make in those two days? ", "executed": 48.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Edward was working as a sacker at a grocery store where he made 6 dollars an hour. On Monday he worked 3 hours and on Tuesday he worked 5 hours. How much money did Edward make in those two days?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    hourly_wage = 6\n    # In the second step, we can define the following variable:\n    hours_worked_on_monday = 3\n    # In the third step, we can define the following variable:\n    hours_worked_on_tuesday = 5\n    # In the fourth step, we can define the following variable:\n    money_earned_on_monday = hourly_wage * hours_worked_on_monday\n    # In the fifth step, we can define the following variable:\n    money_earned_on_tuesday = hourly_wage * hours_worked_on_tuesday\n    # In the sixth step, we can define the following variable:\n    total_money_earned = money_earned_on_monday + money_earned_on_tuesday\n    return total_money_earned\nans = solver()", "answer": 48.0}
{"question": " While playing a trivia game, Mike answered 3 questions correct in the first half and 5 questions correct in the second half. If each question was worth 3 points, what was his final score? ", "executed": 24.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While playing a trivia game, Mike answered 3 questions correct in the first half and 5 questions correct in the second half. If each question was worth 3 points, what was his final score?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    first_half_score = 3\n    second_half_score = 5\n    question_point = 3\n    final_score = first_half_score * question_point + second_half_score * question_point\n    return final_score\nans = solver()", "answer": 24.0}
{"question": " Amy was playing a video game where she scores 4 points for each treasure she finds. If she found 6 treasures on the first level and 2 on the second, what would her score be? ", "executed": 32.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Amy was playing a video game where she scores 4 points for each treasure she finds. If she found 6 treasures on the first level and 2 on the second, what would her score be?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    score = 0\n    # In the second step, we can define the following variable:\n    treasures_found_in_level_1 = 6\n    treasures_found_in_level_2 = 2\n    # In the third step, we can define the following variable:\n    score_for_each_treasure = 4\n    # In the fourth step, we can define the following variable:\n    score_for_level_1 = treasures_found_in_level_1 * score_for_each_treasure\n    score_for_level_2 = treasures_found_in_level_2 * score_for_each_treasure\n    # In the fifth step, we can define the following variable:\n    score = score_for_level_1 + score_for_level_2\n    return score\nans = solver()", "answer": 32.0}
{"question": " A waiter had 9 tables he was waiting on, with 4 women and 3 men at each table. How many customers total did the waiter have? ", "executed": 63.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter had 9 tables he was waiting on, with 4 women and 3 men at each table. How many customers total did the waiter have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_tables = 9\n    num_customers_per_table = 4 + 3\n    num_customers = num_tables * num_customers_per_table\n    return num_customers\nans = solver()", "answer": 63.0}
{"question": " Chloe was organizing her book case making sure each of the shelves had exactly 6 books on it. If she had 5 shelves of mystery books and 4 shelves of picture books, how many books did she have total? ", "executed": 54.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Chloe was organizing her book case making sure each of the shelves had exactly 6 books on it. If she had 5 shelves of mystery books and 4 shelves of picture books, how many books did she have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_shelves = 5 + 4\n    # In the second step, we can define the following variable:\n    num_books_per_shelf = 6\n    # In the third step, we can define the following variable:\n    num_books = num_shelves * num_books_per_shelf\n    return num_books\nans = solver()", "answer": 54.0}
{"question": " While shopping for music online, Isabel bought 6 country albums and 2 pop albums. Each album came with a lyric sheet and had 9 songs. How many songs did Isabel buy total? ", "executed": 72.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While shopping for music online, Isabel bought 6 country albums and 2 pop albums. Each album came with a lyric sheet and had 9 songs. How many songs did Isabel buy total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    country_albums = 6\n    pop_albums = 2\n    songs_per_album = 9\n    total_songs = country_albums * songs_per_album + pop_albums * songs_per_album\n    return total_songs\nans = solver()", "answer": 72.0}
{"question": " At Oliver's Restaurant a group with 2 adults and 4 children came in to eat. If each meal cost 3 dollars, how much was the bill? ", "executed": 18.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At Oliver's Restaurant a group with 2 adults and 4 children came in to eat. If each meal cost 3 dollars, how much was the bill?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    adults = 2\n    children = 4\n    meal_cost = 3\n    bill = (adults + children) * meal_cost\n    return bill\nans = solver()", "answer": 18.0}
{"question": " Tiffany had 6 pages of math homework and 4 pages of reading homework. If each page had 3 problems on it, how many problems did she have to complete total? ", "executed": 30.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Tiffany had 6 pages of math homework and 4 pages of reading homework. If each page had 3 problems on it, how many problems did she have to complete total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    math_pages = 6\n    reading_pages = 4\n    problems_per_page = 3\n    total_problems = math_pages * problems_per_page + reading_pages * problems_per_page\n    return total_problems\nans = solver()", "answer": 30.0}
{"question": " April's discount flowers was having a sale where each flower was 3 dollars. If Robin bought 5 roses and 4 daisies, how much did she spend? ", "executed": 27.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: April's discount flowers was having a sale where each flower was 3 dollars. If Robin bought 5 roses and 4 daisies, how much did she spend?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    roses = 5\n    daisies = 4\n    price_of_rose = 3\n    price_of_daisy = 3\n    total_price = 0\n    total_price = roses * price_of_rose + daisies * price_of_daisy\n    return total_price\nans = solver()", "answer": 27.0}
{"question": " Zoe was unboxing some of her old winter clothes. She found 8 boxes of clothing and inside each box there were 4 scarves and 6 mittens. How many pieces of winter clothing did Zoe have total? ", "executed": 80.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Zoe was unboxing some of her old winter clothes. She found 8 boxes of clothing and inside each box there were 4 scarves and 6 mittens. How many pieces of winter clothing did Zoe have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_boxes = 8\n    num_scarves_per_box = 4\n    num_mittens_per_box = 6\n    # In the second step, we can calculate the total number of scarves and mittens\n    total_scarves = num_boxes * num_scarves_per_box\n    total_mittens = num_boxes * num_mittens_per_box\n    # In the third step, we can calculate the total number of pieces of winter clothing\n    total_winter_clothing = total_scarves + total_mittens\n    return total_winter_clothing\nans = solver()", "answer": 80.0}
{"question": " There were 2 friends playing a video game online when 2 more players joined the game. If each player had 3 lives, how many lives did they have total? ", "executed": 12.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 2 friends playing a video game online when 2 more players joined the game. If each player had 3 lives, how many lives did they have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_players = 2\n    num_lives = 3\n    total_lives = num_players * num_lives\n    print(\"In the first step, there are {} players and each player has {} lives. So, the total lives are {}\".format(num_players, num_lives, total_lives))\n    # In the second step, we can define the following variable:\n    num_players = 4\n    num_lives = 3\n    total_lives = num_players * num_lives\n    print(\"In the second step, there are {} players and each player has {} lives. So, the total lives are {}\".format(num_players, num_lives, total_lives))\n    return total_lives\nans = solver()", "answer": 12.0}
{"question": " Adam bought 2 boxes of chocolate candy and 5 boxes of caramel candy. If each box has 4 pieces inside it, how much candy did he have total? ", "executed": 28.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Adam bought 2 boxes of chocolate candy and 5 boxes of caramel candy. If each box has 4 pieces inside it, how much candy did he have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    chocolate_box = 2\n    caramel_box = 5\n    pieces_per_box = 4\n    total_pieces = chocolate_box * pieces_per_box + caramel_box * pieces_per_box\n    return total_pieces\nans = solver()", "answer": 28.0}
{"question": " A pet store has 8 bird cages. If each cage has 2 parrots and 7 parakeets in it, how many birds does the pet store have total? ", "executed": 72.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet store has 8 bird cages. If each cage has 2 parrots and 7 parakeets in it, how many birds does the pet store have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_cages = 8\n    num_parrots_per_cage = 2\n    num_parakeets_per_cage = 7\n    # In the second step, we can calculate the total number of parrots and parakeets in the pet store:\n    num_parrots = num_cages * num_parrots_per_cage\n    num_parakeets = num_cages * num_parakeets_per_cage\n    # In the third step, we can calculate the total number of birds in the pet store:\n    num_birds = num_parrots + num_parakeets\n    return num_birds\nans = solver()", "answer": 72.0}
{"question": " Lana's favorite band was holding a concert where tickets were 6 dollars each. Lana bought 8 tickets for herself and her friends and 2 extra tickets in case anyone else wanted to go. How much did she spend? ", "executed": 60.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Lana's favorite band was holding a concert where tickets were 6 dollars each. Lana bought 8 tickets for herself and her friends and 2 extra tickets in case anyone else wanted to go. How much did she spend?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    ticket_price = 6\n    number_of_tickets = 8\n    extra_tickets = 2\n    total_tickets = number_of_tickets + extra_tickets\n    total_cost = ticket_price * total_tickets\n    return total_cost\nans = solver()", "answer": 60.0}
{"question": " At Tom's Restaurant a group with 2 adults and 5 children came in to eat. If each meal cost 8 dollars, how much was the bill? ", "executed": 56.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At Tom's Restaurant a group with 2 adults and 5 children came in to eat. If each meal cost 8 dollars, how much was the bill?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    adults = 2\n    children = 5\n    meal_cost = 8\n    total_cost = adults * meal_cost + children * meal_cost\n    return total_cost\nans = solver()", "answer": 56.0}
{"question": " Gwen was organizing her book case making sure each of the shelves had exactly 4 books on it. If she had 5 shelves of mystery books and 3 shelves of picture books, how many books did she have total? ", "executed": 32.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Gwen was organizing her book case making sure each of the shelves had exactly 4 books on it. If she had 5 shelves of mystery books and 3 shelves of picture books, how many books did she have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_shelves = 5 + 3\n    # In the second step, we can define the following variable:\n    num_books_per_shelf = 4\n    # In the third step, we can define the following variable:\n    num_books = num_shelves * num_books_per_shelf\n    return num_books\nans = solver()", "answer": 32.0}
{"question": " While shopping for music online, Isabel bought 4 country albums and 5 pop albums. Each album came with a lyric sheet and had 8 songs. How many songs did Isabel buy total? ", "executed": 72.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While shopping for music online, Isabel bought 4 country albums and 5 pop albums. Each album came with a lyric sheet and had 8 songs. How many songs did Isabel buy total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    country_albums = 4\n    pop_albums = 5\n    songs_per_album = 8\n    total_songs = country_albums * songs_per_album + pop_albums * songs_per_album\n    return total_songs\nans = solver()", "answer": 72.0}
{"question": " Megan was selling her necklaces at a garage sale. She sold 7 bead necklaces and 3 gem stone necklaces. If each necklace cost 9 dollars, how much money did she earn? ", "executed": 90.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Megan was selling her necklaces at a garage sale. She sold 7 bead necklaces and 3 gem stone necklaces. If each necklace cost 9 dollars, how much money did she earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    bead_necklace_price = 9\n    gem_stone_necklace_price = 9\n    bead_necklace_quantity = 7\n    gem_stone_necklace_quantity = 3\n    bead_necklace_total_price = bead_necklace_price * bead_necklace_quantity\n    gem_stone_necklace_total_price = gem_stone_necklace_price * gem_stone_necklace_quantity\n    total_price = bead_necklace_total_price + gem_stone_necklace_total_price\n    return total_price\nans = solver()", "answer": 90.0}
{"question": " Rachel was playing a video game where she scores 9 points for each treasure she finds. If she found 5 treasures on the first level and 2 on the second, what would her score be? ", "executed": 63.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel was playing a video game where she scores 9 points for each treasure she finds. If she found 5 treasures on the first level and 2 on the second, what would her score be?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    treasure_found_first_level = 5\n    treasure_found_second_level = 2\n    score_per_treasure = 9\n    # In the second step, we can calculate the score for each level:\n    score_first_level = treasure_found_first_level * score_per_treasure\n    score_second_level = treasure_found_second_level * score_per_treasure\n    # In the third step, we can calculate the total score:\n    total_score = score_first_level + score_second_level\n    return total_score\nans = solver()", "answer": 63.0}
{"question": " April's discount flowers was having a sale where each flower was 6 dollars. If Katie bought 5 roses and 5 daisies, how much did she spend? ", "executed": 60.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: April's discount flowers was having a sale where each flower was 6 dollars. If Katie bought 5 roses and 5 daisies, how much did she spend?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    roses = 5\n    daisies = 5\n    price_of_rose = 6\n    price_of_daisy = 6\n    total_price = 0\n    # In the second step, we can calculate the total price:\n    total_price = roses * price_of_rose + daisies * price_of_daisy\n    return total_price\nans = solver()", "answer": 60.0}
{"question": " A pet store has 9 bird cages. If each cage has 2 parrots and 6 parakeets in it, how many birds does the pet store have total? ", "executed": 72.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet store has 9 bird cages. If each cage has 2 parrots and 6 parakeets in it, how many birds does the pet store have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_cages = 9\n    num_parrots_per_cage = 2\n    num_parakeets_per_cage = 6\n    num_birds_per_cage = num_parrots_per_cage + num_parakeets_per_cage\n    num_birds = num_cages * num_birds_per_cage\n    return num_birds\nans = solver()", "answer": 72.0}
{"question": " Roger was putting his spare change into piles. He had 3 piles of quarters and 3 piles of dimes. If each pile had 7 coins in it, how many coins did he have total? ", "executed": 42.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Roger was putting his spare change into piles. He had 3 piles of quarters and 3 piles of dimes. If each pile had 7 coins in it, how many coins did he have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    quarters = 3\n    dimes = 3\n    coins_per_pile = 7\n    total_coins = quarters * coins_per_pile + dimes * coins_per_pile\n    return total_coins\nans = solver()", "answer": 42.0}
{"question": " There were 2 friends playing a video game online when 2 more players joined the game. If each player had 8 lives, how many lives did they have total? ", "executed": 32.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 2 friends playing a video game online when 2 more players joined the game. If each player had 8 lives, how many lives did they have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_players = 2\n    num_lives = 8\n    total_lives = num_players * num_lives\n    print(\"In the first step, there are {} players and each player has {} lives. So, the total lives are {}\".format(num_players, num_lives, total_lives))\n    # In the second step, we can define the following variable:\n    num_players = 4\n    num_lives = 8\n    total_lives = num_players * num_lives\n    print(\"In the second step, there are {} players and each player has {} lives. So, the total lives are {}\".format(num_players, num_lives, total_lives))\n    return total_lives\nans = solver()", "answer": 32.0}
{"question": " A waiter had 7 tables he was waiting on, with 7 women and 2 men at each table. How many customers total did the waiter have? ", "executed": 63.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter had 7 tables he was waiting on, with 7 women and 2 men at each table. How many customers total did the waiter have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_tables = 7\n    num_customers_per_table = 7 + 2\n    num_customers = num_tables * num_customers_per_table\n    return num_customers\nans = solver()", "answer": 63.0}
{"question": " Tiffany was playing a video game where she scores 6 points for each treasure she finds. If she found 3 treasures on the first level and 5 on the second, what would her score be? ", "executed": 48.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Tiffany was playing a video game where she scores 6 points for each treasure she finds. If she found 3 treasures on the first level and 5 on the second, what would her score be?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    treasures_found_in_level_1 = 3\n    treasures_found_in_level_2 = 5\n    points_per_treasure = 6\n    total_points = 0\n    # In the second step, we can calculate the total points:\n    total_points = treasures_found_in_level_1 * points_per_treasure + treasures_found_in_level_2 * points_per_treasure\n    return total_points\nans = solver()", "answer": 48.0}
{"question": " While shopping for music online, Zoe bought 3 country albums and 5 pop albums. Each album came with a lyric sheet and had 3 songs. How many songs did Zoe buy total? ", "executed": 24.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While shopping for music online, Zoe bought 3 country albums and 5 pop albums. Each album came with a lyric sheet and had 3 songs. How many songs did Zoe buy total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    country_albums = 3\n    pop_albums = 5\n    songs_per_album = 3\n    total_songs = country_albums * songs_per_album + pop_albums * songs_per_album\n    return total_songs\nans = solver()", "answer": 24.0}
{"question": " Megan was organizing her book case making sure each of the shelves had exactly 7 books on it. If she had 8 shelves of mystery books and 2 shelves of picture books, how many books did she have total? ", "executed": 70.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Megan was organizing her book case making sure each of the shelves had exactly 7 books on it. If she had 8 shelves of mystery books and 2 shelves of picture books, how many books did she have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_shelves = 8 + 2\n    num_books_per_shelf = 7\n    num_books = num_shelves * num_books_per_shelf\n    return num_books\nans = solver()", "answer": 70.0}
{"question": " Isabel was selling her necklaces at a garage sale. She sold 3 bead necklaces and 3 gem stone necklaces. If each necklace cost 6 dollars, how much money did she earn? ", "executed": 36.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Isabel was selling her necklaces at a garage sale. She sold 3 bead necklaces and 3 gem stone necklaces. If each necklace cost 6 dollars, how much money did she earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    bead_necklace_price = 6\n    gem_stone_necklace_price = 6\n    bead_necklace_sold = 3\n    gem_stone_necklace_sold = 3\n    total_price = bead_necklace_price * bead_necklace_sold + gem_stone_necklace_price * gem_stone_necklace_sold\n    return total_price\nans = solver()", "answer": 36.0}
{"question": " Frank was collecting cans for recycling. On Saturday he filled 5 bags up and on Sunday he filled 3 more bags. If each bag had 5 cans in it, how many cans did he pick up total? ", "executed": 40.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank was collecting cans for recycling. On Saturday he filled 5 bags up and on Sunday he filled 3 more bags. If each bag had 5 cans in it, how many cans did he pick up total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cans_per_bag = 5\n    # In the second step, we can define the following variable:\n    bags_on_saturday = 5\n    # In the third step, we can define the following variable:\n    bags_on_sunday = 3\n    # In the fourth step, we can define the following variable:\n    cans_on_saturday = cans_per_bag * bags_on_saturday\n    # In the fifth step, we can define the following variable:\n    cans_on_sunday = cans_per_bag * bags_on_sunday\n    # In the sixth step, we can define the following variable:\n    cans_total = cans_on_saturday + cans_on_sunday\n    return cans_total\nans = solver()", "answer": 40.0}
{"question": " April's discount flowers was having a sale where each flower was 8 dollars. If Vanessa bought 3 roses and 3 daisies, how much did she spend? ", "executed": 48.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: April's discount flowers was having a sale where each flower was 8 dollars. If Vanessa bought 3 roses and 3 daisies, how much did she spend?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    roses = 3\n    daisies = 3\n    price_of_rose = 8\n    price_of_daisy = 8\n    total_price = roses * price_of_rose + daisies * price_of_daisy\n    return total_price\nans = solver()", "answer": 48.0}
{"question": " Will was working as a sacker at a grocery store where he made 8 dollars an hour. On Monday he worked 8 hours and on Tuesday he worked 2 hours. How much money did Will make in those two days? ", "executed": 80.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Will was working as a sacker at a grocery store where he made 8 dollars an hour. On Monday he worked 8 hours and on Tuesday he worked 2 hours. How much money did Will make in those two days?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    hourly_wage = 8\n    # In the second step, we can define the following variable:\n    hours_worked_on_monday = 8\n    # In the third step, we can define the following variable:\n    hours_worked_on_tuesday = 2\n    # In the fourth step, we can define the following variable:\n    total_hours_worked = hours_worked_on_monday + hours_worked_on_tuesday\n    # In the fifth step, we can define the following variable:\n    total_money_earned = hourly_wage * total_hours_worked\n    # In the sixth step, we can return the answer:\n    return total_money_earned\nans = solver()", "answer": 80.0}
{"question": " Rachel bought 7 new chairs and 3 new tables for her house. If she spent 4 minutes on each piece furniture putting it together, how many minutes did it take her to finish? ", "executed": 40.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Rachel bought 7 new chairs and 3 new tables for her house. If she spent 4 minutes on each piece furniture putting it together, how many minutes did it take her to finish?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_chairs = 7\n    num_tables = 3\n    time_per_piece = 4\n    total_time = 0\n    # In the second step, we can calculate the total time:\n    total_time = num_chairs * time_per_piece + num_tables * time_per_piece\n    return total_time\nans = solver()", "answer": 40.0}
{"question": " While playing a trivia game, Adam answered 8 questions correct in the first half and 2 questions correct in the second half. If each question was worth 8 points, what was his final score? ", "executed": 80.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While playing a trivia game, Adam answered 8 questions correct in the first half and 2 questions correct in the second half. If each question was worth 8 points, what was his final score?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    first_half_score = 8\n    second_half_score = 2\n    question_worth = 8\n    # In the second step, we can calculate the total score:\n    total_score = first_half_score * question_worth + second_half_score * question_worth\n    return total_score\nans = solver()", "answer": 80.0}
{"question": " A pet store has 4 bird cages. If each cage has 8 parrots and 2 parakeets in it, how many birds does the pet store have total? ", "executed": 40.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet store has 4 bird cages. If each cage has 8 parrots and 2 parakeets in it, how many birds does the pet store have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_cages = 4\n    num_parrots_per_cage = 8\n    num_parakeets_per_cage = 2\n    # In the second step, we can calculate the total number of parrots and parakeets in the pet store:\n    num_parrots = num_cages * num_parrots_per_cage\n    num_parakeets = num_cages * num_parakeets_per_cage\n    # In the third step, we can calculate the total number of birds in the pet store:\n    num_birds = num_parrots + num_parakeets\n    return num_birds\nans = solver()", "answer": 40.0}
{"question": " Kaleb was collecting cans for recycling. On Saturday he filled 5 bags up and on Sunday he filled 5 more bags. If each bag had 4 cans in it, how many cans did he pick up total? ", "executed": 40.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Kaleb was collecting cans for recycling. On Saturday he filled 5 bags up and on Sunday he filled 5 more bags. If each bag had 4 cans in it, how many cans did he pick up total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cans_per_bag = 4\n    # In the second step, we can define the following variable:\n    bags_on_saturday = 5\n    # In the third step, we can define the following variable:\n    bags_on_sunday = 5\n    # In the fourth step, we can define the following variable:\n    cans_on_saturday = cans_per_bag * bags_on_saturday\n    # In the fifth step, we can define the following variable:\n    cans_on_sunday = cans_per_bag * bags_on_sunday\n    # In the sixth step, we can define the following variable:\n    cans_total = cans_on_saturday + cans_on_sunday\n    return cans_total\nans = solver()", "answer": 40.0}
{"question": " Bianca was organizing her book case making sure each of the shelves had exactly 8 books on it. If she had 5 shelves of mystery books and 4 shelves of picture books, how many books did she have total? ", "executed": 72.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bianca was organizing her book case making sure each of the shelves had exactly 8 books on it. If she had 5 shelves of mystery books and 4 shelves of picture books, how many books did she have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_shelves = 5 + 4\n    # In the second step, we can define the following variable:\n    num_books_per_shelf = 8\n    # In the third step, we can define the following variable:\n    total_num_books = num_shelves * num_books_per_shelf\n    return total_num_books\nans = solver()", "answer": 72.0}
{"question": " Billy was putting his spare change into piles. He had 2 piles of quarters and 3 piles of dimes. If each pile had 4 coins in it, how many coins did he have total? ", "executed": 20.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Billy was putting his spare change into piles. He had 2 piles of quarters and 3 piles of dimes. If each pile had 4 coins in it, how many coins did he have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    quarters = 2\n    dimes = 3\n    coins_per_pile = 4\n    total_coins = quarters * coins_per_pile + dimes * coins_per_pile\n    return total_coins\nans = solver()", "answer": 20.0}
{"question": " Chloe was playing a video game where she scores 9 points for each treasure she finds. If she found 6 treasures on the first level and 3 on the second, what would her score be? ", "executed": 81.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Chloe was playing a video game where she scores 9 points for each treasure she finds. If she found 6 treasures on the first level and 3 on the second, what would her score be?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    treasure_found_first_level = 6\n    treasure_found_second_level = 3\n    score_per_treasure = 9\n    total_score = 0\n    # In the second step, we can calculate the total score:\n    total_score = treasure_found_first_level * score_per_treasure + treasure_found_second_level * score_per_treasure\n    return total_score\nans = solver()", "answer": 81.0}
{"question": " While shopping for music online, Nancy bought 3 country albums and 5 pop albums. Each album came with a lyric sheet and had 8 songs. How many songs did Nancy buy total? ", "executed": 64.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While shopping for music online, Nancy bought 3 country albums and 5 pop albums. Each album came with a lyric sheet and had 8 songs. How many songs did Nancy buy total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    country_albums = 3\n    pop_albums = 5\n    songs_per_album = 8\n    total_songs = country_albums * songs_per_album + pop_albums * songs_per_album\n    return total_songs\nans = solver()", "answer": 64.0}
{"question": " Lana was unboxing some of her old winter clothes. She found 3 boxes of clothing and inside each box there were 3 scarves and 4 mittens. How many pieces of winter clothing did Lana have total? ", "executed": 21.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Lana was unboxing some of her old winter clothes. She found 3 boxes of clothing and inside each box there were 3 scarves and 4 mittens. How many pieces of winter clothing did Lana have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    box_of_clothing = 3\n    scarf = 3\n    mitten = 4\n    total_clothing = box_of_clothing * (scarf + mitten)\n    return total_clothing\nans = solver()", "answer": 21.0}
{"question": " Frank and his friend were buying trick decks from the magic shop for 7 dollars each. How much did they spend if Frank bought 3 decks and his friend bought 2 decks? ", "executed": 35.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank and his friend were buying trick decks from the magic shop for 7 dollars each. How much did they spend if Frank bought 3 decks and his friend bought 2 decks?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    frank_decks = 3\n    friend_decks = 2\n    price_per_deck = 7\n    total_price = frank_decks * price_per_deck + friend_decks * price_per_deck\n    return total_price\nans = solver()", "answer": 35.0}
{"question": " A waiter had 5 tables he was waiting on, with 5 women and 3 men at each table. How many customers total did the waiter have? ", "executed": 40.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter had 5 tables he was waiting on, with 5 women and 3 men at each table. How many customers total did the waiter have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_tables = 5\n    num_women_per_table = 5\n    num_men_per_table = 3\n    num_customers_per_table = num_women_per_table + num_men_per_table\n    num_customers = num_tables * num_customers_per_table\n    return num_customers\nans = solver()", "answer": 40.0}
{"question": " There were 8 friends playing a video game online when 2 more players joined the game. If each player had 6 lives, how many lives did they have total? ", "executed": 60.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 8 friends playing a video game online when 2 more players joined the game. If each player had 6 lives, how many lives did they have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_players = 8\n    num_lives = 6\n    total_lives = num_players * num_lives\n    print(\"In the first step, the total lives are: \", total_lives)\n    # In the second step, we can define the following variable:\n    num_players = num_players + 2\n    print(\"In the second step, the total lives are: \", total_lives)\n    # In the third step, we can define the following variable:\n    total_lives = num_players * num_lives\n    print(\"In the third step, the total lives are: \", total_lives)\n    return total_lives\nans = solver()", "answer": 60.0}
{"question": " Sam was collecting cans for recycling. On Saturday he filled 3 bags up and on Sunday he filled 4 more bags. If each bag had 9 cans in it, how many cans did he pick up total? ", "executed": 63.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Sam was collecting cans for recycling. On Saturday he filled 3 bags up and on Sunday he filled 4 more bags. If each bag had 9 cans in it, how many cans did he pick up total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cans_per_bag = 9\n    # In the second step, we can define the following variable:\n    bags_on_saturday = 3\n    # In the third step, we can define the following variable:\n    bags_on_sunday = 4\n    # In the fourth step, we can define the following variable:\n    cans_on_saturday = cans_per_bag * bags_on_saturday\n    # In the fifth step, we can define the following variable:\n    cans_on_sunday = cans_per_bag * bags_on_sunday\n    # In the sixth step, we can define the following variable:\n    cans_total = cans_on_saturday + cans_on_sunday\n    return cans_total\nans = solver()", "answer": 63.0}
{"question": " April's discount flowers was having a sale where each flower was 6 dollars. If Maria bought 7 roses and 3 daisies, how much did she spend? ", "executed": 60.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: April's discount flowers was having a sale where each flower was 6 dollars. If Maria bought 7 roses and 3 daisies, how much did she spend?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    roses = 7\n    daisies = 3\n    price_of_rose = 6\n    price_of_daisy = 6\n    total_price = 0\n    # In the second step, we can calculate the total price:\n    total_price = roses * price_of_rose + daisies * price_of_daisy\n    return total_price\nans = solver()", "answer": 60.0}
{"question": " Dave was working as a sacker at a grocery store where he made 6 dollars an hour. On Monday he worked 6 hours and on Tuesday he worked 2 hours. How much money did Dave make in those two days? ", "executed": 48.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dave was working as a sacker at a grocery store where he made 6 dollars an hour. On Monday he worked 6 hours and on Tuesday he worked 2 hours. How much money did Dave make in those two days?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    hourly_wage = 6\n    # In the second step, we can define the following variable:\n    hours_worked_on_monday = 6\n    # In the third step, we can define the following variable:\n    hours_worked_on_tuesday = 2\n    # In the fourth step, we can define the following variable:\n    money_made_on_monday = hourly_wage * hours_worked_on_monday\n    # In the fifth step, we can define the following variable:\n    money_made_on_tuesday = hourly_wage * hours_worked_on_tuesday\n    # In the sixth step, we can define the following variable:\n    total_money_made = money_made_on_monday + money_made_on_tuesday\n    return total_money_made\nans = solver()", "answer": 48.0}
{"question": " Nancy was organizing her book case making sure each of the shelves had exactly 6 books on it. If she had 2 shelves of mystery books and 6 shelves of picture books, how many books did she have total? ", "executed": 40.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Nancy was organizing her book case making sure each of the shelves had exactly 6 books on it. If she had 2 shelves of mystery books and 6 shelves of picture books, how many books did she have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    mystery_books_per_shelf = 2\n    picture_books_per_shelf = 6\n    number_of_mystery_shelves = 2\n    number_of_picture_shelves = 6\n    total_number_of_books = 0\n    total_number_of_books = mystery_books_per_shelf * number_of_mystery_shelves + picture_books_per_shelf * number_of_picture_shelves\n    return total_number_of_books\nans = solver()", "answer": 48.0}
{"question": " While shopping for music online, Faye bought 2 country albums and 3 pop albums. Each album came with a lyric sheet and had 6 songs. How many songs did Faye buy total? ", "executed": 30.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While shopping for music online, Faye bought 2 country albums and 3 pop albums. Each album came with a lyric sheet and had 6 songs. How many songs did Faye buy total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    country_albums = 2\n    pop_albums = 3\n    songs_per_album = 6\n    total_songs = country_albums * songs_per_album + pop_albums * songs_per_album\n    return total_songs\nans = solver()", "answer": 30.0}
{"question": " Tom was putting his spare change into piles. He had 2 piles of quarters and 4 piles of dimes. If each pile had 5 coins in it, how many coins did he have total? ", "executed": 30.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Tom was putting his spare change into piles. He had 2 piles of quarters and 4 piles of dimes. If each pile had 5 coins in it, how many coins did he have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    quarters = 2\n    dimes = 4\n    coins_per_pile = 5\n    total_coins = quarters * coins_per_pile + dimes * coins_per_pile\n    return total_coins\nans = solver()", "answer": 30.0}
{"question": " While playing a trivia game, George answered 6 questions correct in the first half and 4 questions correct in the second half. If each question was worth 3 points, what was his final score? ", "executed": 30.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While playing a trivia game, George answered 6 questions correct in the first half and 4 questions correct in the second half. If each question was worth 3 points, what was his final score?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    first_half_score = 6 * 3\n    second_half_score = 4 * 3\n    final_score = first_half_score + second_half_score\n    return final_score\nans = solver()", "answer": 30.0}
{"question": " Lana was unboxing some of her old winter clothes. She found 4 boxes of clothing and inside each box there were 2 scarves and 6 mittens. How many pieces of winter clothing did Lana have total? ", "executed": 32.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Lana was unboxing some of her old winter clothes. She found 4 boxes of clothing and inside each box there were 2 scarves and 6 mittens. How many pieces of winter clothing did Lana have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    box_count = 4\n    scarf_count = 2\n    mitten_count = 6\n    total_count = box_count * (scarf_count + mitten_count)\n    return total_count\nans = solver()", "answer": 32.0}
{"question": " At the town carnival Oliver rode the ferris wheel 7 times and the bumper cars 3 times. If each ride cost 3 tickets, how many tickets did he use? ", "executed": 30.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the town carnival Oliver rode the ferris wheel 7 times and the bumper cars 3 times. If each ride cost 3 tickets, how many tickets did he use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    ferris_wheel_rides = 7\n    bumper_car_rides = 3\n    ticket_cost = 3\n    total_tickets = ferris_wheel_rides * ticket_cost + bumper_car_rides * ticket_cost\n    return total_tickets\nans = solver()", "answer": 30.0}
{"question": " Sarah had 4 pages of math homework and 6 pages of reading homework. If each page had 4 problems on it, how many problems did she have to complete total? ", "executed": 40.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Sarah had 4 pages of math homework and 6 pages of reading homework. If each page had 4 problems on it, how many problems did she have to complete total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    math_pages = 4\n    reading_pages = 6\n    problems_per_page = 4\n    total_problems = math_pages * problems_per_page + reading_pages * problems_per_page\n    return total_problems\nans = solver()", "answer": 40.0}
{"question": " Kaleb was collecting cans for recycling. On Saturday he filled 4 bags up and on Sunday he filled 6 more bags. If each bag had 4 cans in it, how many cans did he pick up total? ", "executed": 40.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Kaleb was collecting cans for recycling. On Saturday he filled 4 bags up and on Sunday he filled 6 more bags. If each bag had 4 cans in it, how many cans did he pick up total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cans_per_bag = 4\n    # In the second step, we can define the following variable:\n    bags_on_saturday = 4\n    # In the third step, we can define the following variable:\n    bags_on_sunday = 6\n    # In the fourth step, we can define the following variable:\n    cans_on_saturday = cans_per_bag * bags_on_saturday\n    # In the fifth step, we can define the following variable:\n    cans_on_sunday = cans_per_bag * bags_on_sunday\n    # In the sixth step, we can define the following variable:\n    total_cans = cans_on_saturday + cans_on_sunday\n    return total_cans\nans = solver()", "answer": 40.0}
{"question": " Edward and his friend were buying trick decks from the magic shop for 6 dollars each. How much did they spend if Edward bought 3 decks and his friend bought 6 decks? ", "executed": 54.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Edward and his friend were buying trick decks from the magic shop for 6 dollars each. How much did they spend if Edward bought 3 decks and his friend bought 6 decks?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    edward_decks = 3\n    friend_decks = 6\n    price_per_deck = 6\n    total_price = edward_decks * price_per_deck + friend_decks * price_per_deck\n    return total_price\nans = solver()", "answer": 54.0}
{"question": " Emily bought 4 new chairs and 2 new tables for her house. If she spent 8 minutes on each piece furniture putting it together, how many minutes did it take her to finish? ", "executed": 48.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Emily bought 4 new chairs and 2 new tables for her house. If she spent 8 minutes on each piece furniture putting it together, how many minutes did it take her to finish?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    chairs = 4\n    tables = 2\n    minutes_per_piece = 8\n    total_minutes = 0\n    # In the second step, we can calculate the total minutes by adding up the minutes for each piece of furniture\n    total_minutes = chairs * minutes_per_piece + tables * minutes_per_piece\n    return total_minutes\nans = solver()", "answer": 48.0}
{"question": " A waiter had 9 tables he was waiting on, with 2 women and 6 men at each table. How many customers total did the waiter have? ", "executed": 72.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter had 9 tables he was waiting on, with 2 women and 6 men at each table. How many customers total did the waiter have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_tables = 9\n    num_women_per_table = 2\n    num_men_per_table = 6\n    num_customers_per_table = num_women_per_table + num_men_per_table\n    num_customers = num_tables * num_customers_per_table\n    return num_customers\nans = solver()", "answer": 72.0}
{"question": " There were 4 friends playing a video game online when 5 more players joined the game. If each player had 3 lives, how many lives did they have total? ", "executed": 27.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 4 friends playing a video game online when 5 more players joined the game. If each player had 3 lives, how many lives did they have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_of_players = 4\n    num_of_lives = 3\n    total_lives = num_of_players * num_of_lives\n    print(\"In the first step, the total lives are: \", total_lives)\n    # In the second step, we can define the following variable:\n    num_of_players = num_of_players + 5\n    print(\"In the second step, the total lives are: \", total_lives)\n    # In the third step, we can define the following variable:\n    total_lives = num_of_players * num_of_lives\n    print(\"In the third step, the total lives are: \", total_lives)\n    return total_lives\nans = solver()", "answer": 27.0}
{"question": " While shopping for music online, Janet bought 6 country albums and 2 pop albums. Each album came with a lyric sheet and had 9 songs. How many songs did Janet buy total? ", "executed": 72.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While shopping for music online, Janet bought 6 country albums and 2 pop albums. Each album came with a lyric sheet and had 9 songs. How many songs did Janet buy total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    country_albums = 6\n    pop_albums = 2\n    songs_per_album = 9\n    total_songs = country_albums * songs_per_album + pop_albums * songs_per_album\n    return total_songs\nans = solver()", "answer": 72.0}
{"question": " The schools debate team had 26 boys and 46 girls on it. If they were split into groups of 9 how many groups could they make? ", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The schools debate team had 26 boys and 46 girls on it. If they were split into groups of 9 how many groups could they make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    boys = 26\n    girls = 46\n    group_size = 9\n    # Now, we can calculate the total number of students:\n    total_students = boys + girls\n    # Now, we can calculate the total number of groups:\n    total_groups = total_students / group_size\n    # Now, we can return the answer:\n    return total_groups\nans = solver()", "answer": 8.0}
{"question": " Robin uploaded 35 pictures from her phone and 5 from her camera to facebook. If she sorted the pics into 5 different albums with the same amount of pics in each album, how many pictures were in each of the albums? ", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Robin uploaded 35 pictures from her phone and 5 from her camera to facebook. If she sorted the pics into 5 different albums with the same amount of pics in each album, how many pictures were in each of the albums?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_pics = 35 + 5\n    total_albums = 5\n    pics_per_album = total_pics / total_albums\n    return pics_per_album\nans = solver()", "answer": 8.0}
{"question": " Kaleb had saved up 21 dollars. If he received another 15 dollars for his allowance, how many 6 dollar toys could he buy? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Kaleb had saved up 21 dollars. If he received another 15 dollars for his allowance, how many 6 dollar toys could he buy?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    saved_money = 21\n    allowance = 15\n    toy_price = 6\n    # In the second step, we can add the saved_money and allowance together\n    total_money = saved_money + allowance\n    # In the third step, we can divide the total_money by the toy_price\n    num_toys = total_money / toy_price\n    # In the fourth step, we can return the num_toys\n    return num_toys\nans = solver()", "answer": 6.0}
{"question": " Olivia was making baggies of cookies with 9 cookies in each bag. If she had 13 chocolate chip cookies and 41 oatmeal cookies, how many baggies could she make? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Olivia was making baggies of cookies with 9 cookies in each bag. If she had 13 chocolate chip cookies and 41 oatmeal cookies, how many baggies could she make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_chocolate_chip_cookies = 13\n    num_oatmeal_cookies = 41\n    num_cookies_per_bag = 9\n    num_baggies = 0\n    # Now, we can calculate the number of baggies that can be made with the chocolate chip cookies\n    num_baggies_chocolate_chip = num_chocolate_chip_cookies // num_cookies_per_bag\n    num_baggies_oatmeal = num_oatmeal_cookies // num_cookies_per_bag\n    num_baggies = num_baggies_chocolate_chip + num_baggies_oatmeal\n    return num_baggies\nans = solver()", "answer": 6.0}
{"question": " Luke made 9 dollars mowing lawns and 18 dollars weed eating. If he only spent 3 dollar a week, how long would the money last him? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Luke made 9 dollars mowing lawns and 18 dollars weed eating. If he only spent 3 dollar a week, how long would the money last him?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    mowing_lawns = 9\n    weed_eating = 18\n    weekly_spending = 3\n    total_money = mowing_lawns + weed_eating\n    weeks = total_money / weekly_spending\n    return weeks\nans = solver()", "answer": 9.0}
{"question": " There school's baseball team had 48 new players and 6 returning players. If the coach put them into groups with 6 players in each group, how many groups would there be? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There school's baseball team had 48 new players and 6 returning players. If the coach put them into groups with 6 players in each group, how many groups would there be?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    new_players = 48\n    returning_players = 6\n    players_per_group = 6\n    # In the second step, we can calculate the total number of players:\n    total_players = new_players + returning_players\n    # In the third step, we can calculate the total number of groups:\n    total_groups = total_players / players_per_group\n    # In the fourth step, we can return the answer:\n    return total_groups\nans = solver()", "answer": 9.0}
{"question": " For a birthday party Jerry bought 41 regular sodas and 22 diet sodas. If his fridge would only hold 9 on each shelf, how many shelves would he fill up? ", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For a birthday party Jerry bought 41 regular sodas and 22 diet sodas. If his fridge would only hold 9 on each shelf, how many shelves would he fill up?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    regular_soda = 41\n    diet_soda = 22\n    shelf_capacity = 9\n    # In the second step, we can calculate the number of shelves needed for regular sodas and diet sodas\n    regular_shelves = math.ceil(regular_soda / shelf_capacity)\n    diet_shelves = math.ceil(diet_soda / shelf_capacity)\n    # In the third step, we can calculate the total number of shelves needed\n    total_shelves = regular_shelves + diet_shelves\n    return total_shelves\nans = solver()", "answer": 7.0}
{"question": " Paige and her friends were recycling paper for their class. For every 4 pounds they recycled they earned one point. If Paige recycled 14 pounds and her friends recycled 2 pounds, how many points did they earn? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paige and her friends were recycling paper for their class. For every 4 pounds they recycled they earned one point. If Paige recycled 14 pounds and her friends recycled 2 pounds, how many points did they earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    paige_pounds = 14\n    friends_pounds = 2\n    pounds_per_point = 4\n    # In the second step, we can calculate the total pounds:\n    total_pounds = paige_pounds + friends_pounds\n    # In the third step, we can calculate the total points:\n    total_points = total_pounds / pounds_per_point\n    return total_points\nans = solver()", "answer": 4.0}
{"question": " For homework Nancy had 17 math problems and 15 spelling problems. If she can finish 8 problems in an hour how long will it take her to finish all the problems? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For homework Nancy had 17 math problems and 15 spelling problems. If she can finish 8 problems in an hour how long will it take her to finish all the problems?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    math_problems = 17\n    spelling_problems = 15\n    problems_per_hour = 8\n    total_problems = math_problems + spelling_problems\n    total_hours = total_problems / problems_per_hour\n    return total_hours\nans = solver()", "answer": 4.0}
{"question": " Will was organizing his baseball cards in a binder with 3 on each page. If he had 8 new cards and 10 old cards to put in the binder, how many pages would he use? ", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Will was organizing his baseball cards in a binder with 3 on each page. If he had 8 new cards and 10 old cards to put in the binder, how many pages would he use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    new_cards = 8\n    old_cards = 10\n    cards_per_page = 3\n    # Now, we can calculate the number of pages needed for the new cards:\n    new_pages = math.ceil(new_cards / cards_per_page)\n    # And the number of pages needed for the old cards:\n    old_pages = math.ceil(old_cards / cards_per_page)\n    # Finally, we can add the two numbers together to get the total number of pages:\n    total_pages = new_pages + old_pages\n    return total_pages\nans = solver()", "answer": 6.0}
{"question": " The schools debate team had 11 boys and 45 girls on it. If they were split into groups of 7 how many groups could they make? ", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The schools debate team had 11 boys and 45 girls on it. If they were split into groups of 7 how many groups could they make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    boys = 11\n    girls = 45\n    group_size = 7\n    total_students = boys + girls\n    total_groups = total_students / group_size\n    return total_groups\nans = solver()", "answer": 8.0}
{"question": " A group of 4 friends went into a restaurant. The chef already had 9 chicken wings cooked but cooked 7 more for the group. If they each got the same amount how many would each person get? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A group of 4 friends went into a restaurant. The chef already had 9 chicken wings cooked but cooked 7 more for the group. If they each got the same amount how many would each person get?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_friends = 4\n    num_wings_cooked = 9\n    num_wings_cooked_more = 7\n    num_wings_total = num_wings_cooked + num_wings_cooked_more\n    num_wings_per_person = num_wings_total / num_friends\n    return num_wings_per_person\nans = solver()", "answer": 4.0}
{"question": " A vase can hold 6 flowers. If you had 7 carnations and 47 roses, how many vases would you need to hold the flowers? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A vase can hold 6 flowers. If you had 7 carnations and 47 roses, how many vases would you need to hold the flowers?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    carnations = 7\n    roses = 47\n    vase_capacity = 6\n    vases = 0\n    # Now, we can start to think about how to calculate the number of vases needed.\n    # We can start by calculating the total number of flowers.\n    total_flowers = carnations + roses\n    # Now, we can calculate the number of vases needed.\n    vases = math.ceil(total_flowers / vase_capacity)\n    return vases\nans = solver()", "answer": 9.0}
{"question": " A pet shelter had 9 puppies when another 12 were brought in. If 3 puppies a day are adopted, how long would it take for all of them to be adopted? ", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet shelter had 9 puppies when another 12 were brought in. If 3 puppies a day are adopted, how long would it take for all of them to be adopted?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    puppies_left = 9\n    puppies_brought_in = 12\n    puppies_adopted = 3\n    days = 0\n    while puppies_left > 0:\n        puppies_left = puppies_left + puppies_brought_in - puppies_adopted\n        days = days + 1\n    return days\nans = solver()", "answer": 7.0}
{"question": " Roger was helping the cafeteria workers pick up lunch trays, but he could only carry 4 trays at a time. If he had to pick up 10 trays from one table and 2 trays from another, how many trips will he make? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Roger was helping the cafeteria workers pick up lunch trays, but he could only carry 4 trays at a time. If he had to pick up 10 trays from one table and 2 trays from another, how many trips will he make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_trays = 10 + 2\n    max_trays_per_trip = 4\n    num_trips = math.ceil(num_trays / max_trays_per_trip)\n    return num_trips\nans = solver()", "answer": 3.0}
{"question": " A toy store had 4 giant stuffed bears in stock when they got another shipment with 10 bears in it. The put the bears onto shelves with 7 on each shelf. How many shelves did they use? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A toy store had 4 giant stuffed bears in stock when they got another shipment with 10 bears in it. The put the bears onto shelves with 7 on each shelf. How many shelves did they use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_bears_in_stock = 4\n    num_bears_in_shipment = 10\n    num_bears_per_shelf = 7\n    num_bears_in_stock_after_shipment = num_bears_in_stock + num_bears_in_shipment\n    num_shelves = math.ceil(num_bears_in_stock_after_shipment / num_bears_per_shelf)\n    return num_shelves\nans = solver()", "answer": 2.0}
{"question": " John made 6 dollars mowing lawns and 18 dollars weed eating. If he only spent 3 dollar a week, how long would the money last him? ", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: John made 6 dollars mowing lawns and 18 dollars weed eating. If he only spent 3 dollar a week, how long would the money last him?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    mowing_lawns = 6\n    weed_eating = 18\n    weekly_spending = 3\n    total_money = mowing_lawns + weed_eating\n    weeks = total_money / weekly_spending\n    return weeks\nans = solver()", "answer": 8.0}
{"question": " Wendy's old washing machine could only wash 8 pieces of clothing at a time. If she had to wash 39 shirts and 33 sweaters how many loads would she have to do? ", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Wendy's old washing machine could only wash 8 pieces of clothing at a time. If she had to wash 39 shirts and 33 sweaters how many loads would she have to do?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    shirts = 39\n    sweaters = 33\n    capacity = 8\n    loads = 0\n    # Now, we can start to think about how to calculate the number of loads.\n    # We can start by calculating the number of loads for shirts.\n    loads += math.ceil(shirts / capacity)\n    # Now, we can calculate the number of loads for sweaters.\n    loads += math.ceil(sweaters / capacity)\n    return loads\nans = solver()", "answer": 9.0}
{"question": " Debby's class is going on a field trip to the zoo. If each van can hold 4 people and there are 2 students and 6 adults going, how many vans will they need? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Debby's class is going on a field trip to the zoo. If each van can hold 4 people and there are 2 students and 6 adults going, how many vans will they need?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    students = 2\n    adults = 6\n    capacity = 4\n    vans = 0\n    # In the second step, we can calculate the total number of people:\n    total = students + adults\n    # In the third step, we can calculate the number of vans:\n    vans = math.ceil(total / capacity)\n    return vans\nans = solver()", "answer": 2.0}
{"question": " Isabel uploaded 2 pictures from her phone and 4 from her camera to facebook. If she sorted the pics into 3 different albums with the same amount of pics in each album, how many pictures were in each of the albums? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Isabel uploaded 2 pictures from her phone and 4 from her camera to facebook. If she sorted the pics into 3 different albums with the same amount of pics in each album, how many pictures were in each of the albums?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    phone_pics = 2\n    camera_pics = 4\n    albums = 3\n    pics_per_album = (phone_pics + camera_pics) / albums\n    return pics_per_album\nans = solver()", "answer": 2.0}
{"question": " While playing at the arcade, Frank won 33 tickets playing 'whack a mole' and 9 tickets playing 'skee ball'. If he was trying to buy candy that cost 6 tickets a piece, how many could he buy? ", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While playing at the arcade, Frank won 33 tickets playing 'whack a mole' and 9 tickets playing 'skee ball'. If he was trying to buy candy that cost 6 tickets a piece, how many could he buy?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    whack_a_mole_tickets = 33\n    skee_ball_tickets = 9\n    candy_cost = 6\n    total_tickets = whack_a_mole_tickets + skee_ball_tickets\n    candy_count = total_tickets / candy_cost\n    return candy_count\nans = solver()", "answer": 7.0}
{"question": " Mike made 14 dollars mowing lawns and 26 dollars weed eating. If he only spent 5 dollar a week, how long would the money last him? ", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mike made 14 dollars mowing lawns and 26 dollars weed eating. If he only spent 5 dollar a week, how long would the money last him?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    mowing_lawns = 14\n    weed_eating = 26\n    weekly_spending = 5\n    total_money = mowing_lawns + weed_eating\n    weeks = total_money / weekly_spending\n    return weeks\nans = solver()", "answer": 8.0}
{"question": " Gwen and her friends were recycling paper for their class. For every 3 pounds they recycled they earned one point. If Gwen recycled 5 pounds and her friends recycled 13 pounds, how many points did they earn? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Gwen and her friends were recycling paper for their class. For every 3 pounds they recycled they earned one point. If Gwen recycled 5 pounds and her friends recycled 13 pounds, how many points did they earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    gwen = 5\n    friends = 13\n    points = 0\n    # In the second step, we can calculate the total pounds of paper recycled:\n    total_pounds = gwen + friends\n    # In the third step, we can calculate the total points earned:\n    points = total_pounds // 3\n    return points\nans = solver()", "answer": 6.0}
{"question": " Robin uploaded 31 pictures from her phone and 5 from her camera to facebook. If she sorted the pics into 9 different albums with the same amount of pics in each album, how many pictures were in each of the albums? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Robin uploaded 31 pictures from her phone and 5 from her camera to facebook. If she sorted the pics into 9 different albums with the same amount of pics in each album, how many pictures were in each of the albums?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_pics = 31 + 5\n    total_albums = 9\n    pics_per_album = total_pics / total_albums\n    return pics_per_album\nans = solver()", "answer": 4.0}
{"question": " For Halloween Megan received 11 pieces of candy from neighbors and 5 pieces from her older sister. If she only ate 8 pieces a day, how long would the candy last her? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For Halloween Megan received 11 pieces of candy from neighbors and 5 pieces from her older sister. If she only ate 8 pieces a day, how long would the candy last her?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    candy_from_neighbors = 11\n    candy_from_sister = 5\n    candy_eaten_per_day = 8\n    total_candy = candy_from_neighbors + candy_from_sister\n    days = total_candy / candy_eaten_per_day\n    return days\nans = solver()", "answer": 2.0}
{"question": " Maria was making baggies of cookies with 5 cookies in each bag. If she had 33 chocolate chip cookies and 2 oatmeal cookies, how many baggies could she make? ", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Maria was making baggies of cookies with 5 cookies in each bag. If she had 33 chocolate chip cookies and 2 oatmeal cookies, how many baggies could she make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_chocolate_chip_cookies = 33\n    num_oatmeal_cookies = 2\n    num_cookies_per_bag = 5\n    num_baggies = 0\n    num_chocolate_chip_cookies_per_bag = 0\n    num_oatmeal_cookies_per_bag = 0\n    num_baggies_with_chocolate_chip_cookies = 0\n    num_baggies_with_oatmeal_cookies = 0\n    num_baggies_with_chocolate_chip_cookies_and_oatmeal_cookies = 0\n    num_baggies_with_chocolate_chip_cookies_only = 0\n    num_baggies_with_oatmeal_cookies_only = 0\n    num_baggies_with_chocolate_chip_cookies_and_oatmeal_cookies_only = 0\n    num_baggies_with_chocolate_chip_cookies_and_oatmeal_cookies_only_and_chocolate_chip_cookies_only = 0\n    num_baggies_with_chocolate_chip_cookies_and_oatmeal_cookies_only_and_oatmeal_cookies_only = 0\n    num_baggies_with_ch\nans = solver()", "answer": 7.0}
{"question": " There school's baseball team had 4 new players and 6 returning players. If the coach put them into groups with 5 players in each group, how many groups would there be? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There school's baseball team had 4 new players and 6 returning players. If the coach put them into groups with 5 players in each group, how many groups would there be?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    new_players = 4\n    returning_players = 6\n    players_per_group = 5\n    # In the second step, we can calculate the total number of players:\n    total_players = new_players + returning_players\n    # In the third step, we can calculate the total number of groups:\n    total_groups = math.ceil(total_players / players_per_group)\n    return total_groups\nans = solver()", "answer": 2.0}
{"question": " A pet shelter had 5 puppies when another 35 were brought in. If 8 puppies a day are adopted, how long would it take for all of them to be adopted? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet shelter had 5 puppies when another 35 were brought in. If 8 puppies a day are adopted, how long would it take for all of them to be adopted?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    puppies_left = 5\n    puppies_brought_in = 35\n    puppies_total = puppies_left + puppies_brought_in\n    puppies_adopted_per_day = 8\n    days_passed = 0\n    while puppies_total > 0:\n        puppies_total -= puppies_adopted_per_day\n        days_passed += 1\n    return days_passed\nans = solver()", "answer": 5.0}
{"question": " Nancy's class is going on a field trip to the zoo. If each van can hold 5 people and there are 12 students and 3 adults going, how many vans will they need? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Nancy's class is going on a field trip to the zoo. If each van can hold 5 people and there are 12 students and 3 adults going, how many vans will they need?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    students = 12\n    adults = 3\n    capacity = 5\n    vans = 0\n    # In the second step, we can calculate the total number of people:\n    total = students + adults\n    # In the third step, we can calculate the number of vans:\n    vans = math.ceil(total / capacity)\n    return vans\nans = solver()", "answer": 3.0}
{"question": " Dave was helping the cafeteria workers pick up lunch trays, but he could only carry 9 trays at a time. If he had to pick up 17 trays from one table and 55 trays from another, how many trips will he make? ", "executed": 0.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dave was helping the cafeteria workers pick up lunch trays, but he could only carry 9 trays at a time. If he had to pick up 17 trays from one table and 55 trays from another, how many trips will he make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_trays_per_trip = 9\n    num_trays_table_1 = 17\n    num_trays_table_2 = 55\n    num_trips = 0\n    num_trips_table_1 = 0\n    num_trips_table_2 = 0\n    num_trips = num_trips_table_1 + num_trips_table_2\n    return num_trips\nans = solver()", "answer": 8.0}
{"question": " For a birthday party George bought 10 regular sodas and 22 diet sodas. If his fridge would only hold 4 on each shelf, how many shelves would he fill up? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For a birthday party George bought 10 regular sodas and 22 diet sodas. If his fridge would only hold 4 on each shelf, how many shelves would he fill up?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    regular_soda = 10\n    diet_soda = 22\n    sodas_per_shelf = 4\n    # Now, we can calculate the number of shelves needed for regular sodas:\n    regular_soda_shelves = math.ceil(regular_soda / sodas_per_shelf)\n    # And the number of shelves needed for diet sodas:\n    diet_soda_shelves = math.ceil(diet_soda / sodas_per_shelf)\n    # Finally, we can calculate the total number of shelves needed:\n    total_shelves = regular_soda_shelves + diet_soda_shelves\n    return total_shelves\nans = solver()", "answer": 8.0}
{"question": " The schools debate team had 28 boys and 4 girls on it. If they were split into groups of 4 how many groups could they make? ", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The schools debate team had 28 boys and 4 girls on it. If they were split into groups of 4 how many groups could they make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    boys = 28\n    girls = 4\n    group_size = 4\n    # Now, we can use the above variables to calculate the number of groups\n    num_groups = boys + girls\n    num_groups = num_groups / group_size\n    num_groups = math.floor(num_groups)\n    return num_groups\nans = solver()", "answer": 8.0}
{"question": " Maria was making baggies of cookies with 8 cookies in each bag. If she had 5 chocolate chip cookies and 19 oatmeal cookies, how many baggies could she make? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Maria was making baggies of cookies with 8 cookies in each bag. If she had 5 chocolate chip cookies and 19 oatmeal cookies, how many baggies could she make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_chocolate_chip_cookies = 5\n    num_oatmeal_cookies = 19\n    num_cookies_per_bag = 8\n    # In the second step, we can calculate the total number of cookies:\n    num_total_cookies = num_chocolate_chip_cookies + num_oatmeal_cookies\n    # In the third step, we can calculate the number of baggies:\n    num_baggies = math.floor(num_total_cookies / num_cookies_per_bag)\n    return num_baggies\nans = solver()", "answer": 3.0}
{"question": " For Halloween Sarah received 66 pieces of candy from neighbors and 15 pieces from her older sister. If she only ate 9 pieces a day, how long would the candy last her? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For Halloween Sarah received 66 pieces of candy from neighbors and 15 pieces from her older sister. If she only ate 9 pieces a day, how long would the candy last her?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_candy = 66 + 15\n    eaten_per_day = 9\n    days = 0\n    while total_candy > 0:\n        total_candy -= eaten_per_day\n        days += 1\n    return days\nans = solver()", "answer": 9.0}
{"question": " Henry was helping the cafeteria workers pick up lunch trays, but he could only carry 9 trays at a time. If he had to pick up 29 trays from one table and 52 trays from another, how many trips will he make? ", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Henry was helping the cafeteria workers pick up lunch trays, but he could only carry 9 trays at a time. If he had to pick up 29 trays from one table and 52 trays from another, how many trips will he make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_trays_per_trip = 9\n    num_trays_table_1 = 29\n    num_trays_table_2 = 52\n    num_trips = 0\n    num_trays_left = 0\n    num_trays_left_table_1 = 0\n    num_trays_left_table_2 = 0\n    num_trays_left_total = 0\n    num_trays_left_total_table_1 = 0\n    num_trays_left_total_table_2 = 0\n    num_trays_left_total_table_1_table_2 = 0\n    num_trays_left_total_table_1_table_2_table_1 = 0\n    num_trays_left_total_table_1_table_2_table_1_table_2 = 0\n    num_trays_left_total_table_1_table_2_table_1_table_2_table_1 = 0\n    num_trays_left_total_table_1_table_2_table_1_table_2_table_1_table_2 = 0\n    num_trays_left_total_table_1_table_2_table_1_table_2_table_1_table_2\nans = solver()", "answer": 9.0}
{"question": " Tiffany uploaded 7 pictures from her phone and 13 from her camera to facebook. If she sorted the pics into 5 different albums with the same amount of pics in each album, how many pictures were in each of the albums? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Tiffany uploaded 7 pictures from her phone and 13 from her camera to facebook. If she sorted the pics into 5 different albums with the same amount of pics in each album, how many pictures were in each of the albums?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_pics = 7 + 13\n    total_albums = 5\n    pics_per_album = total_pics / total_albums\n    return pics_per_album\nans = solver()", "answer": 4.0}
{"question": " A toy store had 5 giant stuffed bears in stock when they got another shipment with 7 bears in it. The put the bears onto shelves with 6 on each shelf. How many shelves did they use? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A toy store had 5 giant stuffed bears in stock when they got another shipment with 7 bears in it. The put the bears onto shelves with 6 on each shelf. How many shelves did they use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_bears_in_stock = 5\n    num_bears_in_shipment = 7\n    num_bears_per_shelf = 6\n    num_shelves = 0\n    num_bears_on_shelves = 0\n    num_bears_in_stock = num_bears_in_stock + num_bears_in_shipment\n    num_shelves = math.ceil(num_bears_in_stock / num_bears_per_shelf)\n    num_bears_on_shelves = num_shelves * num_bears_per_shelf\n    num_bears_in_stock = num_bears_in_stock - num_bears_on_shelves\n    return num_shelves\nans = solver()", "answer": 2.0}
{"question": " Paul made 68 dollars mowing lawns and 13 dollars weed eating. If he only spent 9 dollar a week, how long would the money last him? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul made 68 dollars mowing lawns and 13 dollars weed eating. If he only spent 9 dollar a week, how long would the money last him?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    money = 68 + 13\n    cost = 9\n    week = 0\n    while money > 0:\n        money -= cost\n        week += 1\n    return week\nans = solver()", "answer": 9.0}
{"question": " While playing at the arcade, Edward won 3 tickets playing 'whack a mole' and 5 tickets playing 'skee ball'. If he was trying to buy candy that cost 4 tickets a piece, how many could he buy? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While playing at the arcade, Edward won 3 tickets playing 'whack a mole' and 5 tickets playing 'skee ball'. If he was trying to buy candy that cost 4 tickets a piece, how many could he buy?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    whack_a_mole_tickets = 3\n    skee_ball_tickets = 5\n    candy_cost = 4\n    total_tickets = whack_a_mole_tickets + skee_ball_tickets\n    num_candy = total_tickets // candy_cost\n    return num_candy\nans = solver()", "answer": 2.0}
{"question": " Megan's class is going on a field trip to the zoo. If each van can hold 5 people and there are 25 students and 5 adults going, how many vans will they need? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Megan's class is going on a field trip to the zoo. If each van can hold 5 people and there are 25 students and 5 adults going, how many vans will they need?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_students = 25\n    num_adults = 5\n    num_people_per_van = 5\n    # In the second step, we can calculate the total number of people:\n    num_people = num_students + num_adults\n    # In the third step, we can calculate the total number of vans:\n    num_vans = math.ceil(num_people / num_people_per_van)\n    return num_vans\nans = solver()", "answer": 6.0}
{"question": " Luke was organizing his baseball cards in a binder with 3 on each page. If he had 3 new cards and 9 old cards to put in the binder, how many pages would he use? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Luke was organizing his baseball cards in a binder with 3 on each page. If he had 3 new cards and 9 old cards to put in the binder, how many pages would he use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    new_cards = 3\n    old_cards = 9\n    cards_per_page = 3\n    pages = 0\n    # Now, we can calculate the number of pages needed to put all the cards in the binder\n    pages = math.ceil((new_cards + old_cards) / cards_per_page)\n    return pages\nans = solver()", "answer": 4.0}
{"question": " A group of 3 friends went into a restaurant. The chef already had 6 chicken wings cooked but cooked 3 more for the group. If they each got the same amount how many would each person get? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A group of 3 friends went into a restaurant. The chef already had 6 chicken wings cooked but cooked 3 more for the group. If they each got the same amount how many would each person get?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_of_friends = 3\n    num_of_wings_cooked = 6\n    num_of_wings_cooked_more = 3\n    num_of_wings_total = num_of_wings_cooked + num_of_wings_cooked_more\n    num_of_wings_each = num_of_wings_total / num_of_friends\n    return num_of_wings_each\nans = solver()", "answer": 3.0}
{"question": " Olivia uploaded 5 pictures from her phone and 35 from her camera to facebook. If she sorted the pics into 8 different albums with the same amount of pics in each album, how many pictures were in each of the albums? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Olivia uploaded 5 pictures from her phone and 35 from her camera to facebook. If she sorted the pics into 8 different albums with the same amount of pics in each album, how many pictures were in each of the albums?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_pics = 5 + 35\n    total_albums = 8\n    pics_per_album = total_pics / total_albums\n    return pics_per_album\nans = solver()", "answer": 5.0}
{"question": " A toy store had 6 giant stuffed bears in stock when they got another shipment with 18 bears in it. The put the bears onto shelves with 6 on each shelf. How many shelves did they use? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A toy store had 6 giant stuffed bears in stock when they got another shipment with 18 bears in it. The put the bears onto shelves with 6 on each shelf. How many shelves did they use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_bears_in_stock = 6\n    num_bears_in_shipment = 18\n    num_bears_per_shelf = 6\n    num_bears_in_stock_after_shipment = num_bears_in_stock + num_bears_in_shipment\n    num_shelves = math.ceil(num_bears_in_stock_after_shipment / num_bears_per_shelf)\n    return num_shelves\nans = solver()", "answer": 4.0}
{"question": " Jerry was helping the cafeteria workers pick up lunch trays, but he could only carry 8 trays at a time. If he had to pick up 9 trays from one table and 7 trays from another, how many trips will he make? ", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jerry was helping the cafeteria workers pick up lunch trays, but he could only carry 8 trays at a time. If he had to pick up 9 trays from one table and 7 trays from another, how many trips will he make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_trays_first_table = 9\n    num_trays_second_table = 7\n    num_trays_per_trip = 8\n    num_trips = 0\n    num_trays_left = 0\n    num_trays_picked_up = 0\n    num_trays_picked_up_first_table = 0\n    num_trays_picked_up_second_table = 0\n    num_trays_left_first_table = 0\n    num_trays_left_second_table = 0\n    num_trips_first_table = 0\n    num_trips_second_table = 0\n    num_trips_total = 0\n    num_trays_picked_up_total = 0\n    num_trays_left_total = 0\n    num_trays_picked_up_first_table_total = 0\n    num_trays_picked_up_second_table_total = 0\n    num_trays_left_first_table_total = 0\n    num_trays_left_second_table_total = 0\n    num_trips_first_table_total = 0\n    num_trips_second_table_total = 0\n    num_trips_total_total = 0\n    num_trays\nans = solver()", "answer": 2.0}
{"question": " A vase can hold 5 flowers. If you had 6 carnations and 19 roses, how many vases would you need to hold the flowers? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A vase can hold 5 flowers. If you had 6 carnations and 19 roses, how many vases would you need to hold the flowers?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    carnations = 6\n    roses = 19\n    vase_capacity = 5\n    vases = 0\n    # Now, we can start to think about how to calculate the number of vases needed.\n    # We can start by calculating the total number of flowers.\n    total_flowers = carnations + roses\n    # Now, we can calculate the number of vases needed.\n    vases = math.ceil(total_flowers / vase_capacity)\n    return vases\nans = solver()", "answer": 5.0}
{"question": " Haley and her friends were recycling paper for their class. For every 3 pounds they recycled they earned one point. If Haley recycled 11 pounds and her friends recycled 16 pounds, how many points did they earn? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Haley and her friends were recycling paper for their class. For every 3 pounds they recycled they earned one point. If Haley recycled 11 pounds and her friends recycled 16 pounds, how many points did they earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    haley = 11\n    friends = 16\n    points = 0\n    # In the second step, we can calculate the total weight of the paper recycled by Haley and her friends:\n    total_weight = haley + friends\n    # In the third step, we can calculate the total points earned by Haley and her friends:\n    points = math.floor(total_weight / 3)\n    return points\nans = solver()", "answer": 9.0}
{"question": " A pet shelter had 17 puppies when another 55 were brought in. If 8 puppies a day are adopted, how long would it take for all of them to be adopted? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet shelter had 17 puppies when another 55 were brought in. If 8 puppies a day are adopted, how long would it take for all of them to be adopted?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    puppies_left = 17 + 55\n    puppies_adopted_per_day = 8\n    days = 0\n    while puppies_left > 0:\n        puppies_left = puppies_left - puppies_adopted_per_day\n        days = days + 1\n    return days\nans = solver()", "answer": 9.0}
{"question": " There school's baseball team had 12 new players and 44 returning players. If the coach put them into groups with 8 players in each group, how many groups would there be? ", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There school's baseball team had 12 new players and 44 returning players. If the coach put them into groups with 8 players in each group, how many groups would there be?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    new_players = 12\n    returning_players = 44\n    players_per_group = 8\n    # In the second step, we can calculate the total number of players:\n    total_players = new_players + returning_players\n    # In the third step, we can calculate the total number of groups:\n    total_groups = math.ceil(total_players / players_per_group)\n    return total_groups\nans = solver()", "answer": 7.0}
{"question": " Frank had saved up 3 dollars. If he received another 37 dollars for his allowance, how many 8 dollar toys could he buy? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank had saved up 3 dollars. If he received another 37 dollars for his allowance, how many 8 dollar toys could he buy?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    frank_saved_up = 3\n    allowance = 37\n    toy_price = 8\n    # In the second step, we can calculate the total amount of money Frank has:\n    total_amount = frank_saved_up + allowance\n    # In the third step, we can calculate the number of toys Frank can buy:\n    number_of_toys = total_amount // toy_price\n    return number_of_toys\nans = solver()", "answer": 5.0}
{"question": " Luke was organizing his baseball cards in a binder with 3 on each page. If he had 3 new cards and 9 old cards to put in the binder, how many pages would he use? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Luke was organizing his baseball cards in a binder with 3 on each page. If he had 3 new cards and 9 old cards to put in the binder, how many pages would he use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    new_cards = 3\n    old_cards = 9\n    cards_per_page = 3\n    pages = 0\n    # Now, we can calculate the number of pages needed to put all the cards in the binder\n    pages = math.ceil((new_cards + old_cards) / cards_per_page)\n    return pages\nans = solver()", "answer": 4.0}
{"question": " A group of 3 friends went into a restaurant. The chef already had 6 chicken wings cooked but cooked 3 more for the group. If they each got the same amount how many would each person get? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A group of 3 friends went into a restaurant. The chef already had 6 chicken wings cooked but cooked 3 more for the group. If they each got the same amount how many would each person get?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_of_friends = 3\n    num_of_wings_cooked = 6\n    num_of_wings_cooked_more = 3\n    num_of_wings_total = num_of_wings_cooked + num_of_wings_cooked_more\n    num_of_wings_each = num_of_wings_total / num_of_friends\n    return num_of_wings_each\nans = solver()", "answer": 3.0}
{"question": " Olivia uploaded 5 pictures from her phone and 35 from her camera to facebook. If she sorted the pics into 8 different albums with the same amount of pics in each album, how many pictures were in each of the albums? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Olivia uploaded 5 pictures from her phone and 35 from her camera to facebook. If she sorted the pics into 8 different albums with the same amount of pics in each album, how many pictures were in each of the albums?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_pics = 5 + 35\n    total_albums = 8\n    pics_per_album = total_pics / total_albums\n    return pics_per_album\nans = solver()", "answer": 5.0}
{"question": " A toy store had 6 giant stuffed bears in stock when they got another shipment with 18 bears in it. The put the bears onto shelves with 6 on each shelf. How many shelves did they use? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A toy store had 6 giant stuffed bears in stock when they got another shipment with 18 bears in it. The put the bears onto shelves with 6 on each shelf. How many shelves did they use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_bears_in_stock = 6\n    num_bears_in_shipment = 18\n    num_bears_per_shelf = 6\n    num_shelves = 0\n    num_bears_on_shelves = 0\n    num_bears_left = 0\n    num_bears_in_stock = num_bears_in_stock + num_bears_in_shipment\n    num_shelves = math.ceil(num_bears_in_stock / num_bears_per_shelf)\n    num_bears_on_shelves = num_shelves * num_bears_per_shelf\n    num_bears_left = num_bears_in_stock - num_bears_on_shelves\n    return num_shelves\nans = solver()", "answer": 4.0}
{"question": " Jerry was helping the cafeteria workers pick up lunch trays, but he could only carry 8 trays at a time. If he had to pick up 9 trays from one table and 7 trays from another, how many trips will he make? ", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jerry was helping the cafeteria workers pick up lunch trays, but he could only carry 8 trays at a time. If he had to pick up 9 trays from one table and 7 trays from another, how many trips will he make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_trays_first_table = 9\n    num_trays_second_table = 7\n    num_trays_per_trip = 8\n    num_trips = 0\n    num_trays_left = 0\n    num_trays_picked_up = 0\n    num_trays_picked_up_first_table = 0\n    num_trays_picked_up_second_table = 0\n    num_trays_left_first_table = 0\n    num_trays_left_second_table = 0\n    num_trips_first_table = 0\n    num_trips_second_table = 0\n    num_trips_total = 0\n    num_trays_picked_up_total = 0\n    num_trays_left_total = 0\n    num_trays_picked_up_first_table_total = 0\n    num_trays_picked_up_second_table_total = 0\n    num_trays_left_first_table_total = 0\n    num_trays_left_second_table_total = 0\n    num_trips_first_table_total = 0\n    num_trips_second_table_total = 0\n    num_trips_total_total = 0\n    num_trays\nans = solver()", "answer": 2.0}
{"question": " A vase can hold 5 flowers. If you had 6 carnations and 19 roses, how many vases would you need to hold the flowers? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A vase can hold 5 flowers. If you had 6 carnations and 19 roses, how many vases would you need to hold the flowers?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    carnations = 6\n    roses = 19\n    vase_capacity = 5\n    vases = 0\n    # Now, we can start to think about how to calculate the number of vases needed.\n    # We can start by calculating the total number of flowers.\n    total_flowers = carnations + roses\n    # Now, we can calculate the number of vases needed.\n    vases = math.ceil(total_flowers / vase_capacity)\n    return vases\nans = solver()", "answer": 5.0}
{"question": " Haley and her friends were recycling paper for their class. For every 3 pounds they recycled they earned one point. If Haley recycled 11 pounds and her friends recycled 16 pounds, how many points did they earn? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Haley and her friends were recycling paper for their class. For every 3 pounds they recycled they earned one point. If Haley recycled 11 pounds and her friends recycled 16 pounds, how many points did they earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    haley = 11\n    friends = 16\n    points = 0\n    # In the second step, we can calculate the points earned by Haley and her friends:\n    points = (haley + friends) / 3\n    return points\nans = solver()", "answer": 9.0}
{"question": " A pet shelter had 17 puppies when another 55 were brought in. If 8 puppies a day are adopted, how long would it take for all of them to be adopted? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet shelter had 17 puppies when another 55 were brought in. If 8 puppies a day are adopted, how long would it take for all of them to be adopted?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    puppies_left = 17 + 55\n    puppies_adopted_per_day = 8\n    days = 0\n    while puppies_left > 0:\n        puppies_left = puppies_left - puppies_adopted_per_day\n        days = days + 1\n    return days\nans = solver()", "answer": 9.0}
{"question": " There school's baseball team had 12 new players and 44 returning players. If the coach put them into groups with 8 players in each group, how many groups would there be? ", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There school's baseball team had 12 new players and 44 returning players. If the coach put them into groups with 8 players in each group, how many groups would there be?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    new_players = 12\n    returning_players = 44\n    players_per_group = 8\n    # In the second step, we can calculate the total number of players:\n    total_players = new_players + returning_players\n    # In the third step, we can calculate the total number of groups:\n    total_groups = math.ceil(total_players / players_per_group)\n    return total_groups\nans = solver()", "answer": 7.0}
{"question": " Frank had saved up 3 dollars. If he received another 37 dollars for his allowance, how many 8 dollar toys could he buy? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank had saved up 3 dollars. If he received another 37 dollars for his allowance, how many 8 dollar toys could he buy?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    frank_had_saved_up = 3\n    allowance = 37\n    toy_price = 8\n    # In the second step, we can calculate the total money Frank has:\n    total_money = frank_had_saved_up + allowance\n    # In the third step, we can calculate the number of toys Frank can buy:\n    number_of_toys = total_money // toy_price\n    return number_of_toys\nans = solver()", "answer": 5.0}
{"question": " A pet shelter had 8 puppies when another 19 were brought in. If 3 puppies a day are adopted, how long would it take for all of them to be adopted? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet shelter had 8 puppies when another 19 were brought in. If 3 puppies a day are adopted, how long would it take for all of them to be adopted?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    puppies_left = 8\n    puppies_brought_in = 19\n    puppies_total = puppies_left + puppies_brought_in\n    puppies_adopted_per_day = 3\n    days_passed = 0\n    while puppies_total > 0:\n        puppies_total = puppies_total - puppies_adopted_per_day\n        days_passed = days_passed + 1\n    return days_passed\nans = solver()", "answer": 9.0}
{"question": " For homework Faye had 13 math problems and 2 spelling problems. If she can finish 3 problems in an hour how long will it take her to finish all the problems? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For homework Faye had 13 math problems and 2 spelling problems. If she can finish 3 problems in an hour how long will it take her to finish all the problems?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    math_problems = 13\n    spelling_problems = 2\n    problems_per_hour = 3\n    # Now, we can calculate the total number of problems:\n    total_problems = math_problems + spelling_problems\n    # Now, we can calculate the total time:\n    total_time = total_problems / problems_per_hour\n    return total_time\nans = solver()", "answer": 5.0}
{"question": " Sam had saved up 8 dollars. If he received another 7 dollars for his allowance, how many 3 dollar toys could he buy? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Sam had saved up 8 dollars. If he received another 7 dollars for his allowance, how many 3 dollar toys could he buy?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    saved_money = 8\n    allowance = 7\n    toy_price = 3\n    # In the second step, we can calculate the total money Sam has:\n    total_money = saved_money + allowance\n    # In the third step, we can calculate the number of toys Sam can buy:\n    num_toys = total_money // toy_price\n    return num_toys\nans = solver()", "answer": 5.0}
{"question": " Bianca and her friends were recycling paper for their class. For every 3 pounds they recycled they earned one point. If Bianca recycled 24 pounds and her friends recycled 3 pounds, how many points did they earn? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bianca and her friends were recycling paper for their class. For every 3 pounds they recycled they earned one point. If Bianca recycled 24 pounds and her friends recycled 3 pounds, how many points did they earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    bianca_pounds = 24\n    friends_pounds = 3\n    points_per_3_pounds = 1\n    # In the second step, we can calculate the following variable:\n    bianca_points = bianca_pounds / 3 * points_per_3_pounds\n    friends_points = friends_pounds / 3 * points_per_3_pounds\n    # In the third step, we can calculate the following variable:\n    total_points = bianca_points + friends_points\n    return total_points\nans = solver()", "answer": 9.0}
{"question": " There school's baseball team had 31 new players and 4 returning players. If the coach put them into groups with 7 players in each group, how many groups would there be? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There school's baseball team had 31 new players and 4 returning players. If the coach put them into groups with 7 players in each group, how many groups would there be?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    new_players = 31\n    returning_players = 4\n    total_players = new_players + returning_players\n    players_per_group = 7\n    groups = total_players / players_per_group\n    return groups\nans = solver()", "answer": 5.0}
{"question": " Oliver was organizing his baseball cards in a binder with 3 on each page. If he had 2 new cards and 10 old cards to put in the binder, how many pages would he use? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Oliver was organizing his baseball cards in a binder with 3 on each page. If he had 2 new cards and 10 old cards to put in the binder, how many pages would he use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    old_cards = 10\n    new_cards = 2\n    cards_per_page = 3\n    pages = 0\n    # Now, we can use the above variables to calculate the number of pages.\n    pages = math.ceil((old_cards + new_cards) / cards_per_page)\n    return pages\nans = solver()", "answer": 4.0}
{"question": " Paul made 3 dollars mowing lawns and 3 dollars weed eating. If he only spent 3 dollar a week, how long would the money last him? ", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul made 3 dollars mowing lawns and 3 dollars weed eating. If he only spent 3 dollar a week, how long would the money last him?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    money = 3\n    week = 0\n    while money > 0:\n        money = money - 3\n        week = week + 1\n    return week\nans = solver()", "answer": 2.0}
{"question": " Robin was making baggies of cookies with 6 cookies in each bag. If she had 23 chocolate chip cookies and 25 oatmeal cookies, how many baggies could she make? ", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Robin was making baggies of cookies with 6 cookies in each bag. If she had 23 chocolate chip cookies and 25 oatmeal cookies, how many baggies could she make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_chocolate_chip_cookies = 23\n    num_oatmeal_cookies = 25\n    num_cookies_per_bag = 6\n    num_chocolate_chip_bags = 0\n    num_oatmeal_bags = 0\n    num_total_bags = 0\n    # In the second step, we can calculate the number of chocolate chip bags and oatmeal bags\n    num_chocolate_chip_bags = math.floor(num_chocolate_chip_cookies / num_cookies_per_bag)\n    num_oatmeal_bags = math.floor(num_oatmeal_cookies / num_cookies_per_bag)\n    # In the third step, we can calculate the total number of bags\n    num_total_bags = num_chocolate_chip_bags + num_oatmeal_bags\n    return num_total_bags\nans = solver()", "answer": 8.0}
{"question": " The schools debate team had 5 boys and 40 girls on it. If they were split into groups of 9 how many groups could they make? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The schools debate team had 5 boys and 40 girls on it. If they were split into groups of 9 how many groups could they make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    boys = 5\n    girls = 40\n    group_size = 9\n    # Now, we can calculate the total number of students:\n    total_students = boys + girls\n    # Now, we can calculate the total number of groups:\n    total_groups = total_students / group_size\n    # Now, we can return the answer:\n    return total_groups\nans = solver()", "answer": 5.0}
{"question": " At a company picnic 23 managers and 7 employees decided to start a game of volleyball. If they split into 6 teams how many people would be on each team? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At a company picnic 23 managers and 7 employees decided to start a game of volleyball. If they split into 6 teams how many people would be on each team?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    managers = 23\n    employees = 7\n    total_people = managers + employees\n    teams = 6\n    people_per_team = total_people / teams\n    return people_per_team\nans = solver()", "answer": 5.0}
{"question": " For a birthday party Cody bought 4 regular sodas and 44 diet sodas. If his fridge would only hold 6 on each shelf, how many shelves would he fill up? ", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For a birthday party Cody bought 4 regular sodas and 44 diet sodas. If his fridge would only hold 6 on each shelf, how many shelves would he fill up?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    regular_soda = 4\n    diet_soda = 44\n    shelf_capacity = 6\n    # Now, we can calculate the total number of sodas:\n    total_sodas = regular_soda + diet_soda\n    # Now, we can calculate the number of shelves needed:\n    total_shelves = math.ceil(total_sodas / shelf_capacity)\n    return total_shelves\nans = solver()", "answer": 8.0}
{"question": " Robin's class is going on a field trip to the zoo. If each van can hold 8 people and there are 22 students and 2 adults going, how many vans will they need? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Robin's class is going on a field trip to the zoo. If each van can hold 8 people and there are 22 students and 2 adults going, how many vans will they need?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    students = 22\n    adults = 2\n    capacity = 8\n    vans = 0\n    # In the second step, we can calculate the total number of people:\n    total = students + adults\n    # In the third step, we can calculate the number of vans:\n    vans = math.ceil(total / capacity)\n    return vans\nans = solver()", "answer": 3.0}
{"question": " Ned was helping the cafeteria workers pick up lunch trays, but he could only carry 5 trays at a time. If he had to pick up 5 trays from one table and 5 trays from another, how many trips will he make? ", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Ned was helping the cafeteria workers pick up lunch trays, but he could only carry 5 trays at a time. If he had to pick up 5 trays from one table and 5 trays from another, how many trips will he make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_trays = 5\n    num_tables = 2\n    num_trips = 0\n    # Now, we can start to think about how to solve the problem.\n    # We can start by thinking about how many trays we can pick up in one trip.\n    num_trays_per_trip = num_trays * num_tables\n    # Now, we can think about how many trays we need to pick up.\n    num_trays_to_pick_up = 10\n    # Now, we can think about how many trips we need to make.\n    num_trips = math.ceil(num_trays_to_pick_up / num_trays_per_trip)\n    return num_trips\nans = solver()", "answer": 2.0}
{"question": " There school's baseball team had 2 new players and 6 returning players. If the coach put them into groups with 4 players in each group, how many groups would there be? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There school's baseball team had 2 new players and 6 returning players. If the coach put them into groups with 4 players in each group, how many groups would there be?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    new_players = 2\n    returning_players = 6\n    players_per_group = 4\n    # In the second step, we can calculate the total number of players:\n    total_players = new_players + returning_players\n    # In the third step, we can calculate the total number of groups:\n    total_groups = total_players / players_per_group\n    # In the fourth step, we can return the answer:\n    return total_groups\nans = solver()", "answer": 2.0}
{"question": " For homework Amy had 18 math problems and 6 spelling problems. If she can finish 4 problems in an hour how long will it take her to finish all the problems? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For homework Amy had 18 math problems and 6 spelling problems. If she can finish 4 problems in an hour how long will it take her to finish all the problems?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    math_problems = 18\n    spelling_problems = 6\n    problems_per_hour = 4\n    hours = 0\n    # Now, we can calculate the total number of problems:\n    total_problems = math_problems + spelling_problems\n    # Now, we can calculate the total number of hours:\n    hours = total_problems / problems_per_hour\n    return hours\nans = solver()", "answer": 6.0}
{"question": " Maria was making baggies of cookies with 3 cookies in each bag. If she had 2 chocolate chip cookies and 16 oatmeal cookies, how many baggies could she make? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Maria was making baggies of cookies with 3 cookies in each bag. If she had 2 chocolate chip cookies and 16 oatmeal cookies, how many baggies could she make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_chocolate_chip_cookies = 2\n    num_oatmeal_cookies = 16\n    num_cookies_per_bag = 3\n    num_baggies = 0\n    # Now, we can use the above variables to calculate the number of baggies\n    num_baggies = math.floor(num_oatmeal_cookies / num_cookies_per_bag)\n    return num_baggies\nans = solver()", "answer": 6.0}
{"question": " Sarah's old washing machine could only wash 5 pieces of clothing at a time. If she had to wash 43 shirts and 2 sweaters how many loads would she have to do? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Sarah's old washing machine could only wash 5 pieces of clothing at a time. If she had to wash 43 shirts and 2 sweaters how many loads would she have to do?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    shirts = 43\n    sweaters = 2\n    capacity = 5\n    loads = 0\n    # Now, we can start to think about how to solve the problem.\n    # We can start by washing the sweaters first, and then the shirts.\n    loads += math.ceil(sweaters / capacity)\n    shirts -= (capacity - sweaters)\n    loads += math.ceil(shirts / capacity)\n    return loads\nans = solver()", "answer": 9.0}
{"question": " A pet shelter had 3 puppies when another 3 were brought in. If 3 puppies a day are adopted, how long would it take for all of them to be adopted? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet shelter had 3 puppies when another 3 were brought in. If 3 puppies a day are adopted, how long would it take for all of them to be adopted?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    puppies = 3\n    puppies_adopted = 0\n    days = 0\n    while puppies > 0:\n        puppies = puppies + 3\n        puppies_adopted = puppies_adopted + 3\n        puppies = puppies - puppies_adopted\n        days = days + 1\n    return days\nans = solver()", "answer": 2.0}
{"question": " While playing at the arcade, Luke won 2 tickets playing 'whack a mole' and 13 tickets playing 'skee ball'. If he was trying to buy candy that cost 3 tickets a piece, how many could he buy? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While playing at the arcade, Luke won 2 tickets playing 'whack a mole' and 13 tickets playing 'skee ball'. If he was trying to buy candy that cost 3 tickets a piece, how many could he buy?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    whack_a_mole_tickets = 2\n    skee_ball_tickets = 13\n    candy_cost = 3\n    total_tickets = whack_a_mole_tickets + skee_ball_tickets\n    num_candy = total_tickets // candy_cost\n    return num_candy\nans = solver()", "answer": 5.0}
{"question": " A group of 3 friends went into a restaurant. The chef already had 8 chicken wings cooked but cooked 10 more for the group. If they each got the same amount how many would each person get? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A group of 3 friends went into a restaurant. The chef already had 8 chicken wings cooked but cooked 10 more for the group. If they each got the same amount how many would each person get?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_of_friends = 3\n    num_of_wings_cooked = 8\n    num_of_wings_cooked_more = 10\n    num_of_wings_total = num_of_wings_cooked + num_of_wings_cooked_more\n    num_of_wings_each = num_of_wings_total / num_of_friends\n    return num_of_wings_each\nans = solver()", "answer": 6.0}
{"question": " Nancy's old washing machine could only wash 9 pieces of clothing at a time. If she had to wash 19 shirts and 8 sweaters how many loads would she have to do? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Nancy's old washing machine could only wash 9 pieces of clothing at a time. If she had to wash 19 shirts and 8 sweaters how many loads would she have to do?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    shirts = 19\n    sweaters = 8\n    capacity = 9\n    # Now, we can calculate the number of loads for shirts and sweaters\n    shirt_loads = math.ceil(shirts / capacity)\n    sweater_loads = math.ceil(sweaters / capacity)\n    # Now, we can calculate the total number of loads\n    total_loads = shirt_loads + sweater_loads\n    return total_loads\nans = solver()", "answer": 3.0}
{"question": " Paul had saved up 3 dollars. If he received another 7 dollars for his allowance, how many 5 dollar toys could he buy? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul had saved up 3 dollars. If he received another 7 dollars for his allowance, how many 5 dollar toys could he buy?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    paul_dollars = 3\n    allowance = 7\n    toy_price = 5\n    # In the second step, we can calculate the total amount of money Paul has:\n    total_money = paul_dollars + allowance\n    # In the third step, we can calculate the number of toys Paul can buy:\n    num_toys = total_money // toy_price\n    return num_toys\nans = solver()", "answer": 2.0}
{"question": " Jerry made 14 dollars mowing lawns and 31 dollars weed eating. If he only spent 5 dollar a week, how long would the money last him? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jerry made 14 dollars mowing lawns and 31 dollars weed eating. If he only spent 5 dollar a week, how long would the money last him?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    mowing_lawns = 14\n    weed_eating = 31\n    weekly_spending = 5\n    total_money = mowing_lawns + weed_eating\n    weeks = total_money / weekly_spending\n    return weeks\nans = solver()", "answer": 9.0}
{"question": " While playing at the arcade, Ned won 26 tickets playing 'whack a mole' and 19 tickets playing 'skee ball'. If he was trying to buy candy that cost 9 tickets a piece, how many could he buy? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: While playing at the arcade, Ned won 26 tickets playing 'whack a mole' and 19 tickets playing 'skee ball'. If he was trying to buy candy that cost 9 tickets a piece, how many could he buy?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    whack_a_mole_tickets = 26\n    skee_ball_tickets = 19\n    candy_cost = 9\n    # In the second step, we can calculate the total number of tickets Ned has:\n    total_tickets = whack_a_mole_tickets + skee_ball_tickets\n    # In the third step, we can calculate the number of candies Ned can buy:\n    candies = total_tickets // candy_cost\n    return candies\nans = solver()", "answer": 5.0}
{"question": " Luke was helping the cafeteria workers pick up lunch trays, but he could only carry 4 trays at a time. If he had to pick up 20 trays from one table and 16 trays from another, how many trips will he make? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Luke was helping the cafeteria workers pick up lunch trays, but he could only carry 4 trays at a time. If he had to pick up 20 trays from one table and 16 trays from another, how many trips will he make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_trays_per_trip = 4\n    num_trays_table_1 = 20\n    num_trays_table_2 = 16\n    num_trips = 0\n    num_trips = math.ceil(num_trays_table_1/num_trays_per_trip) + math.ceil(num_trays_table_2/num_trays_per_trip)\n    return num_trips\nans = solver()", "answer": 9.0}
{"question": " Vanessa and her friends were recycling paper for their class. For every 9 pounds they recycled they earned one point. If Vanessa recycled 20 pounds and her friends recycled 16 pounds, how many points did they earn? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Vanessa and her friends were recycling paper for their class. For every 9 pounds they recycled they earned one point. If Vanessa recycled 20 pounds and her friends recycled 16 pounds, how many points did they earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    Vanessa_recycled = 20\n    Vanessa_friends_recycled = 16\n    # In the second step, we can define the following variable:\n    Vanessa_points = Vanessa_recycled / 9\n    Vanessa_friends_points = Vanessa_friends_recycled / 9\n    # In the third step, we can define the following variable:\n    Vanessa_and_friends_points = Vanessa_points + Vanessa_friends_points\n    return Vanessa_and_friends_points\nans = solver()", "answer": 4.0}
{"question": " A pet shelter had 2 puppies when another 34 were brought in. If 4 puppies a day are adopted, how long would it take for all of them to be adopted? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet shelter had 2 puppies when another 34 were brought in. If 4 puppies a day are adopted, how long would it take for all of them to be adopted?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    puppies_left = 36\n    puppies_adopted = 0\n    days = 0\n    while puppies_left > 0:\n        puppies_left = puppies_left - 4\n        puppies_adopted = puppies_adopted + 4\n        days = days + 1\n    return days\nans = solver()", "answer": 9.0}
{"question": " At a company picnic 9 managers and 15 employees decided to start a game of volleyball. If they split into 8 teams how many people would be on each team? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At a company picnic 9 managers and 15 employees decided to start a game of volleyball. If they split into 8 teams how many people would be on each team?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    managers = 9\n    employees = 15\n    teams = 8\n    # Now, we can use the following formula to calculate the number of people on each team:\n    people_per_team = (managers + employees) / teams\n    return people_per_team\nans = solver()", "answer": 3.0}
{"question": " John was organizing his baseball cards in a binder with 3 on each page. If he had 8 new cards and 16 old cards to put in the binder, how many pages would he use? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: John was organizing his baseball cards in a binder with 3 on each page. If he had 8 new cards and 16 old cards to put in the binder, how many pages would he use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    new_cards = 8\n    old_cards = 16\n    cards_per_page = 3\n    # Now, we can calculate the number of pages needed for the new cards:\n    new_pages = math.ceil(new_cards / cards_per_page)\n    # And the number of pages needed for the old cards:\n    old_pages = math.ceil(old_cards / cards_per_page)\n    # Finally, we can add the two numbers together to get the total number of pages:\n    total_pages = new_pages + old_pages\n    return total_pages\nans = solver()", "answer": 8.0}
{"question": " Wendy uploaded 22 pictures from her phone and 2 from her camera to facebook. If she sorted the pics into 4 different albums with the same amount of pics in each album, how many pictures were in each of the albums? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Wendy uploaded 22 pictures from her phone and 2 from her camera to facebook. If she sorted the pics into 4 different albums with the same amount of pics in each album, how many pictures were in each of the albums?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_pics = 22 + 2\n    num_albums = 4\n    pics_per_album = total_pics / num_albums\n    return pics_per_album\nans = solver()", "answer": 6.0}
{"question": " A toy store had 17 giant stuffed bears in stock when they got another shipment with 10 bears in it. The put the bears onto shelves with 9 on each shelf. How many shelves did they use? ", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: A toy store had 17 giant stuffed bears in stock when they got another shipment with 10 bears in it. The put the bears onto shelves with 9 on each shelf. How many shelves did they use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_bears = 17\n    num_bears_in_shipment = 10\n    num_bears_on_shelf = 9\n    num_shelves = 0\n    num_bears_left = 0\n    num_bears_on_last_shelf = 0\n    num_bears_on_first_shelf = 0\n    num_bears_on_second_shelf = 0\n    num_bears_on_third_shelf = 0\n    num_bears_on_fourth_shelf = 0\n    num_bears_on_fifth_shelf = 0\n    num_bears_on_sixth_shelf = 0\n    num_bears_on_seventh_shelf = 0\n    num_bears_on_eighth_shelf = 0\n    num_bears_on_ninth_shelf = 0\n    num_bears_on_tenth_shelf = 0\n    num_bears_on_eleventh_shelf = 0\n    num_bears_on_twelfth_shelf = 0\n    num_bears_on_thirteenth_shelf = 0\n    num_bears_on_fourteenth_shelf = 0\n    num_bears_on_fifteenth_\nans = solver()", "answer": 3.0}
{"question": " Zoe and her friends were recycling paper for their class. For every 8 pounds they recycled they earned one point. If Zoe recycled 25 pounds and her friends recycled 23 pounds, how many points did they earn? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Zoe and her friends were recycling paper for their class. For every 8 pounds they recycled they earned one point. If Zoe recycled 25 pounds and her friends recycled 23 pounds, how many points did they earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    Zoe_pounds = 25\n    friends_pounds = 23\n    # In the second step, we can define the following variable:\n    Zoe_points = Zoe_pounds / 8\n    friends_points = friends_pounds / 8\n    # In the third step, we can define the following variable:\n    total_points = Zoe_points + friends_points\n    return total_points\nans = solver()", "answer": 6.0}
{"question": " Billy was organizing his baseball cards in a binder with 5 on each page. If he had 3 new cards and 42 old cards to put in the binder, how many pages would he use? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Billy was organizing his baseball cards in a binder with 5 on each page. If he had 3 new cards and 42 old cards to put in the binder, how many pages would he use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    old_cards = 42\n    new_cards = 3\n    cards_per_page = 5\n    pages = 0\n    # Now, we can use the above variables to calculate the number of pages needed.\n    pages = math.ceil((old_cards + new_cards) / cards_per_page)\n    return pages\nans = solver()", "answer": 9.0}
{"question": " For a birthday party Tom bought 4 regular sodas and 52 diet sodas. If his fridge would only hold 7 on each shelf, how many shelves would he fill up? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For a birthday party Tom bought 4 regular sodas and 52 diet sodas. If his fridge would only hold 7 on each shelf, how many shelves would he fill up?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    regular_soda = 4\n    diet_soda = 52\n    sodas_per_shelf = 7\n    # Now, we can calculate the number of shelves needed for regular sodas:\n    regular_soda_shelves = math.ceil(regular_soda / sodas_per_shelf)\n    # And the number of shelves needed for diet sodas:\n    diet_soda_shelves = math.ceil(diet_soda / sodas_per_shelf)\n    # Now, we can calculate the total number of shelves needed:\n    total_shelves = regular_soda_shelves + diet_soda_shelves\n    return total_shelves\nans = solver()", "answer": 8.0}
{"question": " Victor was helping the cafeteria workers pick up lunch trays, but he could only carry 7 trays at a time. If he had to pick up 23 trays from one table and 5 trays from another, how many trips will he make? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Victor was helping the cafeteria workers pick up lunch trays, but he could only carry 7 trays at a time. If he had to pick up 23 trays from one table and 5 trays from another, how many trips will he make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_trays = 23 + 5\n    num_trips = math.ceil(num_trays / 7)\n    return num_trips\nans = solver()", "answer": 4.0}
{"question": " Paul had saved up 4 dollars. If he received another 11 dollars for his allowance, how many 5 dollar toys could he buy? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paul had saved up 4 dollars. If he received another 11 dollars for his allowance, how many 5 dollar toys could he buy?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    paul_dollars = 4\n    allowance = 11\n    toy_price = 5\n    # In the second step, we can calculate the total amount of money Paul has:\n    total_money = paul_dollars + allowance\n    # In the third step, we can calculate the number of toys Paul can buy:\n    num_toys = total_money // toy_price\n    return num_toys\nans = solver()", "answer": 3.0}
{"question": " Katie uploaded 30 pictures from her phone and 51 from her camera to facebook. If she sorted the pics into 9 different albums with the same amount of pics in each album, how many pictures were in each of the albums? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Katie uploaded 30 pictures from her phone and 51 from her camera to facebook. If she sorted the pics into 9 different albums with the same amount of pics in each album, how many pictures were in each of the albums?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_pics = 30 + 51\n    total_albums = 9\n    pics_per_album = total_pics / total_albums\n    return pics_per_album\nans = solver()", "answer": 9.0}
{"question": " Debby's class is going on a field trip to the zoo. If each van can hold 9 people and there are 40 students and 14 adults going, how many vans will they need? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Debby's class is going on a field trip to the zoo. If each van can hold 9 people and there are 40 students and 14 adults going, how many vans will they need?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_students = 40\n    num_adults = 14\n    num_people_per_van = 9\n    # In the second step, we can calculate the total number of people:\n    num_people = num_students + num_adults\n    # In the third step, we can calculate the total number of vans:\n    num_vans = math.ceil(num_people / num_people_per_van)\n    return num_vans\nans = solver()", "answer": 6.0}
{"question": " For Halloween Emily received 5 pieces of candy from neighbors and 13 pieces from her older sister. If she only ate 9 pieces a day, how long would the candy last her? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For Halloween Emily received 5 pieces of candy from neighbors and 13 pieces from her older sister. If she only ate 9 pieces a day, how long would the candy last her?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    candy_from_neighbors = 5\n    candy_from_sister = 13\n    candy_eaten_per_day = 9\n    total_candy = candy_from_neighbors + candy_from_sister\n    days = math.ceil(total_candy / candy_eaten_per_day)\n    return days\nans = solver()", "answer": 2.0}
{"question": " Frank made 5 dollars mowing lawns and 58 dollars weed eating. If he only spent 7 dollar a week, how long would the money last him? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank made 5 dollars mowing lawns and 58 dollars weed eating. If he only spent 7 dollar a week, how long would the money last him?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    mowing_lawns = 5\n    weed_eating = 58\n    weekly_spending = 7\n    total_money = mowing_lawns + weed_eating\n    print(\"Total money: \", total_money)\n    # In the second step, we can calculate the number of weeks that the money can last him:\n    num_weeks = total_money / weekly_spending\n    print(\"Number of weeks: \", num_weeks)\n    return num_weeks\nans = solver()", "answer": 9.0}
{"question": " A new building needed 14 windows. The builder had already installed 5 of them. If it takes 4 hours to install each window, how long will it take him to install the rest? ", "executed": 36.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A new building needed 14 windows. The builder had already installed 5 of them. If it takes 4 hours to install each window, how long will it take him to install the rest?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_windows = 14\n    installed_windows = 5\n    time_per_window = 4\n    # In the second step, we can calculate the number of windows that need to be installed:\n    windows_to_install = total_windows - installed_windows\n    # In the third step, we can calculate the time needed to install the rest of the windows:\n    time_to_install = windows_to_install * time_per_window\n    return time_to_install\nans = solver()", "answer": 36.0}
{"question": " A chef needs to cook 16 potatoes. He has already cooked 7. If each potato takes 5 minutes to cook, how long will it take him to cook the rest? ", "executed": 45.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A chef needs to cook 16 potatoes. He has already cooked 7. If each potato takes 5 minutes to cook, how long will it take him to cook the rest?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_potatoes = 16\n    cooked_potatoes = 7\n    time_per_potato = 5\n    # In the second step, we can calculate the number of potatoes that need to be cooked:\n    potatoes_to_cook = total_potatoes - cooked_potatoes\n    # In the third step, we can calculate the time needed to cook the remaining potatoes:\n    time_to_cook = potatoes_to_cook * time_per_potato\n    return time_to_cook\nans = solver()", "answer": 45.0}
{"question": " Ned bought 14 boxes of chocolate candy and gave 7 to his little brother. If each box has 6 pieces inside it, how many pieces did Ned still have? ", "executed": 42.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Ned bought 14 boxes of chocolate candy and gave 7 to his little brother. If each box has 6 pieces inside it, how many pieces did Ned still have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    ned_bought = 14\n    ned_gave = 7\n    pieces_per_box = 6\n    # In the second step, we can calculate the number of pieces that Ned bought:\n    ned_bought_pieces = ned_bought * pieces_per_box\n    # In the third step, we can calculate the number of pieces that Ned gave:\n    ned_gave_pieces = ned_gave * pieces_per_box\n    # In the fourth step, we can calculate the number of pieces that Ned still had:\n    ned_still_had = ned_bought_pieces - ned_gave_pieces\n    # In the fifth step, we can return the answer:\n    return ned_still_had\nans = solver()", "answer": 42.0}
{"question": " There were 11 friends playing a video game online when 5 players quit. If each player left had 5 lives, how many lives did they have total? ", "executed": 30.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 11 friends playing a video game online when 5 players quit. If each player left had 5 lives, how many lives did they have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_players = 11\n    num_players_left = 5\n    num_lives_per_player = 5\n    total_lives = num_players * num_lives_per_player\n    total_lives_left = total_lives - num_players_left * num_lives_per_player\n    return total_lives_left\nans = solver()", "answer": 30.0}
{"question": " Henry earned 5 dollars for each lawn he mowed. If he had 12 lawns to mow, but forgot to mow 7 of them, how much money did he actually earn? ", "executed": 25.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Henry earned 5 dollars for each lawn he mowed. If he had 12 lawns to mow, but forgot to mow 7 of them, how much money did he actually earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    lawns_to_mow = 12\n    lawns_forgot_to_mow = 7\n    money_earned_per_lawn = 5\n    # In the second step, we can calculate the number of lawns that Henry actually mowed:\n    lawns_actually_mowed = lawns_to_mow - lawns_forgot_to_mow\n    # In the third step, we can calculate the money that Henry actually earned:\n    money_actually_earned = lawns_actually_mowed * money_earned_per_lawn\n    # In the fourth step, we can return the answer:\n    return money_actually_earned\nans = solver()", "answer": 25.0}
{"question": " A trivia team had 5 members total, but during a game 2 members didn't show up. If each member that did show up scored 6 points, how many points were scored total? ", "executed": 18.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A trivia team had 5 members total, but during a game 2 members didn't show up. If each member that did show up scored 6 points, how many points were scored total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_members = 5\n    members_showed_up = 3\n    points_per_member = 6\n    total_points = 0\n    # Now, we can calculate the total points by multiplying the points per member by the number of members that showed up\n    total_points = members_showed_up * points_per_member\n    return total_points\nans = solver()", "answer": 18.0}
{"question": " A painter needed to paint 10 rooms in a building. Each room takes 8 hours to paint. If he already painted 8 rooms, how much longer will he take to paint the rest? ", "executed": 16.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A painter needed to paint 10 rooms in a building. Each room takes 8 hours to paint. If he already painted 8 rooms, how much longer will he take to paint the rest?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_rooms = 10\n    time_per_room = 8\n    rooms_painted = 8\n    rooms_left = total_rooms - rooms_painted\n    time_left = rooms_left * time_per_room\n    return time_left\nans = solver()", "answer": 16.0}
{"question": " In a video game, each enemy defeated gives you 3 points. If a level has 6 enemies total and you destroy all but 2 of them, how many points would you earn? ", "executed": 12.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In a video game, each enemy defeated gives you 3 points. If a level has 6 enemies total and you destroy all but 2 of them, how many points would you earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    points_per_enemy = 3\n    enemies_left = 2\n    enemies_total = 6\n    points_earned = 0\n    # Now, we can calculate the points earned by the following equation:\n    points_earned = (enemies_total - enemies_left) * points_per_enemy\n    return points_earned\nans = solver()", "answer": 12.0}
{"question": " Wendy earned 5 points for each bag of cans she recycled. If she had 11 bags, but didn't recycle 2 of them, how many points would she have earned? ", "executed": 45.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Wendy earned 5 points for each bag of cans she recycled. If she had 11 bags, but didn't recycle 2 of them, how many points would she have earned?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    points_per_bag = 5\n    total_bags = 11\n    bags_not_recycled = 2\n    # In the second step, we can calculate the number of bags recycled:\n    bags_recycled = total_bags - bags_not_recycled\n    # In the third step, we can calculate the total points earned:\n    total_points = points_per_bag * bags_recycled\n    return total_points\nans = solver()", "answer": 45.0}
{"question": " Each chocolate bar in a box cost $3. If a box had 7 bars total and Olivia sold all but 4 bars, how much money would she have made? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Each chocolate bar in a box cost $3. If a box had 7 bars total and Olivia sold all but 4 bars, how much money would she have made?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    price_per_bar = 3\n    # In the second step, we can define the following variable:\n    total_bars = 7\n    # In the third step, we can define the following variable:\n    bars_sold = total_bars - 4\n    # In the fourth step, we can define the following variable:\n    total_price = price_per_bar * bars_sold\n    return total_price\nans = solver()", "answer": 9.0}
{"question": " Kaleb bought 14 boxes of chocolate candy and gave 5 to his little brother. If each box has 6 pieces inside it, how many pieces did Kaleb still have? ", "executed": 54.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Kaleb bought 14 boxes of chocolate candy and gave 5 to his little brother. If each box has 6 pieces inside it, how many pieces did Kaleb still have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    boxes_bought = 14\n    boxes_given = 5\n    pieces_per_box = 6\n    # In the second step, we can calculate the number of pieces Kaleb had before giving some to his brother:\n    pieces_before_giving = boxes_bought * pieces_per_box\n    # In the third step, we can calculate the number of pieces Kaleb had after giving some to his brother:\n    pieces_after_giving = pieces_before_giving - boxes_given * pieces_per_box\n    return pieces_after_giving\nans = solver()", "answer": 54.0}
{"question": " At a restaurant each adult meal costs $3 and kids eat free. If a group of 12 people came in and 7 were kids, how much would it cost for the group to eat? ", "executed": 15.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At a restaurant each adult meal costs $3 and kids eat free. If a group of 12 people came in and 7 were kids, how much would it cost for the group to eat?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    adult_meal_cost = 3\n    kids_meal_cost = 0\n    total_people = 12\n    kids_count = 7\n    adult_count = total_people - kids_count\n    total_cost = adult_count * adult_meal_cost + kids_count * kids_meal_cost\n    return total_cost\nans = solver()", "answer": 15.0}
{"question": " Jerry had 7 action figures, but needed 16 total for a complete collection. If each one costs $8, how much money would he need to finish his collection? ", "executed": 72.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jerry had 7 action figures, but needed 16 total for a complete collection. If each one costs $8, how much money would he need to finish his collection?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_action_figures_needed = 16 - 7\n    cost_per_action_figure = 8\n    total_cost = num_action_figures_needed * cost_per_action_figure\n    return total_cost\nans = solver()", "answer": 72.0}
{"question": " In a video game, each enemy defeated gives you 9 points. If a level has 11 enemies total and you destroy all but 3 of them, how many points would you earn? ", "executed": 72.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In a video game, each enemy defeated gives you 9 points. If a level has 11 enemies total and you destroy all but 3 of them, how many points would you earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    points_per_enemy = 9\n    enemies_left = 3\n    enemies_total = 11\n    points_earned = 0\n    # Now, we can calculate the points earned by the following equation:\n    points_earned = (enemies_total - enemies_left) * points_per_enemy\n    return points_earned\nans = solver()", "answer": 72.0}
{"question": " There were 16 friends playing a video game online when 7 players quit. If each player left had 8 lives, how many lives did they have total? ", "executed": 128.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 16 friends playing a video game online when 7 players quit. If each player left had 8 lives, how many lives did they have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_lives = 0\n    # In the second step, we can define the following variable:\n    total_lives = total_lives + 8 * 7\n    # In the third step, we can define the following variable:\n    total_lives = total_lives + 8 * 9\n    return total_lives\nans = solver()", "answer": 72.0}
{"question": " A new building needed 10 windows. The builder had already installed 6 of them. If it takes 5 hours to install each window, how long will it take him to install the rest? ", "executed": 20.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A new building needed 10 windows. The builder had already installed 6 of them. If it takes 5 hours to install each window, how long will it take him to install the rest?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_windows = 10\n    installed_windows = 6\n    time_per_window = 5\n    # In the second step, we can calculate the number of windows that need to be installed:\n    windows_to_install = total_windows - installed_windows\n    # In the third step, we can calculate the time needed to install the rest of the windows:\n    time_to_install = windows_to_install * time_per_window\n    return time_to_install\nans = solver()", "answer": 20.0}
{"question": " Adam earned 9 dollars for each lawn he mowed. If he had 12 lawns to mow, but forgot to mow 8 of them, how much money did he actually earn? ", "executed": 36.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Adam earned 9 dollars for each lawn he mowed. If he had 12 lawns to mow, but forgot to mow 8 of them, how much money did he actually earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    lawns_to_mow = 12\n    lawns_forgot = 8\n    money_per_lawn = 9\n    money_earned = 0\n    # In the second step, we can calculate the money earned by Adam:\n    money_earned = (lawns_to_mow - lawns_forgot) * money_per_lawn\n    return money_earned\nans = solver()", "answer": 36.0}
{"question": " A trivia team had 12 members total, but during a game 4 members didn't show up. If each member that did show up scored 8 points, how many points were scored total? ", "executed": 64.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A trivia team had 12 members total, but during a game 4 members didn't show up. If each member that did show up scored 8 points, how many points were scored total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_members = 12\n    members_showed_up = total_members - 4\n    points_per_member = 8\n    total_points = members_showed_up * points_per_member\n    return total_points\nans = solver()", "answer": 64.0}
{"question": " Mike had 16 video games but 8 of them weren't working. If he wanted to sell the working games for $7 each, how much money could he earn? ", "executed": 56.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mike had 16 video games but 8 of them weren't working. If he wanted to sell the working games for $7 each, how much money could he earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_games = 16\n    working_games = 8\n    price_per_game = 7\n    total_earning = working_games * price_per_game\n    return total_earning\nans = solver()", "answer": 56.0}
{"question": " A painter needed to paint 12 rooms in a building. Each room takes 7 hours to paint. If he already painted 5 rooms, how much longer will he take to paint the rest? ", "executed": 49.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A painter needed to paint 12 rooms in a building. Each room takes 7 hours to paint. If he already painted 5 rooms, how much longer will he take to paint the rest?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_rooms = 12\n    time_per_room = 7\n    rooms_painted = 5\n    rooms_left = total_rooms - rooms_painted\n    time_left = rooms_left * time_per_room\n    return time_left\nans = solver()", "answer": 49.0}
{"question": " There were 8 friends playing a video game online when 5 players quit. If each player left had 5 lives, how many lives did they have total? ", "executed": 40.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 8 friends playing a video game online when 5 players quit. If each player left had 5 lives, how many lives did they have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_players = 8\n    num_players_left = 3\n    num_lives_per_player = 5\n    num_lives_left = num_players_left * num_lives_per_player\n    num_lives_total = num_lives_left + num_lives_per_player * (num_players - num_players_left)\n    return num_lives_total\nans = solver()", "answer": 15.0}
{"question": " A trivia team had 15 members total, but during a game 6 members didn't show up. If each member that did show up scored 3 points, how many points were scored total? ", "executed": 27.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A trivia team had 15 members total, but during a game 6 members didn't show up. If each member that did show up scored 3 points, how many points were scored total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_members = 15\n    members_showed_up = total_members - 6\n    points_per_member = 3\n    total_points = members_showed_up * points_per_member\n    return total_points\nans = solver()", "answer": 27.0}
{"question": " Ned had 15 video games but 6 of them weren't working. If he wanted to sell the working games for $7 each, how much money could he earn? ", "executed": 42.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Ned had 15 video games but 6 of them weren't working. If he wanted to sell the working games for $7 each, how much money could he earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_games = 15\n    working_games = 6\n    price_per_game = 7\n    # In the second step, we can calculate the number of broken games:\n    broken_games = total_games - working_games\n    # In the third step, we can calculate the total price of working games:\n    total_price = working_games * price_per_game\n    return total_price\nans = solver()", "answer": 63.0}
{"question": " Each chocolate bar in a box cost $6. If a box had 13 bars total and Zoe sold all but 6 bars, how much money would she have made? ", "executed": 36.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Each chocolate bar in a box cost $6. If a box had 13 bars total and Zoe sold all but 6 bars, how much money would she have made?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cost_per_bar = 6\n    # In the second step, we can define the following variable:\n    total_bars = 13\n    # In the third step, we can define the following variable:\n    bars_sold = total_bars - 6\n    # In the fourth step, we can define the following variable:\n    total_cost = cost_per_bar * total_bars\n    # In the fifth step, we can define the following variable:\n    total_revenue = cost_per_bar * bars_sold\n    # In the sixth step, we can define the following variable:\n    profit = total_revenue - total_cost\n    return profit\nans = solver()", "answer": 42.0}
{"question": " Will bought 7 boxes of chocolate candy and gave 3 to his little brother. If each box has 4 pieces inside it, how many pieces did Will still have? ", "executed": 16.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Will bought 7 boxes of chocolate candy and gave 3 to his little brother. If each box has 4 pieces inside it, how many pieces did Will still have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    box_bought = 7\n    box_given = 3\n    piece_per_box = 4\n    # In the second step, we can calculate the total number of pieces Will bought:\n    total_piece_bought = box_bought * piece_per_box\n    # In the third step, we can calculate the total number of pieces Will gave:\n    total_piece_given = box_given * piece_per_box\n    # In the fourth step, we can calculate the total number of pieces Will still have:\n    total_piece_still_have = total_piece_bought - total_piece_given\n    # In the fifth step, we can return the answer:\n    return total_piece_still_have\nans = solver()", "answer": 16.0}
{"question": " Mike invited 13 friends to a birthday party, but 7 couldn't come. If he wanted to buy enough cupcakes so each person could have exactly 4, how many should he buy? ", "executed": 24.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mike invited 13 friends to a birthday party, but 7 couldn't come. If he wanted to buy enough cupcakes so each person could have exactly 4, how many should he buy?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_friends = 13\n    num_cant_come = 7\n    num_cupcakes_per_person = 4\n    num_cupcakes_total = 0\n    num_cupcakes_total = num_friends - num_cant_come\n    num_cupcakes_total = num_cupcakes_total * num_cupcakes_per_person\n    return num_cupcakes_total\nans = solver()", "answer": 24.0}
{"question": " In a video game, each enemy defeated gives you 5 points. If a level has 8 enemies total and you destroy all but 6 of them, how many points would you earn? ", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In a video game, each enemy defeated gives you 5 points. If a level has 8 enemies total and you destroy all but 6 of them, how many points would you earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    points_per_enemy = 5\n    enemies_left = 6\n    enemies_total = 8\n    points_earned = 0\n    # Now, we can calculate the points earned by the following equation:\n    points_earned = points_per_enemy * (enemies_total - enemies_left)\n    return points_earned\nans = solver()", "answer": 10.0}
{"question": " Roger earned 9 dollars for each lawn he mowed. If he had 14 lawns to mow, but forgot to mow 8 of them, how much money did he actually earn? ", "executed": 54.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Roger earned 9 dollars for each lawn he mowed. If he had 14 lawns to mow, but forgot to mow 8 of them, how much money did he actually earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    lawns_to_mow = 14\n    lawns_mowed = 6\n    money_per_lawn = 9\n    money_earned = lawns_mowed * money_per_lawn\n    return money_earned\nans = solver()", "answer": 54.0}
{"question": " A magician was selling magic card decks for 2 dollars each. If he started with 5 decks and by the end of the day he had 3 left, how much money did he earn? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A magician was selling magic card decks for 2 dollars each. If he started with 5 decks and by the end of the day he had 3 left, how much money did he earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    decks_sold = 0\n    decks_left = 5\n    decks_sold = decks_left - 3\n    money_earned = decks_sold * 2\n    return money_earned\nans = solver()", "answer": 4.0}
{"question": " A chef needs to cook 12 potatoes. He has already cooked 6. If each potato takes 6 minutes to cook, how long will it take him to cook the rest? ", "executed": 36.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A chef needs to cook 12 potatoes. He has already cooked 6. If each potato takes 6 minutes to cook, how long will it take him to cook the rest?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_potatoes = 12\n    cooked_potatoes = 6\n    time_to_cook_one_potato = 6\n    # In the second step, we can calculate the number of potatoes that need to be cooked:\n    potatoes_to_cook = total_potatoes - cooked_potatoes\n    # In the third step, we can calculate the time it takes to cook the remaining potatoes:\n    time_to_cook_remaining_potatoes = potatoes_to_cook * time_to_cook_one_potato\n    return time_to_cook_remaining_potatoes\nans = solver()", "answer": 36.0}
{"question": " A new building needed 9 windows. The builder had already installed 6 of them. If it takes 6 hours to install each window, how long will it take him to install the rest? ", "executed": 18.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A new building needed 9 windows. The builder had already installed 6 of them. If it takes 6 hours to install each window, how long will it take him to install the rest?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_windows = 9\n    installed_windows = 6\n    time_per_window = 6\n    # In the second step, we can calculate the number of windows that need to be installed:\n    windows_to_install = total_windows - installed_windows\n    # In the third step, we can calculate the time needed to install the rest of the windows:\n    time_to_install = windows_to_install * time_per_window\n    return time_to_install\nans = solver()", "answer": 18.0}
{"question": " At the fair Adam bought 13 tickets. After riding the ferris wheel he had 4 tickets left. If each ticket cost 9 dollars, how much money did Adam spend riding the ferris wheel? ", "executed": 81.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the fair Adam bought 13 tickets. After riding the ferris wheel he had 4 tickets left. If each ticket cost 9 dollars, how much money did Adam spend riding the ferris wheel?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    tickets_bought = 13\n    tickets_left = 4\n    ticket_cost = 9\n    # In the second step, we can calculate the number of tickets used:\n    tickets_used = tickets_bought - tickets_left\n    # In the third step, we can calculate the money spent:\n    money_spent = tickets_used * ticket_cost\n    return money_spent\nans = solver()", "answer": 81.0}
{"question": " Dave bought 12 boxes of chocolate candy and gave 5 to his little brother. If each box has 3 pieces inside it, how many pieces did Dave still have? ", "executed": 31.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dave bought 12 boxes of chocolate candy and gave 5 to his little brother. If each box has 3 pieces inside it, how many pieces did Dave still have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_boxes = 12\n    num_pieces_per_box = 3\n    num_pieces_given_to_brother = 5\n    num_pieces_left = num_boxes * num_pieces_per_box - num_pieces_given_to_brother\n    return num_pieces_left\nans = solver()", "answer": 21.0}
{"question": " John had 5 action figures, but needed 7 total for a complete collection. If each one costs $5, how much money would he need to finish his collection? ", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: John had 5 action figures, but needed 7 total for a complete collection. If each one costs $5, how much money would he need to finish his collection?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_action_figures_needed = 7\n    cost_per_action_figure = 5\n    num_action_figures_owned = 5\n    num_action_figures_to_buy = num_action_figures_needed - num_action_figures_owned\n    cost_to_finish_collection = num_action_figures_to_buy * cost_per_action_figure\n    return cost_to_finish_collection\nans = solver()", "answer": 10.0}
{"question": " A painter needed to paint 9 rooms in a building. Each room takes 8 hours to paint. If he already painted 5 rooms, how much longer will he take to paint the rest? ", "executed": 32.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A painter needed to paint 9 rooms in a building. Each room takes 8 hours to paint. If he already painted 5 rooms, how much longer will he take to paint the rest?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_rooms = 9\n    time_per_room = 8\n    rooms_painted = 5\n    rooms_left = total_rooms - rooms_painted\n    time_left = rooms_left * time_per_room\n    return time_left\nans = solver()", "answer": 32.0}
{"question": " Each chocolate bar in a box cost $4. If a box had 8 bars total and Emily sold all but 3 bars, how much money would she have made? ", "executed": 20.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Each chocolate bar in a box cost $4. If a box had 8 bars total and Emily sold all but 3 bars, how much money would she have made?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cost_of_each_bar = 4\n    # In the second step, we can define the following variable:\n    total_bars_in_a_box = 8\n    # In the third step, we can define the following variable:\n    bars_sold = total_bars_in_a_box - 3\n    # In the fourth step, we can define the following variable:\n    money_made = cost_of_each_bar * bars_sold\n    return money_made\nans = solver()", "answer": 20.0}
{"question": " At lunch a waiter had 10 customers and 5 of them didn't leave a tip. If he got $3 each from the ones who did tip, how much money did he earn? ", "executed": 15.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At lunch a waiter had 10 customers and 5 of them didn't leave a tip. If he got $3 each from the ones who did tip, how much money did he earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_customers = 10\n    num_customers_who_did_not_tip = 5\n    tip_amount = 3\n    # Now, we can calculate the number of customers who tipped:\n    num_customers_who_tipped = num_customers - num_customers_who_did_not_tip\n    # Now, we can calculate the total amount of money the waiter earned:\n    total_amount_earned = num_customers_who_tipped * tip_amount\n    return total_amount_earned\nans = solver()", "answer": 15.0}
{"question": " A worksheet had 4 problems on it. If a teacher had 9 worksheets to grade and had already graded 5 of them, how many more problems does she have to grade? ", "executed": 16.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A worksheet had 4 problems on it. If a teacher had 9 worksheets to grade and had already graded 5 of them, how many more problems does she have to grade?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_problems_per_worksheet = 4\n    num_worksheets_to_grade = 9\n    num_worksheets_already_graded = 5\n    num_problems_already_graded = num_problems_per_worksheet * num_worksheets_already_graded\n    num_problems_to_grade = num_problems_per_worksheet * num_worksheets_to_grade\n    num_problems_remaining = num_problems_to_grade - num_problems_already_graded\n    return num_problems_remaining\nans = solver()", "answer": 16.0}
{"question": " Will invited 9 friends to a birthday party, but 4 couldn't come. If he wanted to buy enough cupcakes so each person could have exactly 8, how many should he buy? ", "executed": 40.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Will invited 9 friends to a birthday party, but 4 couldn't come. If he wanted to buy enough cupcakes so each person could have exactly 8, how many should he buy?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_friends = 9\n    num_cant_come = 4\n    num_cupcakes_per_person = 8\n    num_cupcakes_total = 0\n    num_cupcakes_total = num_friends - num_cant_come\n    num_cupcakes_total = num_cupcakes_total * num_cupcakes_per_person\n    return num_cupcakes_total\nans = solver()", "answer": 40.0}
{"question": " A magician was selling magic card decks for 9 dollars each. If he started with 12 decks and by the end of the day he had 7 left, how much money did he earn? ", "executed": 45.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A magician was selling magic card decks for 9 dollars each. If he started with 12 decks and by the end of the day he had 7 left, how much money did he earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    decks_sold = 12 - 7\n    # In the second step, we can define the following variable:\n    money_earned = decks_sold * 9\n    return money_earned\nans = solver()", "answer": 45.0}
{"question": " A chef needs to cook 9 potatoes. He has already cooked 7. If each potato takes 3 minutes to cook, how long will it take him to cook the rest? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A chef needs to cook 9 potatoes. He has already cooked 7. If each potato takes 3 minutes to cook, how long will it take him to cook the rest?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_potatoes = 9\n    cooked_potatoes = 7\n    time_per_potato = 3\n    # In the second step, we can calculate the number of potatoes that need to be cooked:\n    potatoes_to_cook = total_potatoes - cooked_potatoes\n    # In the third step, we can calculate the time needed to cook the remaining potatoes:\n    time_to_cook = potatoes_to_cook * time_per_potato\n    return time_to_cook\nans = solver()", "answer": 6.0}
{"question": " A magician was selling magic card decks for 5 dollars each. If he started with 14 decks and by the end of the day he had 5 left, how much money did he earn? ", "executed": 45.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A magician was selling magic card decks for 5 dollars each. If he started with 14 decks and by the end of the day he had 5 left, how much money did he earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    decks_sold = 14 - 5\n    # In the second step, we can define the following variable:\n    money_earned = decks_sold * 5\n    return money_earned\nans = solver()", "answer": 45.0}
{"question": " Each chocolate bar in a box cost $3. If a box had 9 bars total and Wendy sold all but 3 bars, how much money would she have made? ", "executed": 18.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Each chocolate bar in a box cost $3. If a box had 9 bars total and Wendy sold all but 3 bars, how much money would she have made?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    price_per_bar = 3\n    # In the second step, we can define the following variable:\n    total_bars = 9\n    # In the third step, we can define the following variable:\n    bars_sold = total_bars - 3\n    # In the fourth step, we can define the following variable:\n    total_price = price_per_bar * bars_sold\n    return total_price\nans = solver()", "answer": 18.0}
{"question": " A painter needed to paint 12 rooms in a building. Each room takes 3 hours to paint. If he already painted 4 rooms, how much longer will he take to paint the rest? ", "executed": 24.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A painter needed to paint 12 rooms in a building. Each room takes 3 hours to paint. If he already painted 4 rooms, how much longer will he take to paint the rest?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_rooms = 12\n    time_per_room = 3\n    rooms_painted = 4\n    # In the second step, we can calculate the following variable:\n    rooms_left = total_rooms - rooms_painted\n    time_left = rooms_left * time_per_room\n    return time_left\nans = solver()", "answer": 24.0}
{"question": " Adam bought 13 boxes of chocolate candy and gave 7 to his little brother. If each box has 6 pieces inside it, how many pieces did Adam still have? ", "executed": 36.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Adam bought 13 boxes of chocolate candy and gave 7 to his little brother. If each box has 6 pieces inside it, how many pieces did Adam still have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    box_of_chocolate = 13\n    box_of_chocolate_given_to_brother = 7\n    pieces_of_chocolate_in_each_box = 6\n    pieces_of_chocolate_given_to_brother = box_of_chocolate_given_to_brother * pieces_of_chocolate_in_each_box\n    pieces_of_chocolate_left = box_of_chocolate * pieces_of_chocolate_in_each_box - pieces_of_chocolate_given_to_brother\n    return pieces_of_chocolate_left\nans = solver()", "answer": 36.0}
{"question": " At a restaurant each adult meal costs $7 and kids eat free. If a group of 13 people came in and 9 were kids, how much would it cost for the group to eat? ", "executed": 28.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At a restaurant each adult meal costs $7 and kids eat free. If a group of 13 people came in and 9 were kids, how much would it cost for the group to eat?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    adult_meal_cost = 7\n    kids_meal_cost = 0\n    total_people = 13\n    kids_people = 9\n    adult_people = total_people - kids_people\n    total_cost = adult_meal_cost * adult_people + kids_meal_cost * kids_people\n    return total_cost\nans = solver()", "answer": 28.0}
{"question": " A trivia team had 7 members total, but during a game 2 members didn't show up. If each member that did show up scored 4 points, how many points were scored total? ", "executed": 20.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A trivia team had 7 members total, but during a game 2 members didn't show up. If each member that did show up scored 4 points, how many points were scored total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_members = 7\n    members_showed_up = total_members - 2\n    points_per_member = 4\n    total_points = members_showed_up * points_per_member\n    return total_points\nans = solver()", "answer": 20.0}
{"question": " Kaleb had 10 video games but 8 of them weren't working. If he wanted to sell the working games for $6 each, how much money could he earn? ", "executed": 48.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Kaleb had 10 video games but 8 of them weren't working. If he wanted to sell the working games for $6 each, how much money could he earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_games = 10\n    working_games = 8\n    price_per_game = 6\n    total_earning = working_games * price_per_game\n    return total_earning\nans = solver()", "answer": 12.0}
{"question": " April's discount flowers was having a sale where each rose was 7 dollars. If April started with 9 roses and had 4 roses left, how much money did she earn? ", "executed": 35.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: April's discount flowers was having a sale where each rose was 7 dollars. If April started with 9 roses and had 4 roses left, how much money did she earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    # 1. April's initial number of roses: 9\n    initial_roses = 9\n    # 2. April's final number of roses: 4\n    final_roses = 4\n    # 3. The price of each rose: 7\n    price_of_each_rose = 7\n    # 4. The number of roses sold: initial_roses - final_roses\n    number_of_roses_sold = initial_roses - final_roses\n    # 5. The total money earned: number_of_roses_sold * price_of_each_rose\n    total_money_earned = number_of_roses_sold * price_of_each_rose\n    return total_money_earned\nans = solver()", "answer": 35.0}
{"question": " At lunch a waiter had 9 customers and 5 of them didn't leave a tip. If he got $8 each from the ones who did tip, how much money did he earn? ", "executed": 32.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At lunch a waiter had 9 customers and 5 of them didn't leave a tip. If he got $8 each from the ones who did tip, how much money did he earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_customers = 9\n    num_customers_who_did_not_tip = 5\n    tip_per_customer = 8\n    # Now, we can calculate the number of customers who tipped:\n    num_customers_who_tipped = num_customers - num_customers_who_did_not_tip\n    # Now, we can calculate the total amount of money the waiter earned:\n    total_amount_earned = num_customers_who_tipped * tip_per_customer\n    return total_amount_earned\nans = solver()", "answer": 32.0}
{"question": " A new building needed 14 windows. The builder had already installed 8 of them. If it takes 8 hours to install each window, how long will it take him to install the rest? ", "executed": 48.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A new building needed 14 windows. The builder had already installed 8 of them. If it takes 8 hours to install each window, how long will it take him to install the rest?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_windows = 14\n    installed_windows = 8\n    time_per_window = 8\n    # In the second step, we can calculate the number of windows that need to be installed:\n    windows_to_install = total_windows - installed_windows\n    # In the third step, we can calculate the time needed to install the remaining windows:\n    time_to_install = windows_to_install * time_per_window\n    return time_to_install\nans = solver()", "answer": 48.0}
{"question": " Bianca earned 5 points for each bag of cans she recycled. If she had 17 bags, but didn't recycle 8 of them, how many points would she have earned? ", "executed": 45.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bianca earned 5 points for each bag of cans she recycled. If she had 17 bags, but didn't recycle 8 of them, how many points would she have earned?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    points_per_bag = 5\n    total_bags = 17\n    bags_not_recycled = 8\n    # In the second step, we can calculate the number of bags that were recycled:\n    bags_recycled = total_bags - bags_not_recycled\n    # In the third step, we can calculate the total number of points earned:\n    total_points = bags_recycled * points_per_bag\n    return total_points\nans = solver()", "answer": 45.0}
{"question": " A chef needs to cook 15 potatoes. He has already cooked 6. If each potato takes 8 minutes to cook, how long will it take him to cook the rest? ", "executed": 72.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A chef needs to cook 15 potatoes. He has already cooked 6. If each potato takes 8 minutes to cook, how long will it take him to cook the rest?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_potatoes = 15\n    cooked_potatoes = 6\n    time_per_potato = 8\n    # In the second step, we can calculate the number of potatoes that need to be cooked:\n    potatoes_to_cook = total_potatoes - cooked_potatoes\n    # In the third step, we can calculate the time needed to cook the remaining potatoes:\n    time_to_cook = potatoes_to_cook * time_per_potato\n    return time_to_cook\nans = solver()", "answer": 72.0}
{"question": " Henry had 3 action figures, but needed 8 total for a complete collection. If each one costs $6, how much money would he need to finish his collection? ", "executed": 30.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Henry had 3 action figures, but needed 8 total for a complete collection. If each one costs $6, how much money would he need to finish his collection?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_action_figures_needed = 8\n    cost_per_action_figure = 6\n    num_action_figures_owned = 3\n    num_action_figures_to_buy = num_action_figures_needed - num_action_figures_owned\n    cost_to_buy_action_figures = num_action_figures_to_buy * cost_per_action_figure\n    return cost_to_buy_action_figures\nans = solver()", "answer": 30.0}
{"question": " John earned 8 dollars for each lawn he mowed. If he had 15 lawns to mow, but forgot to mow 7 of them, how much money did he actually earn? ", "executed": 64.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: John earned 8 dollars for each lawn he mowed. If he had 15 lawns to mow, but forgot to mow 7 of them, how much money did he actually earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    lawns_to_mow = 15\n    lawns_forgot_to_mow = 7\n    money_earned_per_lawn = 8\n    # In the second step, we can calculate the number of lawns that John actually mowed:\n    lawns_actually_mowed = lawns_to_mow - lawns_forgot_to_mow\n    # In the third step, we can calculate the money that John actually earned:\n    money_actually_earned = lawns_actually_mowed * money_earned_per_lawn\n    # In the fourth step, we can return the answer:\n    return money_actually_earned\nans = solver()", "answer": 64.0}
{"question": " There were 10 friends playing a video game online when 7 players quit. If each player left had 8 lives, how many lives did they have total? ", "executed": 80.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 10 friends playing a video game online when 7 players quit. If each player left had 8 lives, how many lives did they have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_players = 10\n    num_players_left = 3\n    num_lives_per_player = 8\n    num_lives_left = num_players_left * num_lives_per_player\n    num_lives_total = num_lives_left + num_lives_per_player * (num_players - num_players_left)\n    return num_lives_total\nans = solver()", "answer": 24.0}
{"question": " In a video game, each enemy defeated gives you 8 points. If a level has 7 enemies total and you destroy all but 2 of them, how many points would you earn? ", "executed": 40.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In a video game, each enemy defeated gives you 8 points. If a level has 7 enemies total and you destroy all but 2 of them, how many points would you earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    points_per_enemy = 8\n    enemies_left = 2\n    enemies_total = 7\n    points_earned = 0\n    # Now, we can calculate the points earned by the following equation:\n    points_earned = (enemies_total - enemies_left) * points_per_enemy\n    return points_earned\nans = solver()", "answer": 40.0}
{"question": " A painter needed to paint 11 rooms in a building. Each room takes 7 hours to paint. If he already painted 2 rooms, how much longer will he take to paint the rest? ", "executed": 63.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A painter needed to paint 11 rooms in a building. Each room takes 7 hours to paint. If he already painted 2 rooms, how much longer will he take to paint the rest?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_rooms = 11\n    time_per_room = 7\n    rooms_painted = 2\n    # In the second step, we can calculate the following variable:\n    rooms_left = total_rooms - rooms_painted\n    time_left = rooms_left * time_per_room\n    return time_left\nans = solver()", "answer": 63.0}
{"question": " Dave had 10 video games but 2 of them weren't working. If he wanted to sell the working games for $4 each, how much money could he earn? ", "executed": 32.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Dave had 10 video games but 2 of them weren't working. If he wanted to sell the working games for $4 each, how much money could he earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_games = 10\n    broken_games = 2\n    price_per_game = 4\n    working_games = total_games - broken_games\n    total_price = working_games * price_per_game\n    return total_price\nans = solver()", "answer": 32.0}
{"question": " A worksheet had 4 problems on it. If a teacher had 16 worksheets to grade and had already graded 8 of them, how many more problems does she have to grade? ", "executed": 32.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A worksheet had 4 problems on it. If a teacher had 16 worksheets to grade and had already graded 8 of them, how many more problems does she have to grade?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_problems_per_worksheet = 4\n    num_worksheets_to_grade = 16\n    num_worksheets_graded = 8\n    num_problems_graded = num_worksheets_graded * num_problems_per_worksheet\n    num_problems_to_grade = num_worksheets_to_grade * num_problems_per_worksheet\n    num_problems_remaining = num_problems_to_grade - num_problems_graded\n    return num_problems_remaining\nans = solver()", "answer": 32.0}
{"question": " A worksheet had 2 problems on it. If a teacher had 14 worksheets to grade and had already graded 7 of them, how many more problems does she have to grade? ", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A worksheet had 2 problems on it. If a teacher had 14 worksheets to grade and had already graded 7 of them, how many more problems does she have to grade?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_worksheets = 14\n    worksheets_graded = 7\n    problems_per_worksheet = 2\n    problems_graded = worksheets_graded * problems_per_worksheet\n    problems_remaining = total_worksheets * problems_per_worksheet - problems_graded\n    return problems_remaining\nans = solver()", "answer": 14.0}
{"question": " April's discount flowers was having a sale where each rose was 4 dollars. If April started with 13 roses and had 4 roses left, how much money did she earn? ", "executed": 36.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: April's discount flowers was having a sale where each rose was 4 dollars. If April started with 13 roses and had 4 roses left, how much money did she earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    # 1. April's initial number of roses: 13\n    # 2. April's final number of roses: 4\n    # 3. The price of each rose: 4\n    initial_roses = 13\n    final_roses = 4\n    price_per_rose = 4\n    # In the second step, we can calculate the number of roses sold:\n    roses_sold = initial_roses - final_roses\n    # In the third step, we can calculate the total money earned:\n    total_money_earned = roses_sold * price_per_rose\n    return total_money_earned\nans = solver()", "answer": 36.0}
{"question": " At a restaurant each adult meal costs $5 and kids eat free. If a group of 15 people came in and 8 were kids, how much would it cost for the group to eat? ", "executed": 35.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At a restaurant each adult meal costs $5 and kids eat free. If a group of 15 people came in and 8 were kids, how much would it cost for the group to eat?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    adult_meal_cost = 5\n    kids_meal_cost = 0\n    total_people = 15\n    kids_count = 8\n    adult_count = total_people - kids_count\n    total_cost = adult_count * adult_meal_cost + kids_count * kids_meal_cost\n    return total_cost\nans = solver()", "answer": 35.0}
{"question": " Zoe baked 5 brownies, but needed 11 total for her party. If she used 7 cups of flour on each one, how much cups of flour does she still need? ", "executed": 42.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Zoe baked 5 brownies, but needed 11 total for her party. If she used 7 cups of flour on each one, how much cups of flour does she still need?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    brownies_baked = 5\n    brownies_needed = 11\n    cups_per_brownie = 7\n    cups_needed = (brownies_needed - brownies_baked) * cups_per_brownie\n    return cups_needed\nans = solver()", "answer": 42.0}
{"question": " A painter needed to paint 6 rooms in a building. Each room takes 5 hours to paint. If he already painted 2 rooms, how much longer will he take to paint the rest? ", "executed": 20.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A painter needed to paint 6 rooms in a building. Each room takes 5 hours to paint. If he already painted 2 rooms, how much longer will he take to paint the rest?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_rooms = 6\n    time_per_room = 5\n    rooms_painted = 2\n    # In the second step, we can calculate the following variable:\n    rooms_left = total_rooms - rooms_painted\n    time_left = rooms_left * time_per_room\n    return time_left\nans = solver()", "answer": 20.0}
{"question": " Each chocolate bar in a box cost $4. If a box had 11 bars total and Vanessa sold all but 7 bars, how much money would she have made? ", "executed": 16.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Each chocolate bar in a box cost $4. If a box had 11 bars total and Vanessa sold all but 7 bars, how much money would she have made?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cost_of_each_bar = 4\n    # In the second step, we can define the following variable:\n    total_bars_in_a_box = 11\n    # In the third step, we can define the following variable:\n    bars_sold = total_bars_in_a_box - 7\n    # In the fourth step, we can define the following variable:\n    money_made = bars_sold * cost_of_each_bar\n    return money_made\nans = solver()", "answer": 16.0}
{"question": " Gwen earned 8 points for each bag of cans she recycled. If she had 4 bags, but didn't recycle 2 of them, how many points would she have earned? ", "executed": 16.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Gwen earned 8 points for each bag of cans she recycled. If she had 4 bags, but didn't recycle 2 of them, how many points would she have earned?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    points_per_bag = 8\n    number_of_bags = 4\n    number_of_bags_not_recycled = 2\n    # In the second step, we can calculate the number of bags recycled:\n    number_of_bags_recycled = number_of_bags - number_of_bags_not_recycled\n    # In the third step, we can calculate the number of points earned:\n    number_of_points_earned = number_of_bags_recycled * points_per_bag\n    return number_of_points_earned\nans = solver()", "answer": 16.0}
{"question": " A new building needed 12 windows. The builder had already installed 6 of them. If it takes 4 hours to install each window, how long will it take him to install the rest? ", "executed": 24.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A new building needed 12 windows. The builder had already installed 6 of them. If it takes 4 hours to install each window, how long will it take him to install the rest?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_windows = 12\n    installed_windows = 6\n    time_per_window = 4\n    # In the second step, we can calculate the number of windows that need to be installed:\n    windows_to_install = total_windows - installed_windows\n    # In the third step, we can calculate the time needed to install the rest of the windows:\n    time_to_install = windows_to_install * time_per_window\n    return time_to_install\nans = solver()", "answer": 24.0}
{"question": " A chef needs to cook 15 potatoes. He has already cooked 8. If each potato takes 9 minutes to cook, how long will it take him to cook the rest? ", "executed": 63.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A chef needs to cook 15 potatoes. He has already cooked 8. If each potato takes 9 minutes to cook, how long will it take him to cook the rest?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_potatoes = 15\n    cooked_potatoes = 8\n    time_per_potato = 9\n    # In the second step, we can calculate the number of potatoes that need to be cooked:\n    potatoes_to_cook = total_potatoes - cooked_potatoes\n    # In the third step, we can calculate the time needed to cook the remaining potatoes:\n    time_to_cook = potatoes_to_cook * time_per_potato\n    return time_to_cook\nans = solver()", "answer": 63.0}
{"question": " A trivia team had 14 members total, but during a game 7 members didn't show up. If each member that did show up scored 5 points, how many points were scored total? ", "executed": 35.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A trivia team had 14 members total, but during a game 7 members didn't show up. If each member that did show up scored 5 points, how many points were scored total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_members = 14\n    members_showed_up = total_members - 7\n    points_per_member = 5\n    total_points = members_showed_up * points_per_member\n    return total_points\nans = solver()", "answer": 35.0}
{"question": " A chef needs to cook 13 potatoes. He has already cooked 5. If each potato takes 6 minutes to cook, how long will it take him to cook the rest? ", "executed": 48.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A chef needs to cook 13 potatoes. He has already cooked 5. If each potato takes 6 minutes to cook, how long will it take him to cook the rest?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_potatoes = 13\n    cooked_potatoes = 5\n    time_per_potato = 6\n    # In the second step, we can calculate the number of potatoes that need to be cooked:\n    potatoes_to_cook = total_potatoes - cooked_potatoes\n    # In the third step, we can calculate the time needed to cook the remaining potatoes:\n    time_to_cook = potatoes_to_cook * time_per_potato\n    return time_to_cook\nans = solver()", "answer": 48.0}
{"question": " A trivia team had 11 members total, but during a game 6 members didn't show up. If each member that did show up scored 9 points, how many points were scored total? ", "executed": 45.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A trivia team had 11 members total, but during a game 6 members didn't show up. If each member that did show up scored 9 points, how many points were scored total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_members = 11\n    members_showed_up = total_members - 6\n    points_per_member = 9\n    total_points = members_showed_up * points_per_member\n    return total_points\nans = solver()", "answer": 45.0}
{"question": " Each chocolate bar in a box cost $2. If a box had 13 bars total and Rachel sold all but 4 bars, how much money would she have made? ", "executed": 18.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Each chocolate bar in a box cost $2. If a box had 13 bars total and Rachel sold all but 4 bars, how much money would she have made?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cost_of_each_bar = 2\n    # In the second step, we can define the following variable:\n    total_bars_in_a_box = 13\n    # In the third step, we can define the following variable:\n    bars_sold = total_bars_in_a_box - 4\n    # In the fourth step, we can define the following variable:\n    money_made = cost_of_each_bar * bars_sold\n    return money_made\nans = solver()", "answer": 18.0}
{"question": " Isabel baked 3 brownies, but needed 5 total for her party. If she used 5 cups of flour on each one, how much cups of flour does she still need? ", "executed": 10.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Isabel baked 3 brownies, but needed 5 total for her party. If she used 5 cups of flour on each one, how much cups of flour does she still need?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    brownies_needed = 5\n    brownies_baked = 3\n    cups_per_brownie = 5\n    cups_needed = brownies_needed * cups_per_brownie\n    cups_baked = brownies_baked * cups_per_brownie\n    cups_still_needed = cups_needed - cups_baked\n    return cups_still_needed\nans = solver()", "answer": 10.0}
{"question": " A worksheet had 3 problems on it. If a teacher had 15 worksheets to grade and had already graded 7 of them, how many more problems does she have to grade? ", "executed": 0.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A worksheet had 3 problems on it. If a teacher had 15 worksheets to grade and had already graded 7 of them, how many more problems does she have to grade?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_worksheets = 15\n    total_problems = 3\n    graded_worksheets = 7\n    graded_problems = total_problems * graded_worksheets\n    ungraded_worksheets = total_worksheets - graded_worksheets\n    ungraded_problems = total_problems * ungraded_worksheets\n    total_problems = total_problems * total_worksheets\n    total_problems_graded = graded_problems + ungraded_problems\n    total_problems_left = total_problems - total_problems_graded\n    return total_problems_left\nans = solver()", "answer": 24.0}
{"question": " At lunch a waiter had 7 customers and 4 of them didn't leave a tip. If he got $9 each from the ones who did tip, how much money did he earn? ", "executed": 27.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At lunch a waiter had 7 customers and 4 of them didn't leave a tip. If he got $9 each from the ones who did tip, how much money did he earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_customers = 7\n    num_customers_who_did_not_tip = 4\n    money_earned_from_each_customer_who_did_tip = 9\n    # In the second step, we can calculate the following variable:\n    num_customers_who_did_tip = num_customers - num_customers_who_did_not_tip\n    # In the third step, we can calculate the following variable:\n    money_earned_from_each_customer_who_did_tip = money_earned_from_each_customer_who_did_tip\n    # In the fourth step, we can calculate the following variable:\n    money_earned_from_all_customers_who_did_tip = num_customers_who_did_tip * money_earned_from_each_customer_who_did_tip\n    # In the fifth step, we can calculate the following variable:\n    money_earned_from_all_customers = money_earned_from_all_customers_who_did_tip\n    # In the sixth step, we can return the following variable:\n    return money_earned_from_all_customers\nans = solver()", "answer": 27.0}
{"question": " April's discount flowers was having a sale where each rose was 9 dollars. If April started with 11 roses and had 8 roses left, how much money did she earn? ", "executed": 27.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: April's discount flowers was having a sale where each rose was 9 dollars. If April started with 11 roses and had 8 roses left, how much money did she earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    rose_price = 9\n    rose_start = 11\n    rose_end = 8\n    # In the second step, we can calculate the number of roses sold:\n    rose_sold = rose_start - rose_end\n    # In the third step, we can calculate the money earned:\n    money_earned = rose_sold * rose_price\n    return money_earned\nans = solver()", "answer": 27.0}
{"question": " Tom bought 14 boxes of chocolate candy and gave 8 to his little brother. If each box has 3 pieces inside it, how many pieces did Tom still have? ", "executed": 18.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Tom bought 14 boxes of chocolate candy and gave 8 to his little brother. If each box has 3 pieces inside it, how many pieces did Tom still have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_boxes_bought = 14\n    num_boxes_given = 8\n    num_pieces_per_box = 3\n    num_pieces_left = num_boxes_bought * num_pieces_per_box - num_boxes_given * num_pieces_per_box\n    return num_pieces_left\nans = solver()", "answer": 18.0}
{"question": " At a restaurant each adult meal costs $2 and kids eat free. If a group of 15 people came in and 9 were kids, how much would it cost for the group to eat? ", "executed": 12.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At a restaurant each adult meal costs $2 and kids eat free. If a group of 15 people came in and 9 were kids, how much would it cost for the group to eat?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    adult_meal_cost = 2\n    kids_meal_cost = 0\n    total_people = 15\n    kids_count = 9\n    adult_count = total_people - kids_count\n    total_cost = adult_count * adult_meal_cost + kids_count * kids_meal_cost\n    return total_cost\nans = solver()", "answer": 12.0}
{"question": " Edward earned 4 dollars for each lawn he mowed. If he had 17 lawns to mow, but forgot to mow 9 of them, how much money did he actually earn? ", "executed": 32.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Edward earned 4 dollars for each lawn he mowed. If he had 17 lawns to mow, but forgot to mow 9 of them, how much money did he actually earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    lawns_to_mow = 17\n    lawns_forgot_to_mow = 9\n    money_earned_per_lawn = 4\n    # In the second step, we can calculate the number of lawns that Edward actually mowed:\n    lawns_actually_mowed = lawns_to_mow - lawns_forgot_to_mow\n    # In the third step, we can calculate the money that Edward actually earned:\n    money_actually_earned = lawns_actually_mowed * money_earned_per_lawn\n    # In the fourth step, we can return the answer:\n    return money_actually_earned\nans = solver()", "answer": 32.0}
{"question": " A new building needed 11 windows. The builder had already installed 4 of them. If it takes 8 hours to install each window, how long will it take him to install the rest? ", "executed": 56.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A new building needed 11 windows. The builder had already installed 4 of them. If it takes 8 hours to install each window, how long will it take him to install the rest?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_windows = 11\n    installed_windows = 4\n    time_per_window = 8\n    # In the second step, we can calculate the number of windows that need to be installed:\n    windows_to_install = total_windows - installed_windows\n    # In the third step, we can calculate the time needed to install the rest of the windows:\n    time_to_install = windows_to_install * time_per_window\n    return time_to_install\nans = solver()", "answer": 56.0}
{"question": " Tom bought 12 boxes of chocolate candy and gave 7 to his little brother. If each box has 6 pieces inside it, how many pieces did Tom still have? ", "executed": 65.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Tom bought 12 boxes of chocolate candy and gave 7 to his little brother. If each box has 6 pieces inside it, how many pieces did Tom still have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_boxes = 12\n    num_pieces_per_box = 6\n    num_pieces_given_to_brother = 7\n    num_pieces_remaining = num_boxes * num_pieces_per_box - num_pieces_given_to_brother\n    return num_pieces_remaining\nans = solver()", "answer": 30.0}
{"question": " John had 6 action figures, but needed 11 total for a complete collection. If each one costs $6, how much money would he need to finish his collection? ", "executed": 30.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: John had 6 action figures, but needed 11 total for a complete collection. If each one costs $6, how much money would he need to finish his collection?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_action_figures_needed = 11\n    cost_per_action_figure = 6\n    num_action_figures_owned = 6\n    num_action_figures_to_buy = num_action_figures_needed - num_action_figures_owned\n    cost_to_buy_action_figures = num_action_figures_to_buy * cost_per_action_figure\n    return cost_to_buy_action_figures\nans = solver()", "answer": 30.0}
{"question": " At a restaurant each adult meal costs $8 and kids eat free. If a group of 11 people came in and 2 were kids, how much would it cost for the group to eat? ", "executed": 72.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At a restaurant each adult meal costs $8 and kids eat free. If a group of 11 people came in and 2 were kids, how much would it cost for the group to eat?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    adult_meal_cost = 8\n    kids_meal_cost = 0\n    total_people = 11\n    kids_count = 2\n    adult_count = total_people - kids_count\n    total_cost = adult_count * adult_meal_cost + kids_count * kids_meal_cost\n    return total_cost\nans = solver()", "answer": 72.0}
{"question": " At the fair Kaleb bought 6 tickets. After riding the ferris wheel he had 3 tickets left. If each ticket cost 9 dollars, how much money did Kaleb spend riding the ferris wheel? ", "executed": 27.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the fair Kaleb bought 6 tickets. After riding the ferris wheel he had 3 tickets left. If each ticket cost 9 dollars, how much money did Kaleb spend riding the ferris wheel?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    tickets_bought = 6\n    tickets_left = 3\n    ticket_cost = 9\n    # In the second step, we can calculate the number of tickets used:\n    tickets_used = tickets_bought - tickets_left\n    # In the third step, we can calculate the money spent:\n    money_spent = tickets_used * ticket_cost\n    return money_spent\nans = solver()", "answer": 27.0}
{"question": " Tiffany baked 8 brownies, but needed 17 total for her party. If she used 8 cups of flour on each one, how much cups of flour does she still need? ", "executed": 72.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Tiffany baked 8 brownies, but needed 17 total for her party. If she used 8 cups of flour on each one, how much cups of flour does she still need?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    brownies_baked = 8\n    brownies_needed = 17\n    cups_per_brownie = 8\n    cups_needed = brownies_needed * cups_per_brownie\n    cups_baked = brownies_baked * cups_per_brownie\n    cups_left = cups_needed - cups_baked\n    return cups_left\nans = solver()", "answer": 72.0}
{"question": " In a video game, each enemy defeated gives you 7 points. If a level has 11 enemies total and you destroy all but 8 of them, how many points would you earn? ", "executed": 21.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: In a video game, each enemy defeated gives you 7 points. If a level has 11 enemies total and you destroy all but 8 of them, how many points would you earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    points_per_enemy = 7\n    enemies_left = 8\n    enemies_total = 11\n    points_earned = 0\n    # Now, we can calculate the points earned by the following equation:\n    points_earned = points_per_enemy * (enemies_total - enemies_left)\n    return points_earned\nans = solver()", "answer": 21.0}
{"question": " A magician was selling magic card decks for 7 dollars each. If he started with 16 decks and by the end of the day he had 8 left, how much money did he earn? ", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: A magician was selling magic card decks for 7 dollars each. If he started with 16 decks and by the end of the day he had 8 left, how much money did he earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    # 1. The number of decks sold in the first step\n    num_decks_sold_first_step = 0\n    # 2. The number of decks left after the first step\n    num_decks_left_first_step = 16\n    # 3. The amount of money earned in the first step\n    money_earned_first_step = 0\n    # 4. The amount of money earned in total\n    money_earned_total = 0\n    # 5. The number of steps\n    num_steps = 0\n    # 6. The number of decks sold in total\n    num_decks_sold_total = 0\n    # 7. The number of decks left in total\n    num_decks_left_total = 16\n    # 8. The price of each deck\n    price_each_deck = 7\n    # 9. The number of decks sold in the last step\n    num_decks_sold_last_step = 0\n    # 10. The number of decks left in the last step\n    num_decks_left_last_step = 8\n    # 11. The amount of money earned in the last step\n    money_earned_last_step = 0\n    # 12. The number of steps to reach the last step\n    num_steps_to_reach_last_step = 0\n    # 13.\nans = solver()", "answer": 56.0}
{"question": " There were 13 friends playing a video game online when 8 players quit. If each player left had 6 lives, how many lives did they have total? ", "executed": 30.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 13 friends playing a video game online when 8 players quit. If each player left had 6 lives, how many lives did they have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_lives = 0\n    # In the second step, we can define the following variable:\n    total_players = 13\n    # In the third step, we can define the following variable:\n    players_left = 8\n    # In the fourth step, we can define the following variable:\n    lives_per_player = 6\n    # In the fifth step, we can define the following variable:\n    total_lives = total_players * lives_per_player\n    # In the sixth step, we can define the following variable:\n    total_lives = total_lives - (players_left * lives_per_player)\n    return total_lives\nans = solver()", "answer": 30.0}
{"question": " At lunch a waiter had 7 customers and 5 of them didn't leave a tip. If he got $3 each from the ones who did tip, how much money did he earn? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At lunch a waiter had 7 customers and 5 of them didn't leave a tip. If he got $3 each from the ones who did tip, how much money did he earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_customers = 7\n    num_customers_who_did_not_tip = 5\n    tip_amount = 3\n    # Now, we can calculate the number of customers who tipped:\n    num_customers_who_tipped = num_customers - num_customers_who_did_not_tip\n    # Now, we can calculate the total amount of money the waiter earned:\n    total_amount_earned = num_customers_who_tipped * tip_amount\n    return total_amount_earned\nans = solver()", "answer": 6.0}
{"question": " At the fair Adam bought 10 tickets. After riding the ferris wheel he had 3 tickets left. If each ticket cost 9 dollars, how much money did Adam spend riding the ferris wheel? ", "executed": 63.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At the fair Adam bought 10 tickets. After riding the ferris wheel he had 3 tickets left. If each ticket cost 9 dollars, how much money did Adam spend riding the ferris wheel?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    tickets_bought = 10\n    tickets_left = 3\n    ticket_cost = 9\n    # In the second step, we can calculate the number of tickets used:\n    tickets_used = tickets_bought - tickets_left\n    # In the third step, we can calculate the money spent:\n    money_spent = tickets_used * ticket_cost\n    return money_spent\nans = solver()", "answer": 63.0}
{"question": " A worksheet had 7 problems on it. If a teacher had 17 worksheets to grade and had already graded 8 of them, how many more problems does she have to grade? ", "executed": 119.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A worksheet had 7 problems on it. If a teacher had 17 worksheets to grade and had already graded 8 of them, how many more problems does she have to grade?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_worksheets = 17\n    num_graded = 8\n    num_problems = 7\n    num_problems_graded = num_graded * num_problems\n    num_problems_ungraded = (num_worksheets - num_graded) * num_problems\n    num_problems_total = num_problems_graded + num_problems_ungraded\n    return num_problems_total\nans = solver()", "answer": 63.0}
{"question": " A trivia team had 9 members total, but during a game 3 members didn't show up. If each member that did show up scored 2 points, how many points were scored total? ", "executed": 12.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A trivia team had 9 members total, but during a game 3 members didn't show up. If each member that did show up scored 2 points, how many points were scored total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_members = 9\n    members_showed_up = total_members - 3\n    points_per_member = 2\n    total_points = members_showed_up * points_per_member\n    return total_points\nans = solver()", "answer": 12.0}
{"question": " Mike had 15 video games but 9 of them weren't working. If he wanted to sell the working games for $5 each, how much money could he earn? ", "executed": 45.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mike had 15 video games but 9 of them weren't working. If he wanted to sell the working games for $5 each, how much money could he earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_games = 15\n    working_games = 9\n    price_per_game = 5\n    total_earning = working_games * price_per_game\n    return total_earning\nans = solver()", "answer": 30.0}
{"question": " Edward earned 9 dollars for each lawn he mowed. If he had 6 lawns to mow, but forgot to mow 2 of them, how much money did he actually earn? ", "executed": 36.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Edward earned 9 dollars for each lawn he mowed. If he had 6 lawns to mow, but forgot to mow 2 of them, how much money did he actually earn?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    lawns_to_mow = 6\n    lawns_mowed = 4\n    dollars_per_lawn = 9\n    dollars_earned = lawns_mowed * dollars_per_lawn\n    return dollars_earned\nans = solver()", "answer": 36.0}
{"question": " At a restaurant each adult meal costs $2 and kids eat free. If a group of 9 people came in and 2 were kids, how much would it cost for the group to eat? ", "executed": 14.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: At a restaurant each adult meal costs $2 and kids eat free. If a group of 9 people came in and 2 were kids, how much would it cost for the group to eat?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    adult_meal_cost = 2\n    kids_meal_cost = 0\n    total_people = 9\n    kids_count = 2\n    adult_count = total_people - kids_count\n    total_cost = adult_count * adult_meal_cost + kids_count * kids_meal_cost\n    return total_cost\nans = solver()", "answer": 14.0}
{"question": " Chloe baked 7 brownies, but needed 16 total for her party. If she used 6 cups of flour on each one, how much cups of flour does she still need? ", "executed": 54.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Chloe baked 7 brownies, but needed 16 total for her party. If she used 6 cups of flour on each one, how much cups of flour does she still need?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    brownies_needed = 16\n    brownies_baked = 7\n    flour_per_brownie = 6\n    brownies_to_bake = brownies_needed - brownies_baked\n    flour_needed = brownies_to_bake * flour_per_brownie\n    return flour_needed\nans = solver()", "answer": 54.0}
{"question": " There were 8 friends playing a video game online when 3 players quit. If each player left had 3 lives, how many lives did they have total? ", "executed": 24.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There were 8 friends playing a video game online when 3 players quit. If each player left had 3 lives, how many lives did they have total?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_players = 8\n    num_players_left = 5\n    num_lives_per_player = 3\n    num_lives_left = num_players_left * num_lives_per_player\n    num_lives_total = num_lives_left + num_lives_per_player * (num_players - num_players_left)\n    return num_lives_total\nans = solver()", "answer": 15.0}
{"question": " Sam invited 9 friends to a birthday party, but 6 couldn't come. If he wanted to buy enough cupcakes so each person could have exactly 2, how many should he buy? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Sam invited 9 friends to a birthday party, but 6 couldn't come. If he wanted to buy enough cupcakes so each person could have exactly 2, how many should he buy?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_friends = 9\n    num_cannot_come = 6\n    num_can_come = num_friends - num_cannot_come\n    num_cupcakes_per_person = 2\n    num_cupcakes_needed = num_can_come * num_cupcakes_per_person\n    return num_cupcakes_needed\nans = solver()", "answer": 6.0}
{"question": " Megan earned 8 points for each bag of cans she recycled. If she had 14 bags, but didn't recycle 5 of them, how many points would she have earned? ", "executed": 72.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Megan earned 8 points for each bag of cans she recycled. If she had 14 bags, but didn't recycle 5 of them, how many points would she have earned?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    points_per_bag = 8\n    total_bags = 14\n    bags_not_recycled = 5\n    # In the second step, we can calculate the number of bags recycled:\n    bags_recycled = total_bags - bags_not_recycled\n    # In the third step, we can calculate the total points earned:\n    total_points = bags_recycled * points_per_bag\n    return total_points\nans = solver()", "answer": 72.0}
{"question": " Will had 57 dollars. If he spent 27 bucks on a new game, how many 6 dollar toys could he buy with the money he had left? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Will had 57 dollars. If he spent 27 bucks on a new game, how many 6 dollar toys could he buy with the money he had left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    money_had = 57\n    money_spent = 27\n    toy_price = 6\n    money_left = money_had - money_spent\n    num_toys = money_left // toy_price\n    return num_toys\nans = solver()", "answer": 5.0}
{"question": " A pet store had 18 puppies. In one day they sold 3 of them and put the rest into cages with 5 in each cage. How many cages did they use? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet store had 18 puppies. In one day they sold 3 of them and put the rest into cages with 5 in each cage. How many cages did they use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    puppies = 18\n    sold = 3\n    cages = 0\n    puppies_left = puppies - sold\n    cages = puppies_left / 5\n    return cages\nans = solver()", "answer": 3.0}
{"question": " Luke had 47 pieces of clothing to wash. He put 17 of them in one load, but decided to split the rest into 5 equal loads. How many pieces of clothing could go in each of the small loads? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Luke had 47 pieces of clothing to wash. He put 17 of them in one load, but decided to split the rest into 5 equal loads. How many pieces of clothing could go in each of the small loads?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_clothes = 47\n    clothes_in_first_load = 17\n    number_of_small_loads = 5\n    clothes_in_each_small_load = 0\n    # Now, we can calculate the clothes_in_each_small_load by using the above variables\n    clothes_in_each_small_load = (total_clothes - clothes_in_first_load) / number_of_small_loads\n    return clothes_in_each_small_load\nans = solver()", "answer": 6.0}
{"question": " Edward bought 79 tickets at the state fair. He spent 23 tickets at the 'dunk a clown' booth and decided to use the rest on rides. If each ride cost 7 tickets, how many rides could he go on? ", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Edward bought 79 tickets at the state fair. He spent 23 tickets at the 'dunk a clown' booth and decided to use the rest on rides. If each ride cost 7 tickets, how many rides could he go on?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_tickets_bought = 79\n    num_tickets_spent_at_dunk_a_clown = 23\n    num_tickets_spent_on_rides = 7\n    num_rides = 0\n    num_tickets_left = 0\n    num_tickets_left = num_tickets_bought - num_tickets_spent_at_dunk_a_clown\n    num_rides = num_tickets_left / num_tickets_spent_on_rides\n    return num_rides\nans = solver()", "answer": 8.0}
{"question": " Katie baked 18 cupcakes for her school's bake sale. If her brother, Todd, ate 8 of them how many packages could she make if she put 2 cupcake in each package? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Katie baked 18 cupcakes for her school's bake sale. If her brother, Todd, ate 8 of them how many packages could she make if she put 2 cupcake in each package?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cupcakes_baked = 18\n    cupcakes_eaten = 8\n    cupcakes_per_package = 2\n    # In the second step, we can calculate the number of cupcakes left:\n    cupcakes_left = cupcakes_baked - cupcakes_eaten\n    # In the third step, we can calculate the number of packages:\n    packages = cupcakes_left / cupcakes_per_package\n    return packages\nans = solver()", "answer": 5.0}
{"question": " Megan had 93 files on her computer. She deleted 21 of them and put the rest into folders with 8 files in each one. How many folders did Megan end up with? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Megan had 93 files on her computer. She deleted 21 of them and put the rest into folders with 8 files in each one. How many folders did Megan end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_files = 93\n    deleted_files = 21\n    files_in_each_folder = 8\n    # In the second step, we can calculate the number of files left after deleting 21 files:\n    files_left = total_files - deleted_files\n    # In the third step, we can calculate the number of folders:\n    folders = math.ceil(files_left / files_in_each_folder)\n    return folders\nans = solver()", "answer": 9.0}
{"question": " Wendy uploaded 79 pictures to Facebook. She put 44 pics into one album and put the rest into 5 different albums. How many pictures were in each album? ", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Wendy uploaded 79 pictures to Facebook. She put 44 pics into one album and put the rest into 5 different albums. How many pictures were in each album?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_pics = 79\n    album_1 = 44\n    album_2 = ?\n    album_3 = ?\n    album_4 = ?\n    album_5 = ?\n    album_6 = ?\n    return album_2, album_3, album_4, album_5, album_6\nans = solver()", "answer": 7.0}
{"question": " Isabel had 72 homework problems. She finished 32 of them but still had 5 pages of problems to do. If each page has the same number of problems on it, how many problems are on each page? ", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Isabel had 72 homework problems. She finished 32 of them but still had 5 pages of problems to do. If each page has the same number of problems on it, how many problems are on each page?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_problems = 72\n    finished_problems = 32\n    remaining_pages = 5\n    # In the second step, we can calculate the number of problems on each page:\n    problems_per_page = (total_problems - finished_problems) / remaining_pages\n    return problems_per_page\nans = solver()", "answer": 8.0}
{"question": " The cafeteria had 62 apples. For lunch they handed out 8 to students and decided to use the rest to make pies. If each pie takes 9 apples, how many pies could they make? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The cafeteria had 62 apples. For lunch they handed out 8 to students and decided to use the rest to make pies. If each pie takes 9 apples, how many pies could they make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    apples_left = 62\n    apples_left = apples_left - 8\n    print(apples_left)\n    pies = apples_left / 9\n    print(pies)\n    return pies\nans = solver()", "answer": 6.0}
{"question": " Mike made 101 dollars mowing lawns over the summer. If he spent 47 dollars buying new mower blades, how many 6 dollar games could he buy with the money he had left? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mike made 101 dollars mowing lawns over the summer. If he spent 47 dollars buying new mower blades, how many 6 dollar games could he buy with the money he had left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    mike_made = 101\n    mike_spent = 47\n    game_cost = 6\n    # In the second step, we can calculate the money left:\n    mike_left = mike_made - mike_spent\n    # In the third step, we can calculate the number of games Mike can buy:\n    num_games = mike_left // game_cost\n    return num_games\nans = solver()", "answer": 9.0}
{"question": " Paige's team won their dodgeball game and scored 41 points total. If Paige scored 11 of the points and everyone else scored 6 points each, how many players were on her team? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paige's team won their dodgeball game and scored 41 points total. If Paige scored 11 of the points and everyone else scored 6 points each, how many players were on her team?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_points = 41\n    paige_points = 11\n    other_points = 6\n    # In the second step, we can define the following variable:\n    paige_team_members = paige_points / other_points\n    # In the third step, we can define the following variable:\n    total_team_members = total_points / other_points\n    # In the fourth step, we can define the following variable:\n    team_members = total_team_members - paige_team_members\n    return team_members\nans = solver()", "answer": 5.0}
{"question": " Oliver is at the library helping put away books. There are 46 book to put away total but a librarian takes 10 of them and leaves Oliver with the rest. If he can fit 4 books on a shelf, how many shelves will he need? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Oliver is at the library helping put away books. There are 46 book to put away total but a librarian takes 10 of them and leaves Oliver with the rest. If he can fit 4 books on a shelf, how many shelves will he need?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_books = 46\n    books_taken = 10\n    books_left = total_books - books_taken\n    books_per_shelf = 4\n    shelves_needed = math.ceil(books_left / books_per_shelf)\n    return shelves_needed\nans = solver()", "answer": 9.0}
{"question": " Emily was planting vegetables in her garden. She started with 41 seeds and planted 29 of them in the big garden and in each of her small gardens put 4 seeds each. How many small gardens did Emily have? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Emily was planting vegetables in her garden. She started with 41 seeds and planted 29 of them in the big garden and in each of her small gardens put 4 seeds each. How many small gardens did Emily have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    big_garden = 29\n    small_garden = 4\n    total_seeds = 41\n    # In the second step, we can calculate the number of small gardens:\n    num_small_gardens = (total_seeds - big_garden) / small_garden\n    return num_small_gardens\nans = solver()", "answer": 3.0}
{"question": " Edward made 37 dollars mowing lawns over the summer. If he spent 21 dollars buying new mower blades, how many 2 dollar games could he buy with the money he had left? ", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Edward made 37 dollars mowing lawns over the summer. If he spent 21 dollars buying new mower blades, how many 2 dollar games could he buy with the money he had left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    money_earned = 37\n    money_spent = 21\n    game_price = 2\n    money_left = money_earned - money_spent\n    games_bought = money_left / game_price\n    return games_bought\nans = solver()", "answer": 8.0}
{"question": " A pet store had 81 puppies. In one day they sold 41 of them and put the rest into cages with 8 in each cage. How many cages did they use? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet store had 81 puppies. In one day they sold 41 of them and put the rest into cages with 8 in each cage. How many cages did they use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    puppies_sold = 41\n    puppies_left = 81 - puppies_sold\n    puppies_per_cage = 8\n    cages_used = puppies_left / puppies_per_cage\n    return cages_used\nans = solver()", "answer": 5.0}
{"question": " There are 65 students trying out for the school's trivia teams. If 17 of them didn't get picked for the team and the rest were put into 8 groups, how many students would be in each group? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 65 students trying out for the school's trivia teams. If 17 of them didn't get picked for the team and the rest were put into 8 groups, how many students would be in each group?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_students = 65\n    students_not_picked = 17\n    total_groups = 8\n    # Now, we can calculate the number of students picked for the team:\n    students_picked = total_students - students_not_picked\n    # Now, we can calculate the number of students in each group:\n    students_in_each_group = students_picked / total_groups\n    return students_in_each_group\nans = solver()", "answer": 6.0}
{"question": " Tom had 57 dollars. If he spent 49 bucks on a new game, how many 4 dollar toys could he buy with the money he had left? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Tom had 57 dollars. If he spent 49 bucks on a new game, how many 4 dollar toys could he buy with the money he had left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    money_left = 57 - 49\n    # In the second step, we can define the following variable:\n    toys_bought = money_left / 4\n    return toys_bought\nans = solver()", "answer": 2.0}
{"question": " Isabel picked 66 flowers for her friend\u2019s wedding. She was making bouquets with 8 flowers in each one. If 10 of the flowers wilted before the wedding, how many bouquets could she still make? ", "executed": 1.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Isabel picked 66 flowers for her friend\u2019s wedding. She was making bouquets with 8 flowers in each one. If 10 of the flowers wilted before the wedding, how many bouquets could she still make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_flowers = 66\n    flowers_per_bouquet = 8\n    wilted_flowers = 10\n    # In the second step, we can calculate the number of bouquets that can be made with the total flowers\n    total_bouquets = total_flowers // flowers_per_bouquet\n    # In the third step, we can calculate the number of bouquets that can be made with the total flowers minus the wilted flowers\n    total_bouquets_after_wilting = (total_flowers - wilted_flowers) // flowers_per_bouquet\n    # In the fourth step, we can calculate the difference between the two numbers\n    bouquets_after_wilting = total_bouquets_after_wilting - total_bouquets\n    return bouquets_after_wilting\nans = solver()", "answer": 7.0}
{"question": " For Halloween Sarah received 108 pieces of candy. She ate 36 pieces then placed the rest into piles with 9 in each pile. How many piles could she make? ", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For Halloween Sarah received 108 pieces of candy. She ate 36 pieces then placed the rest into piles with 9 in each pile. How many piles could she make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_candy = 108\n    candy_eaten = 36\n    candy_left = total_candy - candy_eaten\n    candy_per_pile = 9\n    piles = candy_left / candy_per_pile\n    return piles\nans = solver()", "answer": 8.0}
{"question": " Nancy had 80 files on her computer. She deleted 31 of them and put the rest into folders with 7 files in each one. How many folders did Nancy end up with? ", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Nancy had 80 files on her computer. She deleted 31 of them and put the rest into folders with 7 files in each one. How many folders did Nancy end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_files = 80\n    deleted_files = 31\n    files_in_each_folder = 7\n    # In the second step, we can calculate the number of files left after deleting 31 files:\n    files_left = total_files - deleted_files\n    # In the third step, we can calculate the number of folders:\n    folders = math.ceil(files_left / files_in_each_folder)\n    return folders\nans = solver()", "answer": 7.0}
{"question": " There are 36 students trying out for the school's trivia teams. If 9 of them didn't get picked for the team and the rest were put into 3 groups, how many students would be in each group? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 36 students trying out for the school's trivia teams. If 9 of them didn't get picked for the team and the rest were put into 3 groups, how many students would be in each group?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_students = 36\n    students_not_picked = 9\n    total_groups = 3\n    students_per_group = total_students - students_not_picked\n    students_per_group = students_per_group / total_groups\n    return students_per_group\nans = solver()", "answer": 9.0}
{"question": " The cafeteria had 96 apples. For lunch they handed out 42 to students and decided to use the rest to make pies. If each pie takes 6 apples, how many pies could they make? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The cafeteria had 96 apples. For lunch they handed out 42 to students and decided to use the rest to make pies. If each pie takes 6 apples, how many pies could they make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    apples_left = 96\n    apples_left = apples_left - 42\n    apples_left = apples_left / 6\n    return apples_left\nans = solver()", "answer": 9.0}
{"question": " A pet store had 64 puppies. In one day they sold 28 of them and put the rest into cages with 4 in each cage. How many cages did they use? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet store had 64 puppies. In one day they sold 28 of them and put the rest into cages with 4 in each cage. How many cages did they use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    puppies_left = 64 - 28\n    cages = puppies_left / 4\n    return cages\nans = solver()", "answer": 9.0}
{"question": " Edward was selling his old games. He started out with 35 but sold 19 of them. He packed the rest up putting 8 games into each box. How many boxes did he have to use? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Edward was selling his old games. He started out with 35 but sold 19 of them. He packed the rest up putting 8 games into each box. How many boxes did he have to use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    games_sold = 19\n    games_left = 35 - games_sold\n    games_per_box = 8\n    boxes_used = math.ceil(games_left / games_per_box)\n    return boxes_used\nans = solver()", "answer": 2.0}
{"question": " Frank made 19 dollars mowing lawns over the summer. If he spent 11 dollars buying new mower blades, how many 2 dollar games could he buy with the money he had left? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Frank made 19 dollars mowing lawns over the summer. If he spent 11 dollars buying new mower blades, how many 2 dollar games could he buy with the money he had left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    money_made = 19\n    money_spent = 11\n    money_left = money_made - money_spent\n    games_bought = money_left / 2\n    return games_bought\nans = solver()", "answer": 4.0}
{"question": " Megan had 40 homework problems. She finished 26 of them but still had 2 pages of problems to do. If each page has the same number of problems on it, how many problems are on each page? ", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Megan had 40 homework problems. She finished 26 of them but still had 2 pages of problems to do. If each page has the same number of problems on it, how many problems are on each page?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_problems = 40\n    finished_problems = 26\n    remaining_pages = 2\n    problems_per_page = 0\n    # In the second step, we can calculate the number of problems per page:\n    problems_per_page = (total_problems - finished_problems) / remaining_pages\n    return problems_per_page\nans = solver()", "answer": 7.0}
{"question": " Wendy picked 103 flowers for her friend\u2019s wedding. She was making bouquets with 8 flowers in each one. If 47 of the flowers wilted before the wedding, how many bouquets could she still make? ", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Wendy picked 103 flowers for her friend\u2019s wedding. She was making bouquets with 8 flowers in each one. If 47 of the flowers wilted before the wedding, how many bouquets could she still make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_flowers = 103\n    wilted_flowers = 47\n    flowers_per_bouquet = 8\n    # In the second step, we can calculate the number of flowers that are still fresh:\n    fresh_flowers = total_flowers - wilted_flowers\n    # In the third step, we can calculate the number of bouquets that can be made with the fresh flowers:\n    bouquets = fresh_flowers // flowers_per_bouquet\n    return bouquets\nans = solver()", "answer": 7.0}
{"question": " Kaleb had 39 pieces of clothing to wash. He put 19 of them in one load, but decided to split the rest into 5 equal loads. How many pieces of clothing could go in each of the small loads? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Kaleb had 39 pieces of clothing to wash. He put 19 of them in one load, but decided to split the rest into 5 equal loads. How many pieces of clothing could go in each of the small loads?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_clothes = 39\n    clothes_in_first_load = 19\n    number_of_small_loads = 5\n    clothes_in_each_small_load = 0\n    clothes_in_each_small_load = (total_clothes - clothes_in_first_load) / number_of_small_loads\n    return clothes_in_each_small_load\nans = solver()", "answer": 4.0}
{"question": " A company invited 18 people to a luncheon, but 12 of them didn't show up. If the tables they had held 3 people each, how many tables do they need? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A company invited 18 people to a luncheon, but 12 of them didn't show up. If the tables they had held 3 people each, how many tables do they need?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    people_invited = 18\n    people_showed_up = 18 - 12\n    people_per_table = 3\n    tables_needed = math.ceil(people_showed_up / people_per_table)\n    return tables_needed\nans = solver()", "answer": 2.0}
{"question": " Mike is at the library helping put away books. There are 82 book to put away total but a librarian takes 10 of them and leaves Mike with the rest. If he can fit 9 books on a shelf, how many shelves will he need? ", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mike is at the library helping put away books. There are 82 book to put away total but a librarian takes 10 of them and leaves Mike with the rest. If he can fit 9 books on a shelf, how many shelves will he need?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_books = 82\n    books_taken = 10\n    books_left = total_books - books_taken\n    books_per_shelf = 9\n    shelves_needed = math.ceil(books_left / books_per_shelf)\n    return shelves_needed\nans = solver()", "answer": 8.0}
{"question": " A pet store had 78 puppies. In one day they sold 30 of them and put the rest into cages with 8 in each cage. How many cages did they use? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet store had 78 puppies. In one day they sold 30 of them and put the rest into cages with 8 in each cage. How many cages did they use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    puppies_sold = 30\n    puppies_left = 78 - puppies_sold\n    puppies_per_cage = 8\n    cages_used = puppies_left / puppies_per_cage\n    return cages_used\nans = solver()", "answer": 6.0}
{"question": " Bianca uploaded 33 pictures to Facebook. She put 27 pics into one album and put the rest into 3 different albums. How many pictures were in each album? ", "executed": 27.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bianca uploaded 33 pictures to Facebook. She put 27 pics into one album and put the rest into 3 different albums. How many pictures were in each album?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_pics = 33\n    album_1 = 27\n    album_2 = 0\n    album_3 = 0\n    album_4 = 0\n    # In the second step, we can define the following variable:\n    album_2 = total_pics - album_1\n    album_3 = 0\n    album_4 = 0\n    # In the third step, we can define the following variable:\n    album_3 = album_2 - album_1\n    album_4 = 0\n    # In the fourth step, we can define the following variable:\n    album_4 = album_3 - album_1\n    return album_1, album_2, album_3, album_4\nans = solver()", "answer": 2.0}
{"question": " Emily's team won their dodgeball game and scored 39 points total. If Emily scored 23 of the points and everyone else scored 2 points each, how many players were on her team? ", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Emily's team won their dodgeball game and scored 39 points total. If Emily scored 23 of the points and everyone else scored 2 points each, how many players were on her team?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_points = 39\n    emily_points = 23\n    other_points = 2\n    # In the second step, we can calculate the number of players on Emily's team:\n    num_players = (total_points - emily_points) / other_points\n    return num_players\nans = solver()", "answer": 8.0}
{"question": " A company invited 47 people to a luncheon, but 7 of them didn't show up. If the tables they had held 5 people each, how many tables do they need? ", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A company invited 47 people to a luncheon, but 7 of them didn't show up. If the tables they had held 5 people each, how many tables do they need?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_people = 47\n    people_not_showing_up = 7\n    people_showing_up = total_people - people_not_showing_up\n    people_per_table = 5\n    tables_needed = math.ceil(people_showing_up / people_per_table)\n    return tables_needed\nans = solver()", "answer": 8.0}
{"question": " A waiter had 44 customers in his section. If 12 of them left and the rest of his tables had 8 people at each table, how many tables did he have? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter had 44 customers in his section. If 12 of them left and the rest of his tables had 8 people at each table, how many tables did he have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_customers = 44\n    num_left = 12\n    num_remaining = num_customers - num_left\n    num_per_table = 8\n    num_tables = num_remaining / num_per_table\n    return num_tables\nans = solver()", "answer": 4.0}
{"question": " A store had 40 coloring books in stock. They ended up putting them on sale and getting rid of 20 of them. The put the ones they still had onto shelves with 4 on each shelf. How many shelves did they use? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A store had 40 coloring books in stock. They ended up putting them on sale and getting rid of 20 of them. The put the ones they still had onto shelves with 4 on each shelf. How many shelves did they use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    books_in_stock = 40\n    books_sold = 20\n    books_left = books_in_stock - books_sold\n    books_per_shelf = 4\n    shelves_used = math.ceil(books_left / books_per_shelf)\n    return shelves_used\nans = solver()", "answer": 5.0}
{"question": " There are 64 students trying out for the school's trivia teams. If 36 of them didn't get picked for the team and the rest were put into 4 groups, how many students would be in each group? ", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 64 students trying out for the school's trivia teams. If 36 of them didn't get picked for the team and the rest were put into 4 groups, how many students would be in each group?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_students = 64\n    students_not_picked = 36\n    students_picked = total_students - students_not_picked\n    groups = 4\n    students_per_group = students_picked / groups\n    return students_per_group\nans = solver()", "answer": 7.0}
{"question": " Kaleb was selling his old games. He started out with 76 but sold 46 of them. He packed the rest up putting 5 games into each box. How many boxes did he have to use? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Kaleb was selling his old games. He started out with 76 but sold 46 of them. He packed the rest up putting 5 games into each box. How many boxes did he have to use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    games_sold = 46\n    games_left = 76 - games_sold\n    games_per_box = 5\n    boxes_used = math.ceil(games_left / games_per_box)\n    return boxes_used\nans = solver()", "answer": 6.0}
{"question": " Jerry is at the library helping put away books. There are 34 book to put away total but a librarian takes 7 of them and leaves Jerry with the rest. If he can fit 3 books on a shelf, how many shelves will he need? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jerry is at the library helping put away books. There are 34 book to put away total but a librarian takes 7 of them and leaves Jerry with the rest. If he can fit 3 books on a shelf, how many shelves will he need?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_books = 34\n    books_taken = 7\n    books_left = total_books - books_taken\n    books_per_shelf = 3\n    shelves_needed = math.ceil(books_left / books_per_shelf)\n    return shelves_needed\nans = solver()", "answer": 9.0}
{"question": " Nancy was planting vegetables in her garden. She started with 52 seeds and planted 28 of them in the big garden and in each of her small gardens put 4 seeds each. How many small gardens did Nancy have? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Nancy was planting vegetables in her garden. She started with 52 seeds and planted 28 of them in the big garden and in each of her small gardens put 4 seeds each. How many small gardens did Nancy have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    big_garden = 28\n    small_garden = 4\n    total_seeds = 52\n    # In the second step, we can calculate the number of small gardens:\n    num_small_gardens = (total_seeds - big_garden) / small_garden\n    return num_small_gardens\nans = solver()", "answer": 6.0}
{"question": " Will had 83 dollars. If he spent 47 bucks on a new game, how many 4 dollar toys could he buy with the money he had left? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Will had 83 dollars. If he spent 47 bucks on a new game, how many 4 dollar toys could he buy with the money he had left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    had = 83\n    spent = 47\n    toy_price = 4\n    # In the second step, we can calculate the money left after buying the game:\n    left = had - spent\n    # In the third step, we can calculate the number of toys he could buy:\n    toys = left // toy_price\n    return toys\nans = solver()", "answer": 9.0}
{"question": " Bianca was planting vegetables in her garden. She started with 52 seeds and planted 40 of them in the big garden and in each of her small gardens put 2 seeds each. How many small gardens did Bianca have? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bianca was planting vegetables in her garden. She started with 52 seeds and planted 40 of them in the big garden and in each of her small gardens put 2 seeds each. How many small gardens did Bianca have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    big_garden = 40\n    small_garden = 2\n    total_seeds = 52\n    # In the second step, we can calculate the number of small gardens:\n    num_small_gardens = (total_seeds - big_garden) / small_garden\n    return num_small_gardens\nans = solver()", "answer": 6.0}
{"question": " A waiter had 21 customers in his section. If 12 of them left and the rest of his tables had 3 people at each table, how many tables did he have? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter had 21 customers in his section. If 12 of them left and the rest of his tables had 3 people at each table, how many tables did he have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_customers = 21\n    customers_left = 12\n    customers_remaining = total_customers - customers_left\n    customers_per_table = 3\n    tables = customers_remaining / customers_per_table\n    return tables\nans = solver()", "answer": 3.0}
{"question": " There are 25 students trying out for the school's trivia teams. If 15 of them didn't get picked for the team and the rest were put into 2 groups, how many students would be in each group? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 25 students trying out for the school's trivia teams. If 15 of them didn't get picked for the team and the rest were put into 2 groups, how many students would be in each group?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_students = 25\n    students_not_picked = 15\n    students_picked = total_students - students_not_picked\n    # In the second step, we can define the following variable:\n    groups = 2\n    students_per_group = students_picked / groups\n    return students_per_group\nans = solver()", "answer": 5.0}
{"question": " The cafeteria had 47 apples. For lunch they handed out 27 to students and decided to use the rest to make pies. If each pie takes 4 apples, how many pies could they make? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The cafeteria had 47 apples. For lunch they handed out 27 to students and decided to use the rest to make pies. If each pie takes 4 apples, how many pies could they make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    apples = 47\n    # In the second step, we can define the following variable:\n    apples_for_lunch = 27\n    # In the third step, we can define the following variable:\n    apples_for_pies = apples - apples_for_lunch\n    # In the fourth step, we can define the following variable:\n    apples_per_pie = 4\n    # In the fifth step, we can define the following variable:\n    pies = apples_for_pies / apples_per_pie\n    return pies\nans = solver()", "answer": 5.0}
{"question": " Megan baked 68 cupcakes for her school's bake sale. If her brother, Todd, ate 32 of them how many packages could she make if she put 6 cupcake in each package? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Megan baked 68 cupcakes for her school's bake sale. If her brother, Todd, ate 32 of them how many packages could she make if she put 6 cupcake in each package?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_cupcakes = 68\n    eaten_cupcakes = 32\n    cupcakes_per_package = 6\n    # In the second step, we can calculate the number of cupcakes left:\n    cupcakes_left = total_cupcakes - eaten_cupcakes\n    # In the third step, we can calculate the number of packages:\n    packages = cupcakes_left / cupcakes_per_package\n    return packages\nans = solver()", "answer": 6.0}
{"question": " A store had 120 coloring books in stock. They ended up putting them on sale and getting rid of 39 of them. The put the ones they still had onto shelves with 9 on each shelf. How many shelves did they use? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A store had 120 coloring books in stock. They ended up putting them on sale and getting rid of 39 of them. The put the ones they still had onto shelves with 9 on each shelf. How many shelves did they use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    books_in_stock = 120\n    books_sold = 39\n    books_left = books_in_stock - books_sold\n    books_per_shelf = 9\n    shelves_used = math.ceil(books_left / books_per_shelf)\n    return shelves_used\nans = solver()", "answer": 9.0}
{"question": " Isabel uploaded 25 pictures to Facebook. She put 10 pics into one album and put the rest into 5 different albums. How many pictures were in each album? ", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Isabel uploaded 25 pictures to Facebook. She put 10 pics into one album and put the rest into 5 different albums. How many pictures were in each album?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_pics = 25\n    album_1 = 10\n    album_2 = 0\n    album_3 = 0\n    album_4 = 0\n    album_5 = 0\n    album_6 = 0\n    album_7 = 0\n    album_8 = 0\n    album_9 = 0\n    album_10 = 0\n    album_11 = 0\n    album_12 = 0\n    album_13 = 0\n    album_14 = 0\n    album_15 = 0\n    album_16 = 0\n    album_17 = 0\n    album_18 = 0\n    album_19 = 0\n    album_20 = 0\n    album_21 = 0\n    album_22 = 0\n    album_23 = 0\n    album_24 = 0\n    album_25 = 0\n    album_26 = 0\n    album_27 = 0\n    album_28 = 0\n    album_29 = 0\n    album_30 = 0\n    album_31 = 0\n    album_32 = 0\n    album_33 = 0\n    album_34 = 0\n    album_35 = 0\n    album_36 = 0\n    album_37 = 0\n    album_38 = 0\n    album_39 = 0\n    album_40 = 0\n    album_41 = 0\n    album_42\nans = solver()", "answer": 3.0}
{"question": " Sarah had 60 homework problems. She finished 20 of them but still had 5 pages of problems to do. If each page has the same number of problems on it, how many problems are on each page? ", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Sarah had 60 homework problems. She finished 20 of them but still had 5 pages of problems to do. If each page has the same number of problems on it, how many problems are on each page?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_problems = 60\n    finished_problems = 20\n    unfinished_problems = 5\n    problems_per_page = 0\n    # In the second step, we can calculate the number of problems per page:\n    problems_per_page = (total_problems - finished_problems) / unfinished_problems\n    return problems_per_page\nans = solver()", "answer": 8.0}
{"question": " Mike made 42 dollars mowing lawns over the summer. If he spent 10 dollars buying new mower blades, how many 8 dollar games could he buy with the money he had left? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mike made 42 dollars mowing lawns over the summer. If he spent 10 dollars buying new mower blades, how many 8 dollar games could he buy with the money he had left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    mike_earning = 42\n    mike_spending = 10\n    game_price = 8\n    # In the second step, we can calculate the money left after spending:\n    mike_left = mike_earning - mike_spending\n    # In the third step, we can calculate the number of games Mike can buy:\n    mike_games = mike_left // game_price\n    return mike_games\nans = solver()", "answer": 4.0}
{"question": " Will had 59 pieces of clothing to wash. He put 32 of them in one load, but decided to split the rest into 9 equal loads. How many pieces of clothing could go in each of the small loads? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Will had 59 pieces of clothing to wash. He put 32 of them in one load, but decided to split the rest into 9 equal loads. How many pieces of clothing could go in each of the small loads?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_clothes = 59\n    clothes_in_first_load = 32\n    clothes_in_second_load = total_clothes - clothes_in_first_load\n    clothes_in_each_load = clothes_in_second_load / 9\n    return clothes_in_each_load\nans = solver()", "answer": 3.0}
{"question": " Oliver made 35 dollars mowing lawns over the summer. If he spent 7 dollars buying new mower blades, how many 4 dollar games could he buy with the money he had left? ", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Oliver made 35 dollars mowing lawns over the summer. If he spent 7 dollars buying new mower blades, how many 4 dollar games could he buy with the money he had left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    money_made = 35\n    money_spent = 7\n    game_price = 4\n    money_left = money_made - money_spent\n    games_bought = money_left / game_price\n    return games_bought\nans = solver()", "answer": 7.0}
{"question": " Emily was planting vegetables in her garden. She started with 42 seeds and planted 36 of them in the big garden and in each of her small gardens put 2 seeds each. How many small gardens did Emily have? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Emily was planting vegetables in her garden. She started with 42 seeds and planted 36 of them in the big garden and in each of her small gardens put 2 seeds each. How many small gardens did Emily have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    big_garden = 36\n    small_garden = 2\n    total_seeds = 42\n    # In the second step, we can calculate the number of small gardens:\n    num_small_gardens = (total_seeds - big_garden) / small_garden\n    return num_small_gardens\nans = solver()", "answer": 3.0}
{"question": " There are 17 students trying out for the school's trivia teams. If 5 of them didn't get picked for the team and the rest were put into 3 groups, how many students would be in each group? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 17 students trying out for the school's trivia teams. If 5 of them didn't get picked for the team and the rest were put into 3 groups, how many students would be in each group?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_students = 17\n    students_not_picked = 5\n    students_picked = total_students - students_not_picked\n    groups = 3\n    students_per_group = students_picked / groups\n    return students_per_group\nans = solver()", "answer": 4.0}
{"question": " Katie's team won their dodgeball game and scored 12 points total. If Katie scored 4 of the points and everyone else scored 4 points each, how many players were on her team? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Katie's team won their dodgeball game and scored 12 points total. If Katie scored 4 of the points and everyone else scored 4 points each, how many players were on her team?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    katie_points = 4\n    # In the second step, we can define the following variable:\n    other_points = 4\n    # In the third step, we can define the following variable:\n    total_points = 12\n    # In the fourth step, we can define the following variable:\n    total_players = 0\n    # In the fifth step, we can define the following variable:\n    total_players = total_points - katie_points\n    # In the sixth step, we can define the following variable:\n    total_players = total_players / other_points\n    return total_players\nans = solver()", "answer": 2.0}
{"question": " Megan baked 71 cupcakes for her school's bake sale. If her brother, Todd, ate 43 of them how many packages could she make if she put 7 cupcake in each package? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Megan baked 71 cupcakes for her school's bake sale. If her brother, Todd, ate 43 of them how many packages could she make if she put 7 cupcake in each package?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_cupcakes = 71\n    eaten_cupcakes = 43\n    cupcakes_per_package = 7\n    # In the second step, we can calculate the number of cupcakes left:\n    cupcakes_left = total_cupcakes - eaten_cupcakes\n    # In the third step, we can calculate the number of packages:\n    num_packages = cupcakes_left / cupcakes_per_package\n    return num_packages\nans = solver()", "answer": 4.0}
{"question": " Wendy uploaded 45 pictures to Facebook. She put 27 pics into one album and put the rest into 9 different albums. How many pictures were in each album? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Wendy uploaded 45 pictures to Facebook. She put 27 pics into one album and put the rest into 9 different albums. How many pictures were in each album?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_pics = 45\n    album_1 = 27\n    album_2 = 9\n    album_3 = total_pics - album_1 - album_2\n    return album_3\nans = solver()", "answer": 2.0}
{"question": " A store had 86 coloring books in stock. They ended up putting them on sale and getting rid of 37 of them. The put the ones they still had onto shelves with 7 on each shelf. How many shelves did they use? ", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A store had 86 coloring books in stock. They ended up putting them on sale and getting rid of 37 of them. The put the ones they still had onto shelves with 7 on each shelf. How many shelves did they use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    coloring_books_in_stock = 86\n    coloring_books_sold = 37\n    coloring_books_left = coloring_books_in_stock - coloring_books_sold\n    print(\"Coloring books left:\", coloring_books_left)\n    # In the second step, we can define the following variable:\n    coloring_books_per_shelf = 7\n    shelves_used = math.ceil(coloring_books_left / coloring_books_per_shelf)\n    print(\"Shelves used:\", shelves_used)\n    return shelves_used\nans = solver()", "answer": 7.0}
{"question": " The cafeteria had 50 apples. For lunch they handed out 5 to students and decided to use the rest to make pies. If each pie takes 5 apples, how many pies could they make? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The cafeteria had 50 apples. For lunch they handed out 5 to students and decided to use the rest to make pies. If each pie takes 5 apples, how many pies could they make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    apples_left = 50\n    apples_left = apples_left - 5\n    print(apples_left)\n    # In the second step, we can define the following variable:\n    pies = apples_left / 5\n    print(pies)\n    return pies\nans = solver()", "answer": 9.0}
{"question": " Nancy had 101 homework problems. She finished 47 of them but still had 6 pages of problems to do. If each page has the same number of problems on it, how many problems are on each page? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Nancy had 101 homework problems. She finished 47 of them but still had 6 pages of problems to do. If each page has the same number of problems on it, how many problems are on each page?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_problems = 101\n    finished_problems = 47\n    unfinished_problems = total_problems - finished_problems\n    pages = 6\n    problems_per_page = unfinished_problems / pages\n    return problems_per_page\nans = solver()", "answer": 9.0}
{"question": " Paige had 27 files on her computer. She deleted 9 of them and put the rest into folders with 6 files in each one. How many folders did Paige end up with? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paige had 27 files on her computer. She deleted 9 of them and put the rest into folders with 6 files in each one. How many folders did Paige end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_files = 27\n    deleted_files = 9\n    files_in_each_folder = 6\n    # In the second step, we can calculate the number of files left after deleting 9 files:\n    files_left = total_files - deleted_files\n    # In the third step, we can calculate the number of folders:\n    number_of_folders = math.ceil(files_left / files_in_each_folder)\n    return number_of_folders\nans = solver()", "answer": 3.0}
{"question": " For Halloween Bianca received 78 pieces of candy. She ate 30 pieces then placed the rest into piles with 8 in each pile. How many piles could she make? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For Halloween Bianca received 78 pieces of candy. She ate 30 pieces then placed the rest into piles with 8 in each pile. How many piles could she make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_candy = 78\n    candy_eaten = 30\n    candy_left = total_candy - candy_eaten\n    candy_per_pile = 8\n    num_piles = candy_left / candy_per_pile\n    return num_piles\nans = solver()", "answer": 6.0}
{"question": " A company invited 45 people to a luncheon, but 35 of them didn't show up. If the tables they had held 2 people each, how many tables do they need? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A company invited 45 people to a luncheon, but 35 of them didn't show up. If the tables they had held 2 people each, how many tables do they need?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    people_invited = 45\n    people_showed_up = 35\n    people_per_table = 2\n    people_not_showed_up = people_invited - people_showed_up\n    tables_needed = people_not_showed_up / people_per_table\n    return tables_needed\nans = solver()", "answer": 5.0}
{"question": " Haley uploaded 65 pictures to Facebook. She put 17 pics into one album and put the rest into 6 different albums. How many pictures were in each album? ", "executed": 6.857142857142857, "generated": "\nimport math\nimport numpy as np\n\n# Question: Haley uploaded 65 pictures to Facebook. She put 17 pics into one album and put the rest into 6 different albums. How many pictures were in each album?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_pics = 65\n    total_albums = 7\n    pics_in_one_album = 17\n    # In the second step, we can calculate the number of pictures in each album:\n    pics_in_each_album = (total_pics - pics_in_one_album) / total_albums\n    return pics_in_each_album\nans = solver()", "answer": 8.0}
{"question": " A pet store had 102 puppies. In one day they sold 21 of them and put the rest into cages with 9 in each cage. How many cages did they use? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet store had 102 puppies. In one day they sold 21 of them and put the rest into cages with 9 in each cage. How many cages did they use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    puppies = 102\n    sold = 21\n    cages = 0\n    puppies_left = puppies - sold\n    cages = puppies_left / 9\n    return cages\nans = solver()", "answer": 9.0}
{"question": " Roger had 120 pieces of clothing to wash. He put 48 of them in one load, but decided to split the rest into 9 equal loads. How many pieces of clothing could go in each of the small loads? ", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Roger had 120 pieces of clothing to wash. He put 48 of them in one load, but decided to split the rest into 9 equal loads. How many pieces of clothing could go in each of the small loads?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_clothes = 120\n    clothes_in_first_load = 48\n    clothes_in_second_load = total_clothes - clothes_in_first_load\n    number_of_second_loads = 9\n    clothes_in_each_second_load = clothes_in_second_load / number_of_second_loads\n    return clothes_in_each_second_load\nans = solver()", "answer": 8.0}
{"question": " Wendy picked 45 flowers for her friend\u2019s wedding. She was making bouquets with 5 flowers in each one. If 35 of the flowers wilted before the wedding, how many bouquets could she still make? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Wendy picked 45 flowers for her friend\u2019s wedding. She was making bouquets with 5 flowers in each one. If 35 of the flowers wilted before the wedding, how many bouquets could she still make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_flowers = 45\n    wilted_flowers = 35\n    flowers_per_bouquet = 5\n    # In the second step, we can calculate the number of flowers that are still fresh:\n    fresh_flowers = total_flowers - wilted_flowers\n    # In the third step, we can calculate the number of bouquets that can be made with fresh flowers:\n    bouquets = fresh_flowers // flowers_per_bouquet\n    return bouquets\nans = solver()", "answer": 2.0}
{"question": " Isabel baked 39 cupcakes for her school's bake sale. If her brother, Todd, ate 21 of them how many packages could she make if she put 3 cupcake in each package? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Isabel baked 39 cupcakes for her school's bake sale. If her brother, Todd, ate 21 of them how many packages could she make if she put 3 cupcake in each package?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_cupcakes = 39\n    eaten_cupcakes = 21\n    cupcakes_per_package = 3\n    # In the second step, we can calculate the number of cupcakes left:\n    cupcakes_left = total_cupcakes - eaten_cupcakes\n    # In the third step, we can calculate the number of packages:\n    packages = cupcakes_left / cupcakes_per_package\n    return packages\nans = solver()", "answer": 6.0}
{"question": " Sarah had 55 homework problems. She finished 6 of them but still had 7 pages of problems to do. If each page has the same number of problems on it, how many problems are on each page? ", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Sarah had 55 homework problems. She finished 6 of them but still had 7 pages of problems to do. If each page has the same number of problems on it, how many problems are on each page?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_problems = 55\n    finished_problems = 6\n    remaining_pages = 7\n    # In the second step, we can calculate the number of problems on each page:\n    problems_per_page = (total_problems - finished_problems) / remaining_pages\n    return problems_per_page\nans = solver()", "answer": 7.0}
{"question": " There are 58 students trying out for the school's trivia teams. If 10 of them didn't get picked for the team and the rest were put into 8 groups, how many students would be in each group? ", "executed": 6.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: There are 58 students trying out for the school's trivia teams. If 10 of them didn't get picked for the team and the rest were put into 8 groups, how many students would be in each group?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_students = 58\n    num_not_picked = 10\n    num_picked = num_students - num_not_picked\n    num_groups = 8\n    num_students_per_group = num_picked / num_groups\n    return num_students_per_group\nans = solver()", "answer": 6.0}
{"question": " Paige picked 53 flowers for her friend\u2019s wedding. She was making bouquets with 7 flowers in each one. If 18 of the flowers wilted before the wedding, how many bouquets could she still make? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Paige picked 53 flowers for her friend\u2019s wedding. She was making bouquets with 7 flowers in each one. If 18 of the flowers wilted before the wedding, how many bouquets could she still make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_flowers = 53\n    flowers_per_bouquet = 7\n    wilted_flowers = 18\n    # In the second step, we can calculate the number of bouquets that can be made:\n    bouquets = total_flowers // flowers_per_bouquet\n    # In the third step, we can calculate the number of bouquets that can be made after the wilted flowers are removed:\n    bouquets_after_wilted = (total_flowers - wilted_flowers) // flowers_per_bouquet\n    # In the fourth step, we can return the answer:\n    return bouquets_after_wilted\nans = solver()", "answer": 5.0}
{"question": " A waiter had 22 customers in his section. If 14 of them left and the rest of his tables had 4 people at each table, how many tables did he have? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A waiter had 22 customers in his section. If 14 of them left and the rest of his tables had 4 people at each table, how many tables did he have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_customers = 22\n    customers_left = 14\n    customers_remaining = total_customers - customers_left\n    customers_per_table = 4\n    tables = customers_remaining / customers_per_table\n    return tables\nans = solver()", "answer": 2.0}
{"question": " Luke was selling his old games. He started out with 39 but sold 19 of them. He packed the rest up putting 4 games into each box. How many boxes did he have to use? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Luke was selling his old games. He started out with 39 but sold 19 of them. He packed the rest up putting 4 games into each box. How many boxes did he have to use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    games_sold = 19\n    games_left = 39 - games_sold\n    games_per_box = 4\n    boxes_used = math.ceil(games_left / games_per_box)\n    return boxes_used\nans = solver()", "answer": 5.0}
{"question": " Haley baked 20 cupcakes for her school's bake sale. If her brother, Todd, ate 11 of them how many packages could she make if she put 3 cupcake in each package? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Haley baked 20 cupcakes for her school's bake sale. If her brother, Todd, ate 11 of them how many packages could she make if she put 3 cupcake in each package?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    cupcakes_baked = 20\n    cupcakes_eaten = 11\n    cupcakes_per_package = 3\n    cupcakes_left = cupcakes_baked - cupcakes_eaten\n    packages = cupcakes_left / cupcakes_per_package\n    return packages\nans = solver()", "answer": 3.0}
{"question": " A pet store had 13 puppies. In one day they sold 7 of them and put the rest into cages with 2 in each cage. How many cages did they use? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet store had 13 puppies. In one day they sold 7 of them and put the rest into cages with 2 in each cage. How many cages did they use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    puppies_sold = 7\n    puppies_left = 13 - puppies_sold\n    cages_used = puppies_left / 2\n    return cages_used\nans = solver()", "answer": 3.0}
{"question": " A store had 27 coloring books in stock. They ended up putting them on sale and getting rid of 6 of them. The put the ones they still had onto shelves with 7 on each shelf. How many shelves did they use? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A store had 27 coloring books in stock. They ended up putting them on sale and getting rid of 6 of them. The put the ones they still had onto shelves with 7 on each shelf. How many shelves did they use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    books_in_stock = 27\n    books_sold = 6\n    books_left = books_in_stock - books_sold\n    books_per_shelf = 7\n    shelves_used = math.ceil(books_left / books_per_shelf)\n    return shelves_used\nans = solver()", "answer": 3.0}
{"question": " Wendy had 82 files on her computer. She deleted 37 of them and put the rest into folders with 5 files in each one. How many folders did Wendy end up with? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Wendy had 82 files on her computer. She deleted 37 of them and put the rest into folders with 5 files in each one. How many folders did Wendy end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_files = 82\n    deleted_files = 37\n    files_in_each_folder = 5\n    # In the second step, we can calculate the number of files left after deleting 37 files:\n    files_left = total_files - deleted_files\n    # In the third step, we can calculate the number of folders:\n    folders = math.ceil(files_left / files_in_each_folder)\n    return folders\nans = solver()", "answer": 9.0}
{"question": " Kaleb had 12 dollars. If he spent 8 bucks on a new game, how many 2 dollar toys could he buy with the money he had left? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Kaleb had 12 dollars. If he spent 8 bucks on a new game, how many 2 dollar toys could he buy with the money he had left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    money_kaleb_had = 12\n    money_spent_on_game = 8\n    money_left = money_kaleb_had - money_spent_on_game\n    money_needed_for_toy = 2\n    number_of_toys_kaleb_can_buy = money_left / money_needed_for_toy\n    return number_of_toys_kaleb_can_buy\nans = solver()", "answer": 2.0}
{"question": " Sarah was planting vegetables in her garden. She started with 21 seeds and planted 12 of them in the big garden and in each of her small gardens put 3 seeds each. How many small gardens did Sarah have? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Sarah was planting vegetables in her garden. She started with 21 seeds and planted 12 of them in the big garden and in each of her small gardens put 3 seeds each. How many small gardens did Sarah have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    big_garden = 12\n    small_garden = 3\n    total_seeds = 21\n    # In the second step, we can calculate the number of small gardens:\n    num_small_gardens = (total_seeds - big_garden) / small_garden\n    return num_small_gardens\nans = solver()", "answer": 3.0}
{"question": " Nancy uploaded 51 pictures to Facebook. She put 11 pics into one album and put the rest into 8 different albums. How many pictures were in each album? ", "executed": null, "generated": "\nimport math\nimport numpy as np\n\n# Question: Nancy uploaded 51 pictures to Facebook. She put 11 pics into one album and put the rest into 8 different albums. How many pictures were in each album?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_pics = 51\n    album_1 = 11\n    album_2 = 0\n    album_3 = 0\n    album_4 = 0\n    album_5 = 0\n    album_6 = 0\n    album_7 = 0\n    album_8 = 0\n    album_9 = 0\n    album_10 = 0\n    album_11 = 0\n    album_12 = 0\n    album_13 = 0\n    album_14 = 0\n    album_15 = 0\n    album_16 = 0\n    album_17 = 0\n    album_18 = 0\n    album_19 = 0\n    album_20 = 0\n    album_21 = 0\n    album_22 = 0\n    album_23 = 0\n    album_24 = 0\n    album_25 = 0\n    album_26 = 0\n    album_27 = 0\n    album_28 = 0\n    album_29 = 0\n    album_30 = 0\n    album_31 = 0\n    album_32 = 0\n    album_33 = 0\n    album_34 = 0\n    album_35 = 0\n    album_36 = 0\n    album_37 = 0\n    album_38 = 0\n    album_39 = 0\n    album_40 = 0\n    album_41 = 0\n    album_42\nans = solver()", "answer": 5.0}
{"question": " A company invited 24 people to a luncheon, but 10 of them didn't show up. If the tables they had held 7 people each, how many tables do they need? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A company invited 24 people to a luncheon, but 10 of them didn't show up. If the tables they had held 7 people each, how many tables do they need?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_people = 24\n    people_showed_up = total_people - 10\n    people_per_table = 7\n    # In the second step, we can calculate the number of tables needed:\n    tables_needed = math.ceil(people_showed_up / people_per_table)\n    return tables_needed\nans = solver()", "answer": 2.0}
{"question": " Bianca's team won their dodgeball game and scored 75 points total. If Bianca scored 45 of the points and everyone else scored 6 points each, how many players were on her team? ", "executed": 5.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Bianca's team won their dodgeball game and scored 75 points total. If Bianca scored 45 of the points and everyone else scored 6 points each, how many players were on her team?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    bianca_score = 45\n    other_score = 6\n    total_score = 75\n    # In the second step, we can define the following variable:\n    other_players = (total_score - bianca_score) / other_score\n    return other_players\nans = solver()", "answer": 5.0}
{"question": " For Halloween Emily received 54 pieces of candy. She ate 33 pieces then placed the rest into piles with 7 in each pile. How many piles could she make? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For Halloween Emily received 54 pieces of candy. She ate 33 pieces then placed the rest into piles with 7 in each pile. How many piles could she make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_candy = 54\n    eaten_candy = 33\n    candy_per_pile = 7\n    # In the second step, we can calculate the number of piles:\n    num_piles = (total_candy - eaten_candy) / candy_per_pile\n    return num_piles\nans = solver()", "answer": 3.0}
{"question": " Haley was planting vegetables in her garden. She started with 56 seeds and planted 35 of them in the big garden and in each of her small gardens put 3 seeds each. How many small gardens did Haley have? ", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Haley was planting vegetables in her garden. She started with 56 seeds and planted 35 of them in the big garden and in each of her small gardens put 3 seeds each. How many small gardens did Haley have?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    big_garden = 35\n    small_garden = 3\n    total_seeds = 56\n    # In the second step, we can calculate the number of small gardens:\n    num_small_gardens = (total_seeds - big_garden) / small_garden\n    return num_small_gardens\nans = solver()", "answer": 7.0}
{"question": " A store had 48 coloring books in stock. They ended up putting them on sale and getting rid of 38 of them. The put the ones they still had onto shelves with 5 on each shelf. How many shelves did they use? ", "executed": 2.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A store had 48 coloring books in stock. They ended up putting them on sale and getting rid of 38 of them. The put the ones they still had onto shelves with 5 on each shelf. How many shelves did they use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    books_in_stock = 48\n    books_sold = 38\n    books_left = books_in_stock - books_sold\n    books_per_shelf = 5\n    shelves_used = math.ceil(books_left / books_per_shelf)\n    return shelves_used\nans = solver()", "answer": 2.0}
{"question": " Roger is at the library helping put away books. There are 14 book to put away total but a librarian takes 2 of them and leaves Roger with the rest. If he can fit 3 books on a shelf, how many shelves will he need? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Roger is at the library helping put away books. There are 14 book to put away total but a librarian takes 2 of them and leaves Roger with the rest. If he can fit 3 books on a shelf, how many shelves will he need?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_books = 14\n    books_taken = 2\n    books_left = total_books - books_taken\n    books_per_shelf = 3\n    shelves_needed = math.ceil(books_left / books_per_shelf)\n    return shelves_needed\nans = solver()", "answer": 4.0}
{"question": " A pet store had 56 puppies. In one day they sold 24 of them and put the rest into cages with 4 in each cage. How many cages did they use? ", "executed": 8.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet store had 56 puppies. In one day they sold 24 of them and put the rest into cages with 4 in each cage. How many cages did they use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    puppies_left = 56 - 24\n    cages = puppies_left / 4\n    return cages\nans = solver()", "answer": 8.0}
{"question": " The cafeteria had 86 apples. For lunch they handed out 30 to students and decided to use the rest to make pies. If each pie takes 8 apples, how many pies could they make? ", "executed": 48.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The cafeteria had 86 apples. For lunch they handed out 30 to students and decided to use the rest to make pies. If each pie takes 8 apples, how many pies could they make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    apples_left = 86\n    apples_left = apples_left - 30\n    apples_left = apples_left - 8\n    return apples_left\nans = solver()", "answer": 7.0}
{"question": " Jerry had 60 pieces of clothing to wash. He put 40 of them in one load, but decided to split the rest into 5 equal loads. How many pieces of clothing could go in each of the small loads? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Jerry had 60 pieces of clothing to wash. He put 40 of them in one load, but decided to split the rest into 5 equal loads. How many pieces of clothing could go in each of the small loads?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_clothes = 60\n    clothes_in_first_load = 40\n    clothes_in_second_load = total_clothes - clothes_in_first_load\n    clothes_in_each_load = clothes_in_second_load / 5\n    return clothes_in_each_load\nans = solver()", "answer": 4.0}
{"question": " Mike made 69 dollars mowing lawns over the summer. If he spent 24 dollars buying new mower blades, how many 5 dollar games could he buy with the money he had left? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Mike made 69 dollars mowing lawns over the summer. If he spent 24 dollars buying new mower blades, how many 5 dollar games could he buy with the money he had left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    mike_made = 69\n    mike_spent = 24\n    game_cost = 5\n    # In the second step, we can calculate the money left:\n    mike_left = mike_made - mike_spent\n    # In the third step, we can calculate the number of games Mike can buy:\n    mike_games = mike_left // game_cost\n    return mike_games\nans = solver()", "answer": 9.0}
{"question": " Will made 104 dollars mowing lawns over the summer. If he spent 41 dollars buying new mower blades, how many 9 dollar games could he buy with the money he had left? ", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Will made 104 dollars mowing lawns over the summer. If he spent 41 dollars buying new mower blades, how many 9 dollar games could he buy with the money he had left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    money_made = 104\n    money_spent = 41\n    game_price = 9\n    money_left = money_made - money_spent\n    games_bought = money_left / game_price\n    return games_bought\nans = solver()", "answer": 7.0}
{"question": " For Halloween Bianca received 32 pieces of candy. She ate 12 pieces then placed the rest into piles with 5 in each pile. How many piles could she make? ", "executed": 4.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: For Halloween Bianca received 32 pieces of candy. She ate 12 pieces then placed the rest into piles with 5 in each pile. How many piles could she make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_candy = 32\n    candy_eaten = 12\n    candy_left = total_candy - candy_eaten\n    candy_per_pile = 5\n    piles = candy_left / candy_per_pile\n    return piles\nans = solver()", "answer": 4.0}
{"question": " Luke was selling his old games. He started out with 57 but sold 39 of them. He packed the rest up putting 2 games into each box. How many boxes did he have to use? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Luke was selling his old games. He started out with 57 but sold 39 of them. He packed the rest up putting 2 games into each box. How many boxes did he have to use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    games_sold = 39\n    games_left = 57 - games_sold\n    games_per_box = 2\n    boxes_used = math.ceil(games_left / games_per_box)\n    return boxes_used\nans = solver()", "answer": 9.0}
{"question": " A pet store had 88 puppies. In one day they sold 34 of them and put the rest into cages with 6 in each cage. How many cages did they use? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: A pet store had 88 puppies. In one day they sold 34 of them and put the rest into cages with 6 in each cage. How many cages did they use?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    puppies = 88\n    sold = 34\n    cages = 0\n    puppies_left = puppies - sold\n    cages = puppies_left / 6\n    return cages\nans = solver()", "answer": 9.0}
{"question": " Katie had 85 files on her computer. She deleted 40 of them and put the rest into folders with 5 files in each one. How many folders did Katie end up with? ", "executed": 9.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Katie had 85 files on her computer. She deleted 40 of them and put the rest into folders with 5 files in each one. How many folders did Katie end up with?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_files_deleted = 40\n    num_files_remaining = 85 - num_files_deleted\n    num_files_per_folder = 5\n    num_folders = num_files_remaining / num_files_per_folder\n    return num_folders\nans = solver()", "answer": 9.0}
{"question": " Roger had 68 dollars. If he spent 47 bucks on a new game, how many 7 dollar toys could he buy with the money he had left? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Roger had 68 dollars. If he spent 47 bucks on a new game, how many 7 dollar toys could he buy with the money he had left?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    money_roger_had = 68\n    money_spent_on_game = 47\n    money_left = money_roger_had - money_spent_on_game\n    price_of_toy = 7\n    number_of_toys = money_left // price_of_toy\n    return number_of_toys\nans = solver()", "answer": 3.0}
{"question": " Tom bought 40 tickets at the state fair. He spent 28 tickets at the 'dunk a clown' booth and decided to use the rest on rides. If each ride cost 4 tickets, how many rides could he go on? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Tom bought 40 tickets at the state fair. He spent 28 tickets at the 'dunk a clown' booth and decided to use the rest on rides. If each ride cost 4 tickets, how many rides could he go on?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    num_tickets_bought = 40\n    num_tickets_spent_at_dunk_a_clown = 28\n    num_tickets_spent_on_rides = 4\n    num_rides = 0\n    num_tickets_left = 0\n    num_rides = (num_tickets_bought - num_tickets_spent_at_dunk_a_clown) / num_tickets_spent_on_rides\n    return num_rides\nans = solver()", "answer": 3.0}
{"question": " The cafeteria had 75 apples. For lunch they handed out 19 to students and decided to use the rest to make pies. If each pie takes 8 apples, how many pies could they make? ", "executed": 7.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: The cafeteria had 75 apples. For lunch they handed out 19 to students and decided to use the rest to make pies. If each pie takes 8 apples, how many pies could they make?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    apples_left = 75\n    apples_left = apples_left - 19\n    pies = apples_left / 8\n    return pies\nans = solver()", "answer": 7.0}
{"question": " Sarah baked 38 cupcakes for her school's bake sale. If her brother, Todd, ate 14 of them how many packages could she make if she put 8 cupcake in each package? ", "executed": 3.0, "generated": "\nimport math\nimport numpy as np\n\n# Question: Sarah baked 38 cupcakes for her school's bake sale. If her brother, Todd, ate 14 of them how many packages could she make if she put 8 cupcake in each package?\n# Answer this question by implementing a solver() function.\ndef solver():\n    # Let's think step by step to derive the answer, and then return the answer\n    # In the first step, we can define the following variable:\n    total_cupcakes = 38\n    eaten_cupcakes = 14\n    cupcakes_per_package = 8\n    # In the second step, we can calculate the number of cupcakes left:\n    cupcakes_left = total_cupcakes - eaten_cupcakes\n    # In the third step, we can calculate the number of packages:\n    packages = cupcakes_left / cupcakes_per_package\n    return packages\nans = solver()", "answer": 3.0}
